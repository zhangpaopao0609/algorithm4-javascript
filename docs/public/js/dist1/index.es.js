var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var minimal$1 = {exports: {}};

var indexMinimal = {};

var minimal = {};

var aspromise = asPromise;
function asPromise(fn, ctx ) {
  var params = new Array(arguments.length - 1),
    offset = 0,
    index = 2,
    pending = true;
  while (index < arguments.length) params[offset++] = arguments[index++];
  return new Promise(function executor(resolve, reject) {
    params[offset] = function callback(err ) {
      if (pending) {
        pending = false;
        if (err) reject(err);else {
          var params = new Array(arguments.length - 1),
            offset = 0;
          while (offset < params.length) params[offset++] = arguments[offset];
          resolve.apply(null, params);
        }
      }
    };
    try {
      fn.apply(ctx || null, params);
    } catch (err) {
      if (pending) {
        pending = false;
        reject(err);
      }
    }
  });
}

var base64$1 = {};

(function (exports) {
  var base64 = exports;
  base64.length = function length(string) {
    var p = string.length;
    if (!p) return 0;
    var n = 0;
    while (--p % 4 > 1 && string.charAt(p) === "=") ++n;
    return Math.ceil(string.length * 3) / 4 - n;
  };
  var b64 = new Array(64);
  var s64 = new Array(123);
  for (var i = 0; i < 64;) s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;
  base64.encode = function encode(buffer, start, end) {
    var parts = null,
      chunk = [];
    var i = 0,
      j = 0,
      t;
    while (start < end) {
      var b = buffer[start++];
      switch (j) {
        case 0:
          chunk[i++] = b64[b >> 2];
          t = (b & 3) << 4;
          j = 1;
          break;
        case 1:
          chunk[i++] = b64[t | b >> 4];
          t = (b & 15) << 2;
          j = 2;
          break;
        case 2:
          chunk[i++] = b64[t | b >> 6];
          chunk[i++] = b64[b & 63];
          j = 0;
          break;
      }
      if (i > 8191) {
        (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
        i = 0;
      }
    }
    if (j) {
      chunk[i++] = b64[t];
      chunk[i++] = 61;
      if (j === 1) chunk[i++] = 61;
    }
    if (parts) {
      if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
      return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
  };
  var invalidEncoding = "invalid encoding";
  base64.decode = function decode(string, buffer, offset) {
    var start = offset;
    var j = 0,
      t;
    for (var i = 0; i < string.length;) {
      var c = string.charCodeAt(i++);
      if (c === 61 && j > 1) break;
      if ((c = s64[c]) === undefined) throw Error(invalidEncoding);
      switch (j) {
        case 0:
          t = c;
          j = 1;
          break;
        case 1:
          buffer[offset++] = t << 2 | (c & 48) >> 4;
          t = c;
          j = 2;
          break;
        case 2:
          buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
          t = c;
          j = 3;
          break;
        case 3:
          buffer[offset++] = (t & 3) << 6 | c;
          j = 0;
          break;
      }
    }
    if (j === 1) throw Error(invalidEncoding);
    return offset - start;
  };
  base64.test = function test(string) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
  };
})(base64$1);

var eventemitter = EventEmitter;
function EventEmitter() {
  this._listeners = {};
}
EventEmitter.prototype.on = function on(evt, fn, ctx) {
  (this._listeners[evt] || (this._listeners[evt] = [])).push({
    fn: fn,
    ctx: ctx || this
  });
  return this;
};
EventEmitter.prototype.off = function off(evt, fn) {
  if (evt === undefined) this._listeners = {};else {
    if (fn === undefined) this._listeners[evt] = [];else {
      var listeners = this._listeners[evt];
      for (var i = 0; i < listeners.length;) if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;
    }
  }
  return this;
};
EventEmitter.prototype.emit = function emit(evt) {
  var listeners = this._listeners[evt];
  if (listeners) {
    var args = [],
      i = 1;
    for (; i < arguments.length;) args.push(arguments[i++]);
    for (i = 0; i < listeners.length;) listeners[i].fn.apply(listeners[i++].ctx, args);
  }
  return this;
};

var float = factory(factory);
function factory(exports) {
  if (typeof Float32Array !== "undefined") (function () {
    var f32 = new Float32Array([-0]),
      f8b = new Uint8Array(f32.buffer),
      le = f8b[3] === 128;
    function writeFloat_f32_cpy(val, buf, pos) {
      f32[0] = val;
      buf[pos] = f8b[0];
      buf[pos + 1] = f8b[1];
      buf[pos + 2] = f8b[2];
      buf[pos + 3] = f8b[3];
    }
    function writeFloat_f32_rev(val, buf, pos) {
      f32[0] = val;
      buf[pos] = f8b[3];
      buf[pos + 1] = f8b[2];
      buf[pos + 2] = f8b[1];
      buf[pos + 3] = f8b[0];
    }
    exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
    exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;
    function readFloat_f32_cpy(buf, pos) {
      f8b[0] = buf[pos];
      f8b[1] = buf[pos + 1];
      f8b[2] = buf[pos + 2];
      f8b[3] = buf[pos + 3];
      return f32[0];
    }
    function readFloat_f32_rev(buf, pos) {
      f8b[3] = buf[pos];
      f8b[2] = buf[pos + 1];
      f8b[1] = buf[pos + 2];
      f8b[0] = buf[pos + 3];
      return f32[0];
    }
    exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
    exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;
  })();else (function () {
    function writeFloat_ieee754(writeUint, val, buf, pos) {
      var sign = val < 0 ? 1 : 0;
      if (sign) val = -val;
      if (val === 0) writeUint(1 / val > 0 ? 0 : 2147483648, buf, pos);else if (isNaN(val)) writeUint(2143289344, buf, pos);else if (val > 3.4028234663852886e+38)
        writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);else if (val < 1.1754943508222875e-38)
        writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);else {
        var exponent = Math.floor(Math.log(val) / Math.LN2),
          mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
        writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
      }
    }
    exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
    exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);
    function readFloat_ieee754(readUint, buf, pos) {
      var uint = readUint(buf, pos),
        sign = (uint >> 31) * 2 + 1,
        exponent = uint >>> 23 & 255,
        mantissa = uint & 8388607;
      return exponent === 255 ? mantissa ? NaN : sign * Infinity : exponent === 0
      ? sign * 1.401298464324817e-45 * mantissa : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
    }
    exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
    exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);
  })();
  if (typeof Float64Array !== "undefined") (function () {
    var f64 = new Float64Array([-0]),
      f8b = new Uint8Array(f64.buffer),
      le = f8b[7] === 128;
    function writeDouble_f64_cpy(val, buf, pos) {
      f64[0] = val;
      buf[pos] = f8b[0];
      buf[pos + 1] = f8b[1];
      buf[pos + 2] = f8b[2];
      buf[pos + 3] = f8b[3];
      buf[pos + 4] = f8b[4];
      buf[pos + 5] = f8b[5];
      buf[pos + 6] = f8b[6];
      buf[pos + 7] = f8b[7];
    }
    function writeDouble_f64_rev(val, buf, pos) {
      f64[0] = val;
      buf[pos] = f8b[7];
      buf[pos + 1] = f8b[6];
      buf[pos + 2] = f8b[5];
      buf[pos + 3] = f8b[4];
      buf[pos + 4] = f8b[3];
      buf[pos + 5] = f8b[2];
      buf[pos + 6] = f8b[1];
      buf[pos + 7] = f8b[0];
    }
    exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
    exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;
    function readDouble_f64_cpy(buf, pos) {
      f8b[0] = buf[pos];
      f8b[1] = buf[pos + 1];
      f8b[2] = buf[pos + 2];
      f8b[3] = buf[pos + 3];
      f8b[4] = buf[pos + 4];
      f8b[5] = buf[pos + 5];
      f8b[6] = buf[pos + 6];
      f8b[7] = buf[pos + 7];
      return f64[0];
    }
    function readDouble_f64_rev(buf, pos) {
      f8b[7] = buf[pos];
      f8b[6] = buf[pos + 1];
      f8b[5] = buf[pos + 2];
      f8b[4] = buf[pos + 3];
      f8b[3] = buf[pos + 4];
      f8b[2] = buf[pos + 5];
      f8b[1] = buf[pos + 6];
      f8b[0] = buf[pos + 7];
      return f64[0];
    }
    exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
    exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;
  })();else (function () {
    function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
      var sign = val < 0 ? 1 : 0;
      if (sign) val = -val;
      if (val === 0) {
        writeUint(0, buf, pos + off0);
        writeUint(1 / val > 0 ? 0 : 2147483648, buf, pos + off1);
      } else if (isNaN(val)) {
        writeUint(0, buf, pos + off0);
        writeUint(2146959360, buf, pos + off1);
      } else if (val > 1.7976931348623157e+308) {
        writeUint(0, buf, pos + off0);
        writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
      } else {
        var mantissa;
        if (val < 2.2250738585072014e-308) {
          mantissa = val / 5e-324;
          writeUint(mantissa >>> 0, buf, pos + off0);
          writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
        } else {
          var exponent = Math.floor(Math.log(val) / Math.LN2);
          if (exponent === 1024) exponent = 1023;
          mantissa = val * Math.pow(2, -exponent);
          writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
          writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
        }
      }
    }
    exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
    exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);
    function readDouble_ieee754(readUint, off0, off1, buf, pos) {
      var lo = readUint(buf, pos + off0),
        hi = readUint(buf, pos + off1);
      var sign = (hi >> 31) * 2 + 1,
        exponent = hi >>> 20 & 2047,
        mantissa = 4294967296 * (hi & 1048575) + lo;
      return exponent === 2047 ? mantissa ? NaN : sign * Infinity : exponent === 0
      ? sign * 5e-324 * mantissa : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
    }
    exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
    exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);
  })();
  return exports;
}
function writeUintLE(val, buf, pos) {
  buf[pos] = val & 255;
  buf[pos + 1] = val >>> 8 & 255;
  buf[pos + 2] = val >>> 16 & 255;
  buf[pos + 3] = val >>> 24;
}
function writeUintBE(val, buf, pos) {
  buf[pos] = val >>> 24;
  buf[pos + 1] = val >>> 16 & 255;
  buf[pos + 2] = val >>> 8 & 255;
  buf[pos + 3] = val & 255;
}
function readUintLE(buf, pos) {
  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;
}
function readUintBE(buf, pos) {
  return (buf[pos] << 24 | buf[pos + 1] << 16 | buf[pos + 2] << 8 | buf[pos + 3]) >>> 0;
}

var inquire_1 = inquire;
function inquire(moduleName) {
  try {
    var mod = eval("quire".replace(/^/, "re"))(moduleName);
    if (mod && (mod.length || Object.keys(mod).length)) return mod;
  } catch (e) {}
  return null;
}

var utf8$2 = {};

(function (exports) {
  var utf8 = exports;
  utf8.length = function utf8_length(string) {
    var len = 0,
      c = 0;
    for (var i = 0; i < string.length; ++i) {
      c = string.charCodeAt(i);
      if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
        ++i;
        len += 4;
      } else len += 3;
    }
    return len;
  };
  utf8.read = function utf8_read(buffer, start, end) {
    var len = end - start;
    if (len < 1) return "";
    var parts = null,
      chunk = [],
      i = 0,
      t;
    while (start < end) {
      t = buffer[start++];
      if (t < 128) chunk[i++] = t;else if (t > 191 && t < 224) chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;else if (t > 239 && t < 365) {
        t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
        chunk[i++] = 0xD800 + (t >> 10);
        chunk[i++] = 0xDC00 + (t & 1023);
      } else chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
      if (i > 8191) {
        (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
        i = 0;
      }
    }
    if (parts) {
      if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
      return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
  };
  utf8.write = function utf8_write(string, buffer, offset) {
    var start = offset,
      c1,
      c2;
    for (var i = 0; i < string.length; ++i) {
      c1 = string.charCodeAt(i);
      if (c1 < 128) {
        buffer[offset++] = c1;
      } else if (c1 < 2048) {
        buffer[offset++] = c1 >> 6 | 192;
        buffer[offset++] = c1 & 63 | 128;
      } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
        c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
        ++i;
        buffer[offset++] = c1 >> 18 | 240;
        buffer[offset++] = c1 >> 12 & 63 | 128;
        buffer[offset++] = c1 >> 6 & 63 | 128;
        buffer[offset++] = c1 & 63 | 128;
      } else {
        buffer[offset++] = c1 >> 12 | 224;
        buffer[offset++] = c1 >> 6 & 63 | 128;
        buffer[offset++] = c1 & 63 | 128;
      }
    }
    return offset - start;
  };
})(utf8$2);

var pool_1 = pool;
function pool(alloc, slice, size) {
  var SIZE = size || 8192;
  var MAX = SIZE >>> 1;
  var slab = null;
  var offset = SIZE;
  return function pool_alloc(size) {
    if (size < 1 || size > MAX) return alloc(size);
    if (offset + size > SIZE) {
      slab = alloc(SIZE);
      offset = 0;
    }
    var buf = slice.call(slab, offset, offset += size);
    if (offset & 7)
      offset = (offset | 7) + 1;
    return buf;
  };
}

var longbits;
var hasRequiredLongbits;
function requireLongbits() {
  if (hasRequiredLongbits) return longbits;
  hasRequiredLongbits = 1;
  longbits = LongBits;
  var util = requireMinimal();
  function LongBits(lo, hi) {
    this.lo = lo >>> 0;
    this.hi = hi >>> 0;
  }
  var zero = LongBits.zero = new LongBits(0, 0);
  zero.toNumber = function () {
    return 0;
  };
  zero.zzEncode = zero.zzDecode = function () {
    return this;
  };
  zero.length = function () {
    return 1;
  };
  var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";
  LongBits.fromNumber = function fromNumber(value) {
    if (value === 0) return zero;
    var sign = value < 0;
    if (sign) value = -value;
    var lo = value >>> 0,
      hi = (value - lo) / 4294967296 >>> 0;
    if (sign) {
      hi = ~hi >>> 0;
      lo = ~lo >>> 0;
      if (++lo > 4294967295) {
        lo = 0;
        if (++hi > 4294967295) hi = 0;
      }
    }
    return new LongBits(lo, hi);
  };
  LongBits.from = function from(value) {
    if (typeof value === "number") return LongBits.fromNumber(value);
    if (util.isString(value)) {
      if (util.Long) value = util.Long.fromString(value);else return LongBits.fromNumber(parseInt(value, 10));
    }
    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
  };
  LongBits.prototype.toNumber = function toNumber(unsigned) {
    if (!unsigned && this.hi >>> 31) {
      var lo = ~this.lo + 1 >>> 0,
        hi = ~this.hi >>> 0;
      if (!lo) hi = hi + 1 >>> 0;
      return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
  };
  LongBits.prototype.toLong = function toLong(unsigned) {
    return util.Long ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
     : {
      low: this.lo | 0,
      high: this.hi | 0,
      unsigned: Boolean(unsigned)
    };
  };
  var charCodeAt = String.prototype.charCodeAt;
  LongBits.fromHash = function fromHash(hash) {
    if (hash === zeroHash) return zero;
    return new LongBits((charCodeAt.call(hash, 0) | charCodeAt.call(hash, 1) << 8 | charCodeAt.call(hash, 2) << 16 | charCodeAt.call(hash, 3) << 24) >>> 0, (charCodeAt.call(hash, 4) | charCodeAt.call(hash, 5) << 8 | charCodeAt.call(hash, 6) << 16 | charCodeAt.call(hash, 7) << 24) >>> 0);
  };
  LongBits.prototype.toHash = function toHash() {
    return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
  };
  LongBits.prototype.zzEncode = function zzEncode() {
    var mask = this.hi >> 31;
    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
    this.lo = (this.lo << 1 ^ mask) >>> 0;
    return this;
  };
  LongBits.prototype.zzDecode = function zzDecode() {
    var mask = -(this.lo & 1);
    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
    this.hi = (this.hi >>> 1 ^ mask) >>> 0;
    return this;
  };
  LongBits.prototype.length = function length() {
    var part0 = this.lo,
      part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
      part2 = this.hi >>> 24;
    return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
  };
  return longbits;
}

var hasRequiredMinimal;
function requireMinimal() {
  if (hasRequiredMinimal) return minimal;
  hasRequiredMinimal = 1;
  (function (exports) {
    var util = exports;
    util.asPromise = aspromise;
    util.base64 = base64$1;
    util.EventEmitter = eventemitter;
    util.float = float;
    util.inquire = inquire_1;
    util.utf8 = utf8$2;
    util.pool = pool_1;
    util.LongBits = requireLongbits();
    util.isNode = Boolean(typeof commonjsGlobal !== "undefined" && commonjsGlobal && commonjsGlobal.process && commonjsGlobal.process.versions && commonjsGlobal.process.versions.node);
    util.global = util.isNode && commonjsGlobal || typeof window !== "undefined" && window || typeof self !== "undefined" && self || commonjsGlobal;
    util.emptyArray = Object.freeze ? Object.freeze([]) : [];
    util.emptyObject = Object.freeze ? Object.freeze({}) : {};
    util.isInteger = Number.isInteger || function isInteger(value) {
      return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
    };
    util.isString = function isString(value) {
      return typeof value === "string" || value instanceof String;
    };
    util.isObject = function isObject(value) {
      return value && typeof value === "object";
    };
    util.isset =
    util.isSet = function isSet(obj, prop) {
      var value = obj[prop];
      if (value != null && obj.hasOwnProperty(prop))
        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
      return false;
    };
    util.Buffer = function () {
      try {
        var Buffer = util.inquire("buffer").Buffer;
        return Buffer.prototype.utf8Write ? Buffer : null;
      } catch (e) {
        return null;
      }
    }();
    util._Buffer_from = null;
    util._Buffer_allocUnsafe = null;
    util.newBuffer = function newBuffer(sizeOrArray) {
      return typeof sizeOrArray === "number" ? util.Buffer ? util._Buffer_allocUnsafe(sizeOrArray) : new util.Array(sizeOrArray) : util.Buffer ? util._Buffer_from(sizeOrArray) : typeof Uint8Array === "undefined" ? sizeOrArray : new Uint8Array(sizeOrArray);
    };
    util.Array = typeof Uint8Array !== "undefined" ? Uint8Array  : Array;
    util.Long = util.global.dcodeIO && util.global.dcodeIO.Long || util.global.Long || util.inquire("long");
    util.key2Re = /^true|false|0|1$/;
    util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
    util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
    util.longToHash = function longToHash(value) {
      return value ? util.LongBits.from(value).toHash() : util.LongBits.zeroHash;
    };
    util.longFromHash = function longFromHash(hash, unsigned) {
      var bits = util.LongBits.fromHash(hash);
      if (util.Long) return util.Long.fromBits(bits.lo, bits.hi, unsigned);
      return bits.toNumber(Boolean(unsigned));
    };
    function merge(dst, src, ifNotSet) {
      for (var keys = Object.keys(src), i = 0; i < keys.length; ++i) if (dst[keys[i]] === undefined || !ifNotSet) dst[keys[i]] = src[keys[i]];
      return dst;
    }
    util.merge = merge;
    util.lcFirst = function lcFirst(str) {
      return str.charAt(0).toLowerCase() + str.substring(1);
    };
    function newError(name) {
      function CustomError(message, properties) {
        if (!(this instanceof CustomError)) return new CustomError(message, properties);
        Object.defineProperty(this, "message", {
          get: function () {
            return message;
          }
        });
        if (Error.captureStackTrace)
          Error.captureStackTrace(this, CustomError);else Object.defineProperty(this, "stack", {
          value: new Error().stack || ""
        });
        if (properties) merge(this, properties);
      }
      CustomError.prototype = Object.create(Error.prototype, {
        constructor: {
          value: CustomError,
          writable: true,
          enumerable: false,
          configurable: true
        },
        name: {
          get: function get() {
            return name;
          },
          set: undefined,
          enumerable: false,
          configurable: true
        },
        toString: {
          value: function value() {
            return this.name + ": " + this.message;
          },
          writable: true,
          enumerable: false,
          configurable: true
        }
      });
      return CustomError;
    }
    util.newError = newError;
    util.ProtocolError = newError("ProtocolError");
    util.oneOfGetter = function getOneOf(fieldNames) {
      var fieldMap = {};
      for (var i = 0; i < fieldNames.length; ++i) fieldMap[fieldNames[i]] = 1;
      return function () {
        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i) if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null) return keys[i];
      };
    };
    util.oneOfSetter = function setOneOf(fieldNames) {
      return function (name) {
        for (var i = 0; i < fieldNames.length; ++i) if (fieldNames[i] !== name) delete this[fieldNames[i]];
      };
    };
    util.toJSONOptions = {
      longs: String,
      enums: String,
      bytes: String,
      json: true
    };
    util._configure = function () {
      var Buffer = util.Buffer;
      if (!Buffer) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
      }
      util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
      function Buffer_from(value, encoding) {
        return new Buffer(value, encoding);
      };
      util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
      function Buffer_allocUnsafe(size) {
        return new Buffer(size);
      };
    };
  })(minimal);
  return minimal;
}

var writer = Writer$1;
var util$4 = requireMinimal();
var BufferWriter$1;
var LongBits$1 = util$4.LongBits,
  base64 = util$4.base64,
  utf8$1 = util$4.utf8;
function Op(fn, len, val) {
  this.fn = fn;
  this.len = len;
  this.next = undefined;
  this.val = val;
}
function noop$1() {}
function State(writer) {
  this.head = writer.head;
  this.tail = writer.tail;
  this.len = writer.len;
  this.next = writer.states;
}
function Writer$1() {
  this.len = 0;
  this.head = new Op(noop$1, 0, 0);
  this.tail = this.head;
  this.states = null;
}
var create$2 = function create() {
  return util$4.Buffer ? function create_buffer_setup() {
    return (Writer$1.create = function create_buffer() {
      return new BufferWriter$1();
    })();
  }
   : function create_array() {
    return new Writer$1();
  };
};
Writer$1.create = create$2();
Writer$1.alloc = function alloc(size) {
  return new util$4.Array(size);
};
if (util$4.Array !== Array) Writer$1.alloc = util$4.pool(Writer$1.alloc, util$4.Array.prototype.subarray);
Writer$1.prototype._push = function push(fn, len, val) {
  this.tail = this.tail.next = new Op(fn, len, val);
  this.len += len;
  return this;
};
function writeByte(val, buf, pos) {
  buf[pos] = val & 255;
}
function writeVarint32(val, buf, pos) {
  while (val > 127) {
    buf[pos++] = val & 127 | 128;
    val >>>= 7;
  }
  buf[pos] = val;
}
function VarintOp(len, val) {
  this.len = len;
  this.next = undefined;
  this.val = val;
}
VarintOp.prototype = Object.create(Op.prototype);
VarintOp.prototype.fn = writeVarint32;
Writer$1.prototype.uint32 = function write_uint32(value) {
  this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;
  return this;
};
Writer$1.prototype.int32 = function write_int32(value) {
  return value < 0 ? this._push(writeVarint64, 10, LongBits$1.fromNumber(value))
  : this.uint32(value);
};
Writer$1.prototype.sint32 = function write_sint32(value) {
  return this.uint32((value << 1 ^ value >> 31) >>> 0);
};
function writeVarint64(val, buf, pos) {
  while (val.hi) {
    buf[pos++] = val.lo & 127 | 128;
    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
    val.hi >>>= 7;
  }
  while (val.lo > 127) {
    buf[pos++] = val.lo & 127 | 128;
    val.lo = val.lo >>> 7;
  }
  buf[pos++] = val.lo;
}
Writer$1.prototype.uint64 = function write_uint64(value) {
  var bits = LongBits$1.from(value);
  return this._push(writeVarint64, bits.length(), bits);
};
Writer$1.prototype.int64 = Writer$1.prototype.uint64;
Writer$1.prototype.sint64 = function write_sint64(value) {
  var bits = LongBits$1.from(value).zzEncode();
  return this._push(writeVarint64, bits.length(), bits);
};
Writer$1.prototype.bool = function write_bool(value) {
  return this._push(writeByte, 1, value ? 1 : 0);
};
function writeFixed32(val, buf, pos) {
  buf[pos] = val & 255;
  buf[pos + 1] = val >>> 8 & 255;
  buf[pos + 2] = val >>> 16 & 255;
  buf[pos + 3] = val >>> 24;
}
Writer$1.prototype.fixed32 = function write_fixed32(value) {
  return this._push(writeFixed32, 4, value >>> 0);
};
Writer$1.prototype.sfixed32 = Writer$1.prototype.fixed32;
Writer$1.prototype.fixed64 = function write_fixed64(value) {
  var bits = LongBits$1.from(value);
  return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
};
Writer$1.prototype.sfixed64 = Writer$1.prototype.fixed64;
Writer$1.prototype.float = function write_float(value) {
  return this._push(util$4.float.writeFloatLE, 4, value);
};
Writer$1.prototype.double = function write_double(value) {
  return this._push(util$4.float.writeDoubleLE, 8, value);
};
var writeBytes = util$4.Array.prototype.set ? function writeBytes_set(val, buf, pos) {
  buf.set(val, pos);
}
 : function writeBytes_for(val, buf, pos) {
  for (var i = 0; i < val.length; ++i) buf[pos + i] = val[i];
};
Writer$1.prototype.bytes = function write_bytes(value) {
  var len = value.length >>> 0;
  if (!len) return this._push(writeByte, 1, 0);
  if (util$4.isString(value)) {
    var buf = Writer$1.alloc(len = base64.length(value));
    base64.decode(value, buf, 0);
    value = buf;
  }
  return this.uint32(len)._push(writeBytes, len, value);
};
Writer$1.prototype.string = function write_string(value) {
  var len = utf8$1.length(value);
  return len ? this.uint32(len)._push(utf8$1.write, len, value) : this._push(writeByte, 1, 0);
};
Writer$1.prototype.fork = function fork() {
  this.states = new State(this);
  this.head = this.tail = new Op(noop$1, 0, 0);
  this.len = 0;
  return this;
};
Writer$1.prototype.reset = function reset() {
  if (this.states) {
    this.head = this.states.head;
    this.tail = this.states.tail;
    this.len = this.states.len;
    this.states = this.states.next;
  } else {
    this.head = this.tail = new Op(noop$1, 0, 0);
    this.len = 0;
  }
  return this;
};
Writer$1.prototype.ldelim = function ldelim() {
  var head = this.head,
    tail = this.tail,
    len = this.len;
  this.reset().uint32(len);
  if (len) {
    this.tail.next = head.next;
    this.tail = tail;
    this.len += len;
  }
  return this;
};
Writer$1.prototype.finish = function finish() {
  var head = this.head.next,
    buf = this.constructor.alloc(this.len),
    pos = 0;
  while (head) {
    head.fn(head.val, buf, pos);
    pos += head.len;
    head = head.next;
  }
  return buf;
};
Writer$1._configure = function (BufferWriter_) {
  BufferWriter$1 = BufferWriter_;
  Writer$1.create = create$2();
  BufferWriter$1._configure();
};

var writer_buffer = BufferWriter;
var Writer = writer;
(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;
var util$3 = requireMinimal();
function BufferWriter() {
  Writer.call(this);
}
BufferWriter._configure = function () {
  BufferWriter.alloc = util$3._Buffer_allocUnsafe;
  BufferWriter.writeBytesBuffer = util$3.Buffer && util$3.Buffer.prototype instanceof Uint8Array && util$3.Buffer.prototype.set.name === "set" ? function writeBytesBuffer_set(val, buf, pos) {
    buf.set(val, pos);
  }
   : function writeBytesBuffer_copy(val, buf, pos) {
    if (val.copy)
      val.copy(buf, pos, 0, val.length);else for (var i = 0; i < val.length;)
    buf[pos++] = val[i++];
  };
};
BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
  if (util$3.isString(value)) value = util$3._Buffer_from(value, "base64");
  var len = value.length >>> 0;
  this.uint32(len);
  if (len) this._push(BufferWriter.writeBytesBuffer, len, value);
  return this;
};
function writeStringBuffer(val, buf, pos) {
  if (val.length < 40)
    util$3.utf8.write(val, buf, pos);else if (buf.utf8Write) buf.utf8Write(val, pos);else buf.write(val, pos);
}
BufferWriter.prototype.string = function write_string_buffer(value) {
  var len = util$3.Buffer.byteLength(value);
  this.uint32(len);
  if (len) this._push(writeStringBuffer, len, value);
  return this;
};
BufferWriter._configure();

var reader = Reader$1;
var util$2 = requireMinimal();
var BufferReader$1;
var LongBits = util$2.LongBits,
  utf8 = util$2.utf8;
function indexOutOfRange(reader, writeLength) {
  return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}
function Reader$1(buffer) {
  this.buf = buffer;
  this.pos = 0;
  this.len = buffer.length;
}
var create_array = typeof Uint8Array !== "undefined" ? function create_typed_array(buffer) {
  if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader$1(buffer);
  throw Error("illegal buffer");
}
 : function create_array(buffer) {
  if (Array.isArray(buffer)) return new Reader$1(buffer);
  throw Error("illegal buffer");
};
var create$1 = function create() {
  return util$2.Buffer ? function create_buffer_setup(buffer) {
    return (Reader$1.create = function create_buffer(buffer) {
      return util$2.Buffer.isBuffer(buffer) ? new BufferReader$1(buffer)
       : create_array(buffer);
    })(buffer);
  }
   : create_array;
};
Reader$1.create = create$1();
Reader$1.prototype._slice = util$2.Array.prototype.subarray || util$2.Array.prototype.slice;
Reader$1.prototype.uint32 = function read_uint32_setup() {
  var value = 4294967295;
  return function read_uint32() {
    value = (this.buf[this.pos] & 127) >>> 0;
    if (this.buf[this.pos++] < 128) return value;
    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;
    if (this.buf[this.pos++] < 128) return value;
    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;
    if (this.buf[this.pos++] < 128) return value;
    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;
    if (this.buf[this.pos++] < 128) return value;
    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;
    if (this.buf[this.pos++] < 128) return value;
    if ((this.pos += 5) > this.len) {
      this.pos = this.len;
      throw indexOutOfRange(this, 10);
    }
    return value;
  };
}();
Reader$1.prototype.int32 = function read_int32() {
  return this.uint32() | 0;
};
Reader$1.prototype.sint32 = function read_sint32() {
  var value = this.uint32();
  return value >>> 1 ^ -(value & 1) | 0;
};
function readLongVarint() {
  var bits = new LongBits(0, 0);
  var i = 0;
  if (this.len - this.pos > 4) {
    for (; i < 4; ++i) {
      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
      if (this.buf[this.pos++] < 128) return bits;
    }
    bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
    bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;
    if (this.buf[this.pos++] < 128) return bits;
    i = 0;
  } else {
    for (; i < 3; ++i) {
      if (this.pos >= this.len) throw indexOutOfRange(this);
      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
      if (this.buf[this.pos++] < 128) return bits;
    }
    bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
    return bits;
  }
  if (this.len - this.pos > 4) {
    for (; i < 5; ++i) {
      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
      if (this.buf[this.pos++] < 128) return bits;
    }
  } else {
    for (; i < 5; ++i) {
      if (this.pos >= this.len) throw indexOutOfRange(this);
      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
      if (this.buf[this.pos++] < 128) return bits;
    }
  }
  throw Error("invalid varint encoding");
}
Reader$1.prototype.bool = function read_bool() {
  return this.uint32() !== 0;
};
function readFixed32_end(buf, end) {
  return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;
}
Reader$1.prototype.fixed32 = function read_fixed32() {
  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
  return readFixed32_end(this.buf, this.pos += 4);
};
Reader$1.prototype.sfixed32 = function read_sfixed32() {
  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
  return readFixed32_end(this.buf, this.pos += 4) | 0;
};
function readFixed64(
) {
  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);
  return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
}
Reader$1.prototype.float = function read_float() {
  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
  var value = util$2.float.readFloatLE(this.buf, this.pos);
  this.pos += 4;
  return value;
};
Reader$1.prototype.double = function read_double() {
  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);
  var value = util$2.float.readDoubleLE(this.buf, this.pos);
  this.pos += 8;
  return value;
};
Reader$1.prototype.bytes = function read_bytes() {
  var length = this.uint32(),
    start = this.pos,
    end = this.pos + length;
  if (end > this.len) throw indexOutOfRange(this, length);
  this.pos += length;
  if (Array.isArray(this.buf))
    return this.buf.slice(start, end);
  if (start === end) {
    var nativeBuffer = util$2.Buffer;
    return nativeBuffer ? nativeBuffer.alloc(0) : new this.buf.constructor(0);
  }
  return this._slice.call(this.buf, start, end);
};
Reader$1.prototype.string = function read_string() {
  var bytes = this.bytes();
  return utf8.read(bytes, 0, bytes.length);
};
Reader$1.prototype.skip = function skip(length) {
  if (typeof length === "number") {
    if (this.pos + length > this.len) throw indexOutOfRange(this, length);
    this.pos += length;
  } else {
    do {
      if (this.pos >= this.len) throw indexOutOfRange(this);
    } while (this.buf[this.pos++] & 128);
  }
  return this;
};
Reader$1.prototype.skipType = function (wireType) {
  switch (wireType) {
    case 0:
      this.skip();
      break;
    case 1:
      this.skip(8);
      break;
    case 2:
      this.skip(this.uint32());
      break;
    case 3:
      while ((wireType = this.uint32() & 7) !== 4) {
        this.skipType(wireType);
      }
      break;
    case 5:
      this.skip(4);
      break;
    default:
      throw Error("invalid wire type " + wireType + " at offset " + this.pos);
  }
  return this;
};
Reader$1._configure = function (BufferReader_) {
  BufferReader$1 = BufferReader_;
  Reader$1.create = create$1();
  BufferReader$1._configure();
  var fn = util$2.Long ? "toLong" : "toNumber";
  util$2.merge(Reader$1.prototype, {
    int64: function read_int64() {
      return readLongVarint.call(this)[fn](false);
    },
    uint64: function read_uint64() {
      return readLongVarint.call(this)[fn](true);
    },
    sint64: function read_sint64() {
      return readLongVarint.call(this).zzDecode()[fn](false);
    },
    fixed64: function read_fixed64() {
      return readFixed64.call(this)[fn](true);
    },
    sfixed64: function read_sfixed64() {
      return readFixed64.call(this)[fn](false);
    }
  });
};

var reader_buffer = BufferReader;
var Reader = reader;
(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;
var util$1 = requireMinimal();
function BufferReader(buffer) {
  Reader.call(this, buffer);
}
BufferReader._configure = function () {
  if (util$1.Buffer) BufferReader.prototype._slice = util$1.Buffer.prototype.slice;
};
BufferReader.prototype.string = function read_string_buffer() {
  var len = this.uint32();
  return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
};
BufferReader._configure();

var rpc = {};

var service = Service;
var util = requireMinimal();
(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;
function Service(rpcImpl, requestDelimited, responseDelimited) {
  if (typeof rpcImpl !== "function") throw TypeError("rpcImpl must be a function");
  util.EventEmitter.call(this);
  this.rpcImpl = rpcImpl;
  this.requestDelimited = Boolean(requestDelimited);
  this.responseDelimited = Boolean(responseDelimited);
}
Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {
  if (!request) throw TypeError("request must be specified");
  var self = this;
  if (!callback) return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);
  if (!self.rpcImpl) {
    setTimeout(function () {
      callback(Error("already ended"));
    }, 0);
    return undefined;
  }
  try {
    return self.rpcImpl(method, requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(), function rpcCallback(err, response) {
      if (err) {
        self.emit("error", err, method);
        return callback(err);
      }
      if (response === null) {
        self.end(true);
        return undefined;
      }
      if (!(response instanceof responseCtor)) {
        try {
          response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
        } catch (err) {
          self.emit("error", err, method);
          return callback(err);
        }
      }
      self.emit("data", response, method);
      return callback(null, response);
    });
  } catch (err) {
    self.emit("error", err, method);
    setTimeout(function () {
      callback(err);
    }, 0);
    return undefined;
  }
};
Service.prototype.end = function end(endedByRPC) {
  if (this.rpcImpl) {
    if (!endedByRPC)
      this.rpcImpl(null, null, null);
    this.rpcImpl = null;
    this.emit("end").off();
  }
  return this;
};

(function (exports) {
  var rpc = exports;
  rpc.Service = service;
})(rpc);

var roots = {};

(function (exports) {
  var protobuf = exports;
  protobuf.build = "minimal";
  protobuf.Writer = writer;
  protobuf.BufferWriter = writer_buffer;
  protobuf.Reader = reader;
  protobuf.BufferReader = reader_buffer;
  protobuf.util = requireMinimal();
  protobuf.rpc = rpc;
  protobuf.roots = roots;
  protobuf.configure = configure;
  function configure() {
    protobuf.util._configure();
    protobuf.Writer._configure(protobuf.BufferWriter);
    protobuf.Reader._configure(protobuf.BufferReader);
  }
  configure();
})(indexMinimal);

(function (module) {
  module.exports = indexMinimal;
})(minimal$1);
getDefaultExportFromCjs(minimal$1.exports);

var $Reader=minimal$1.exports.Reader,$Writer=minimal$1.exports.Writer,$util=minimal$1.exports.util;
var $root=minimal$1.exports.roots["default"]||(minimal$1.exports.roots["default"]={});var BatchEncodedPayloads=$root.BatchEncodedPayloads=(()=>{
function BatchEncodedPayloads(properties){this.batches=[];this.compressChannelInstanceIds=[];this.compressChannelInstanceSeqs=[];this.compressChannelInstanceLengths=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
BatchEncodedPayloads.prototype.batches=$util.emptyArray;
BatchEncodedPayloads.prototype.compressChannelInstanceIds=$util.emptyArray;
BatchEncodedPayloads.prototype.compressChannelInstanceSeqs=$util.emptyArray;
BatchEncodedPayloads.prototype.compressChannelInstanceLengths=$util.emptyArray;
BatchEncodedPayloads.create=function create(properties){return new BatchEncodedPayloads(properties);};
BatchEncodedPayloads.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.batches!=null&&message.batches.length)for(var i=0;i<message.batches.length;++i)writer.uint32(10).bytes(message.batches[i]);if(message.compressChannelInstanceIds!=null&&message.compressChannelInstanceIds.length)for(var _i=0;_i<message.compressChannelInstanceIds.length;++_i)writer.uint32(18).string(message.compressChannelInstanceIds[_i]);if(message.compressChannelInstanceSeqs!=null&&message.compressChannelInstanceSeqs.length)for(var _i2=0;_i2<message.compressChannelInstanceSeqs.length;++_i2)writer.uint32(24).int32(message.compressChannelInstanceSeqs[_i2]);if(message.compressChannelInstanceLengths!=null&&message.compressChannelInstanceLengths.length)for(var _i3=0;_i3<message.compressChannelInstanceLengths.length;++_i3)writer.uint32(32).int32(message.compressChannelInstanceLengths[_i3]);return writer;};
BatchEncodedPayloads.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
BatchEncodedPayloads.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.BatchEncodedPayloads();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{if(!(message.batches&&message.batches.length))message.batches=[];message.batches.push(reader.bytes());break;}case 2:{if(!(message.compressChannelInstanceIds&&message.compressChannelInstanceIds.length))message.compressChannelInstanceIds=[];message.compressChannelInstanceIds.push(reader.string());break;}case 3:{if(!(message.compressChannelInstanceSeqs&&message.compressChannelInstanceSeqs.length))message.compressChannelInstanceSeqs=[];if((tag&7)===2){var end2=reader.uint32()+reader.pos;while(reader.pos<end2)message.compressChannelInstanceSeqs.push(reader.int32());}else message.compressChannelInstanceSeqs.push(reader.int32());break;}case 4:{if(!(message.compressChannelInstanceLengths&&message.compressChannelInstanceLengths.length))message.compressChannelInstanceLengths=[];if((tag&7)===2){var _end=reader.uint32()+reader.pos;while(reader.pos<_end)message.compressChannelInstanceLengths.push(reader.int32());}else message.compressChannelInstanceLengths.push(reader.int32());break;}default:reader.skipType(tag&7);break;}}return message;};
BatchEncodedPayloads.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
BatchEncodedPayloads.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.batches!=null&&message.hasOwnProperty("batches")){if(!Array.isArray(message.batches))return "batches: array expected";for(var i=0;i<message.batches.length;++i)if(!(message.batches[i]&&typeof message.batches[i].length==="number"||$util.isString(message.batches[i])))return "batches: buffer[] expected";}if(message.compressChannelInstanceIds!=null&&message.hasOwnProperty("compressChannelInstanceIds")){if(!Array.isArray(message.compressChannelInstanceIds))return "compressChannelInstanceIds: array expected";for(var _i4=0;_i4<message.compressChannelInstanceIds.length;++_i4)if(!$util.isString(message.compressChannelInstanceIds[_i4]))return "compressChannelInstanceIds: string[] expected";}if(message.compressChannelInstanceSeqs!=null&&message.hasOwnProperty("compressChannelInstanceSeqs")){if(!Array.isArray(message.compressChannelInstanceSeqs))return "compressChannelInstanceSeqs: array expected";for(var _i5=0;_i5<message.compressChannelInstanceSeqs.length;++_i5)if(!$util.isInteger(message.compressChannelInstanceSeqs[_i5]))return "compressChannelInstanceSeqs: integer[] expected";}if(message.compressChannelInstanceLengths!=null&&message.hasOwnProperty("compressChannelInstanceLengths")){if(!Array.isArray(message.compressChannelInstanceLengths))return "compressChannelInstanceLengths: array expected";for(var _i6=0;_i6<message.compressChannelInstanceLengths.length;++_i6)if(!$util.isInteger(message.compressChannelInstanceLengths[_i6]))return "compressChannelInstanceLengths: integer[] expected";}return null;};
BatchEncodedPayloads.fromObject=function fromObject(object){if(object instanceof $root.BatchEncodedPayloads)return object;var message=new $root.BatchEncodedPayloads();if(object.batches){if(!Array.isArray(object.batches))throw TypeError(".BatchEncodedPayloads.batches: array expected");message.batches=[];for(var i=0;i<object.batches.length;++i)if(typeof object.batches[i]==="string")$util.base64.decode(object.batches[i],message.batches[i]=$util.newBuffer($util.base64.length(object.batches[i])),0);else if(object.batches[i].length>=0)message.batches[i]=object.batches[i];}if(object.compressChannelInstanceIds){if(!Array.isArray(object.compressChannelInstanceIds))throw TypeError(".BatchEncodedPayloads.compressChannelInstanceIds: array expected");message.compressChannelInstanceIds=[];for(var _i7=0;_i7<object.compressChannelInstanceIds.length;++_i7)message.compressChannelInstanceIds[_i7]=String(object.compressChannelInstanceIds[_i7]);}if(object.compressChannelInstanceSeqs){if(!Array.isArray(object.compressChannelInstanceSeqs))throw TypeError(".BatchEncodedPayloads.compressChannelInstanceSeqs: array expected");message.compressChannelInstanceSeqs=[];for(var _i8=0;_i8<object.compressChannelInstanceSeqs.length;++_i8)message.compressChannelInstanceSeqs[_i8]=object.compressChannelInstanceSeqs[_i8]|0;}if(object.compressChannelInstanceLengths){if(!Array.isArray(object.compressChannelInstanceLengths))throw TypeError(".BatchEncodedPayloads.compressChannelInstanceLengths: array expected");message.compressChannelInstanceLengths=[];for(var _i9=0;_i9<object.compressChannelInstanceLengths.length;++_i9)message.compressChannelInstanceLengths[_i9]=object.compressChannelInstanceLengths[_i9]|0;}return message;};
BatchEncodedPayloads.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.batches=[];object.compressChannelInstanceIds=[];object.compressChannelInstanceSeqs=[];object.compressChannelInstanceLengths=[];}if(message.batches&&message.batches.length){object.batches=[];for(var j=0;j<message.batches.length;++j)object.batches[j]=options.bytes===String?$util.base64.encode(message.batches[j],0,message.batches[j].length):options.bytes===Array?Array.prototype.slice.call(message.batches[j]):message.batches[j];}if(message.compressChannelInstanceIds&&message.compressChannelInstanceIds.length){object.compressChannelInstanceIds=[];for(var _j=0;_j<message.compressChannelInstanceIds.length;++_j)object.compressChannelInstanceIds[_j]=message.compressChannelInstanceIds[_j];}if(message.compressChannelInstanceSeqs&&message.compressChannelInstanceSeqs.length){object.compressChannelInstanceSeqs=[];for(var _j2=0;_j2<message.compressChannelInstanceSeqs.length;++_j2)object.compressChannelInstanceSeqs[_j2]=message.compressChannelInstanceSeqs[_j2];}if(message.compressChannelInstanceLengths&&message.compressChannelInstanceLengths.length){object.compressChannelInstanceLengths=[];for(var _j3=0;_j3<message.compressChannelInstanceLengths.length;++_j3)object.compressChannelInstanceLengths[_j3]=message.compressChannelInstanceLengths[_j3];}return object;};
BatchEncodedPayloads.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
BatchEncodedPayloads.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/BatchEncodedPayloads";};return BatchEncodedPayloads;})();var BatchPayload=$root.BatchPayload=(()=>{
function BatchPayload(properties){this.events=[];this.webviewIds=[];this.seqs=[];this.paths=[];this.eventFroms=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
BatchPayload.prototype.uuid="";
BatchPayload.prototype.seq=$util.Long?$util.Long.fromBits(0,0,false):0;
BatchPayload.prototype.events=$util.emptyArray;
BatchPayload.prototype.webviewId=0;
BatchPayload.prototype.path="";
BatchPayload.prototype.projectKey="";
BatchPayload.prototype.sdkVersion="";
BatchPayload.prototype.type=0;
BatchPayload.prototype.timestamp=$util.Long?$util.Long.fromBits(0,0,false):0;
BatchPayload.prototype.webviewIds=$util.emptyArray;
BatchPayload.prototype.seqs=$util.emptyArray;
BatchPayload.prototype.paths=$util.emptyArray;
BatchPayload.prototype.eventFroms=$util.emptyArray;
BatchPayload.prototype.weSessionId="";
BatchPayload.prototype.wesessionScene=0;
BatchPayload.prototype.wesessionSceneNote="";
BatchPayload.prototype.isWesessionEntrance=0;
BatchPayload.prototype.openSource=0;
BatchPayload.create=function create(properties){return new BatchPayload(properties);};
BatchPayload.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.uuid!=null&&Object.hasOwnProperty.call(message,"uuid"))writer.uint32(10).string(message.uuid);if(message.seq!=null&&Object.hasOwnProperty.call(message,"seq"))writer.uint32(16).int64(message.seq);if(message.events!=null&&message.events.length)for(var i=0;i<message.events.length;++i)$root.Event.encode(message.events[i],writer.uint32(26).fork()).ldelim();if(message.webviewId!=null&&Object.hasOwnProperty.call(message,"webviewId"))writer.uint32(32).int32(message.webviewId);if(message.path!=null&&Object.hasOwnProperty.call(message,"path"))writer.uint32(42).string(message.path);if(message.projectKey!=null&&Object.hasOwnProperty.call(message,"projectKey"))writer.uint32(50).string(message.projectKey);if(message.sdkVersion!=null&&Object.hasOwnProperty.call(message,"sdkVersion"))writer.uint32(58).string(message.sdkVersion);if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(64).int32(message.type);if(message.timestamp!=null&&Object.hasOwnProperty.call(message,"timestamp"))writer.uint32(72).int64(message.timestamp);if(message.webviewIds!=null&&message.webviewIds.length){writer.uint32(82).fork();for(var _i10=0;_i10<message.webviewIds.length;++_i10)writer.sint32(message.webviewIds[_i10]);writer.ldelim();}if(message.seqs!=null&&message.seqs.length){writer.uint32(90).fork();for(var _i11=0;_i11<message.seqs.length;++_i11)writer.int64(message.seqs[_i11]);writer.ldelim();}if(message.paths!=null&&message.paths.length)for(var _i12=0;_i12<message.paths.length;++_i12)writer.uint32(98).string(message.paths[_i12]);if(message.eventFroms!=null&&message.eventFroms.length){writer.uint32(106).fork();for(var _i13=0;_i13<message.eventFroms.length;++_i13)writer.sint32(message.eventFroms[_i13]);writer.ldelim();}if(message.weSessionId!=null&&Object.hasOwnProperty.call(message,"weSessionId"))writer.uint32(114).string(message.weSessionId);if(message.wesessionScene!=null&&Object.hasOwnProperty.call(message,"wesessionScene"))writer.uint32(120).uint32(message.wesessionScene);if(message.wesessionSceneNote!=null&&Object.hasOwnProperty.call(message,"wesessionSceneNote"))writer.uint32(130).string(message.wesessionSceneNote);if(message.isWesessionEntrance!=null&&Object.hasOwnProperty.call(message,"isWesessionEntrance"))writer.uint32(136).uint32(message.isWesessionEntrance);if(message.openSource!=null&&Object.hasOwnProperty.call(message,"openSource"))writer.uint32(144).uint32(message.openSource);return writer;};
BatchPayload.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
BatchPayload.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.BatchPayload();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.uuid=reader.string();break;}case 2:{message.seq=reader.int64();break;}case 3:{if(!(message.events&&message.events.length))message.events=[];message.events.push($root.Event.decode(reader,reader.uint32()));break;}case 4:{message.webviewId=reader.int32();break;}case 5:{message.path=reader.string();break;}case 6:{message.projectKey=reader.string();break;}case 7:{message.sdkVersion=reader.string();break;}case 8:{message.type=reader.int32();break;}case 9:{message.timestamp=reader.int64();break;}case 10:{if(!(message.webviewIds&&message.webviewIds.length))message.webviewIds=[];if((tag&7)===2){var end2=reader.uint32()+reader.pos;while(reader.pos<end2)message.webviewIds.push(reader.sint32());}else message.webviewIds.push(reader.sint32());break;}case 11:{if(!(message.seqs&&message.seqs.length))message.seqs=[];if((tag&7)===2){var _end2=reader.uint32()+reader.pos;while(reader.pos<_end2)message.seqs.push(reader.int64());}else message.seqs.push(reader.int64());break;}case 12:{if(!(message.paths&&message.paths.length))message.paths=[];message.paths.push(reader.string());break;}case 13:{if(!(message.eventFroms&&message.eventFroms.length))message.eventFroms=[];if((tag&7)===2){var _end3=reader.uint32()+reader.pos;while(reader.pos<_end3)message.eventFroms.push(reader.sint32());}else message.eventFroms.push(reader.sint32());break;}case 14:{message.weSessionId=reader.string();break;}case 15:{message.wesessionScene=reader.uint32();break;}case 16:{message.wesessionSceneNote=reader.string();break;}case 17:{message.isWesessionEntrance=reader.uint32();break;}case 18:{message.openSource=reader.uint32();break;}default:reader.skipType(tag&7);break;}}return message;};
BatchPayload.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
BatchPayload.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.uuid!=null&&message.hasOwnProperty("uuid"))if(!$util.isString(message.uuid))return "uuid: string expected";if(message.seq!=null&&message.hasOwnProperty("seq"))if(!$util.isInteger(message.seq)&&!(message.seq&&$util.isInteger(message.seq.low)&&$util.isInteger(message.seq.high)))return "seq: integer|Long expected";if(message.events!=null&&message.hasOwnProperty("events")){if(!Array.isArray(message.events))return "events: array expected";for(var i=0;i<message.events.length;++i){var error=$root.Event.verify(message.events[i]);if(error)return "events."+error;}}if(message.webviewId!=null&&message.hasOwnProperty("webviewId"))if(!$util.isInteger(message.webviewId))return "webviewId: integer expected";if(message.path!=null&&message.hasOwnProperty("path"))if(!$util.isString(message.path))return "path: string expected";if(message.projectKey!=null&&message.hasOwnProperty("projectKey"))if(!$util.isString(message.projectKey))return "projectKey: string expected";if(message.sdkVersion!=null&&message.hasOwnProperty("sdkVersion"))if(!$util.isString(message.sdkVersion))return "sdkVersion: string expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.timestamp!=null&&message.hasOwnProperty("timestamp"))if(!$util.isInteger(message.timestamp)&&!(message.timestamp&&$util.isInteger(message.timestamp.low)&&$util.isInteger(message.timestamp.high)))return "timestamp: integer|Long expected";if(message.webviewIds!=null&&message.hasOwnProperty("webviewIds")){if(!Array.isArray(message.webviewIds))return "webviewIds: array expected";for(var _i14=0;_i14<message.webviewIds.length;++_i14)if(!$util.isInteger(message.webviewIds[_i14]))return "webviewIds: integer[] expected";}if(message.seqs!=null&&message.hasOwnProperty("seqs")){if(!Array.isArray(message.seqs))return "seqs: array expected";for(var _i15=0;_i15<message.seqs.length;++_i15)if(!$util.isInteger(message.seqs[_i15])&&!(message.seqs[_i15]&&$util.isInteger(message.seqs[_i15].low)&&$util.isInteger(message.seqs[_i15].high)))return "seqs: integer|Long[] expected";}if(message.paths!=null&&message.hasOwnProperty("paths")){if(!Array.isArray(message.paths))return "paths: array expected";for(var _i16=0;_i16<message.paths.length;++_i16)if(!$util.isString(message.paths[_i16]))return "paths: string[] expected";}if(message.eventFroms!=null&&message.hasOwnProperty("eventFroms")){if(!Array.isArray(message.eventFroms))return "eventFroms: array expected";for(var _i17=0;_i17<message.eventFroms.length;++_i17)if(!$util.isInteger(message.eventFroms[_i17]))return "eventFroms: integer[] expected";}if(message.weSessionId!=null&&message.hasOwnProperty("weSessionId"))if(!$util.isString(message.weSessionId))return "weSessionId: string expected";if(message.wesessionScene!=null&&message.hasOwnProperty("wesessionScene"))if(!$util.isInteger(message.wesessionScene))return "wesessionScene: integer expected";if(message.wesessionSceneNote!=null&&message.hasOwnProperty("wesessionSceneNote"))if(!$util.isString(message.wesessionSceneNote))return "wesessionSceneNote: string expected";if(message.isWesessionEntrance!=null&&message.hasOwnProperty("isWesessionEntrance"))if(!$util.isInteger(message.isWesessionEntrance))return "isWesessionEntrance: integer expected";if(message.openSource!=null&&message.hasOwnProperty("openSource"))if(!$util.isInteger(message.openSource))return "openSource: integer expected";return null;};
BatchPayload.fromObject=function fromObject(object){if(object instanceof $root.BatchPayload)return object;var message=new $root.BatchPayload();if(object.uuid!=null)message.uuid=String(object.uuid);if(object.seq!=null)if($util.Long)(message.seq=$util.Long.fromValue(object.seq)).unsigned=false;else if(typeof object.seq==="string")message.seq=parseInt(object.seq,10);else if(typeof object.seq==="number")message.seq=object.seq;else if(typeof object.seq==="object")message.seq=new $util.LongBits(object.seq.low>>>0,object.seq.high>>>0).toNumber();if(object.events){if(!Array.isArray(object.events))throw TypeError(".BatchPayload.events: array expected");message.events=[];for(var i=0;i<object.events.length;++i){if(typeof object.events[i]!=="object")throw TypeError(".BatchPayload.events: object expected");message.events[i]=$root.Event.fromObject(object.events[i]);}}if(object.webviewId!=null)message.webviewId=object.webviewId|0;if(object.path!=null)message.path=String(object.path);if(object.projectKey!=null)message.projectKey=String(object.projectKey);if(object.sdkVersion!=null)message.sdkVersion=String(object.sdkVersion);if(object.type!=null)message.type=object.type|0;if(object.timestamp!=null)if($util.Long)(message.timestamp=$util.Long.fromValue(object.timestamp)).unsigned=false;else if(typeof object.timestamp==="string")message.timestamp=parseInt(object.timestamp,10);else if(typeof object.timestamp==="number")message.timestamp=object.timestamp;else if(typeof object.timestamp==="object")message.timestamp=new $util.LongBits(object.timestamp.low>>>0,object.timestamp.high>>>0).toNumber();if(object.webviewIds){if(!Array.isArray(object.webviewIds))throw TypeError(".BatchPayload.webviewIds: array expected");message.webviewIds=[];for(var _i18=0;_i18<object.webviewIds.length;++_i18)message.webviewIds[_i18]=object.webviewIds[_i18]|0;}if(object.seqs){if(!Array.isArray(object.seqs))throw TypeError(".BatchPayload.seqs: array expected");message.seqs=[];for(var _i19=0;_i19<object.seqs.length;++_i19)if($util.Long)(message.seqs[_i19]=$util.Long.fromValue(object.seqs[_i19])).unsigned=false;else if(typeof object.seqs[_i19]==="string")message.seqs[_i19]=parseInt(object.seqs[_i19],10);else if(typeof object.seqs[_i19]==="number")message.seqs[_i19]=object.seqs[_i19];else if(typeof object.seqs[_i19]==="object")message.seqs[_i19]=new $util.LongBits(object.seqs[_i19].low>>>0,object.seqs[_i19].high>>>0).toNumber();}if(object.paths){if(!Array.isArray(object.paths))throw TypeError(".BatchPayload.paths: array expected");message.paths=[];for(var _i20=0;_i20<object.paths.length;++_i20)message.paths[_i20]=String(object.paths[_i20]);}if(object.eventFroms){if(!Array.isArray(object.eventFroms))throw TypeError(".BatchPayload.eventFroms: array expected");message.eventFroms=[];for(var _i21=0;_i21<object.eventFroms.length;++_i21)message.eventFroms[_i21]=object.eventFroms[_i21]|0;}if(object.weSessionId!=null)message.weSessionId=String(object.weSessionId);if(object.wesessionScene!=null)message.wesessionScene=object.wesessionScene>>>0;if(object.wesessionSceneNote!=null)message.wesessionSceneNote=String(object.wesessionSceneNote);if(object.isWesessionEntrance!=null)message.isWesessionEntrance=object.isWesessionEntrance>>>0;if(object.openSource!=null)message.openSource=object.openSource>>>0;return message;};
BatchPayload.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.events=[];object.webviewIds=[];object.seqs=[];object.paths=[];object.eventFroms=[];}if(options.defaults){object.uuid="";if($util.Long){var long=new $util.Long(0,0,false);object.seq=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.seq=options.longs===String?"0":0;object.webviewId=0;object.path="";object.projectKey="";object.sdkVersion="";object.type=0;if($util.Long){var _long=new $util.Long(0,0,false);object.timestamp=options.longs===String?_long.toString():options.longs===Number?_long.toNumber():_long;}else object.timestamp=options.longs===String?"0":0;object.weSessionId="";object.wesessionScene=0;object.wesessionSceneNote="";object.isWesessionEntrance=0;object.openSource=0;}if(message.uuid!=null&&message.hasOwnProperty("uuid"))object.uuid=message.uuid;if(message.seq!=null&&message.hasOwnProperty("seq"))if(typeof message.seq==="number")object.seq=options.longs===String?String(message.seq):message.seq;else object.seq=options.longs===String?$util.Long.prototype.toString.call(message.seq):options.longs===Number?new $util.LongBits(message.seq.low>>>0,message.seq.high>>>0).toNumber():message.seq;if(message.events&&message.events.length){object.events=[];for(var j=0;j<message.events.length;++j)object.events[j]=$root.Event.toObject(message.events[j],options);}if(message.webviewId!=null&&message.hasOwnProperty("webviewId"))object.webviewId=message.webviewId;if(message.path!=null&&message.hasOwnProperty("path"))object.path=message.path;if(message.projectKey!=null&&message.hasOwnProperty("projectKey"))object.projectKey=message.projectKey;if(message.sdkVersion!=null&&message.hasOwnProperty("sdkVersion"))object.sdkVersion=message.sdkVersion;if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.timestamp!=null&&message.hasOwnProperty("timestamp"))if(typeof message.timestamp==="number")object.timestamp=options.longs===String?String(message.timestamp):message.timestamp;else object.timestamp=options.longs===String?$util.Long.prototype.toString.call(message.timestamp):options.longs===Number?new $util.LongBits(message.timestamp.low>>>0,message.timestamp.high>>>0).toNumber():message.timestamp;if(message.webviewIds&&message.webviewIds.length){object.webviewIds=[];for(var _j4=0;_j4<message.webviewIds.length;++_j4)object.webviewIds[_j4]=message.webviewIds[_j4];}if(message.seqs&&message.seqs.length){object.seqs=[];for(var _j5=0;_j5<message.seqs.length;++_j5)if(typeof message.seqs[_j5]==="number")object.seqs[_j5]=options.longs===String?String(message.seqs[_j5]):message.seqs[_j5];else object.seqs[_j5]=options.longs===String?$util.Long.prototype.toString.call(message.seqs[_j5]):options.longs===Number?new $util.LongBits(message.seqs[_j5].low>>>0,message.seqs[_j5].high>>>0).toNumber():message.seqs[_j5];}if(message.paths&&message.paths.length){object.paths=[];for(var _j6=0;_j6<message.paths.length;++_j6)object.paths[_j6]=message.paths[_j6];}if(message.eventFroms&&message.eventFroms.length){object.eventFroms=[];for(var _j7=0;_j7<message.eventFroms.length;++_j7)object.eventFroms[_j7]=message.eventFroms[_j7];}if(message.weSessionId!=null&&message.hasOwnProperty("weSessionId"))object.weSessionId=message.weSessionId;if(message.wesessionScene!=null&&message.hasOwnProperty("wesessionScene"))object.wesessionScene=message.wesessionScene;if(message.wesessionSceneNote!=null&&message.hasOwnProperty("wesessionSceneNote"))object.wesessionSceneNote=message.wesessionSceneNote;if(message.isWesessionEntrance!=null&&message.hasOwnProperty("isWesessionEntrance"))object.isWesessionEntrance=message.isWesessionEntrance;if(message.openSource!=null&&message.hasOwnProperty("openSource"))object.openSource=message.openSource;return object;};
BatchPayload.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
BatchPayload.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/BatchPayload";};return BatchPayload;})();$root.Event=(()=>{
function Event(properties){this.initNodes=[];this.mutationRecords=[];this.devCodeInfo=[];this.componentEvents=[];this.pointers=[];this.memos=[];this.commonDeps=[];this.arbitraryData=[];this.customEventProps=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Event.prototype.seq=$util.Long?$util.Long.fromBits(0,0,false):0;
Event.prototype.type=0;
Event.prototype.timestamp=$util.Long?$util.Long.fromBits(0,0,false):0;
Event.prototype.elapsedTime=$util.Long?$util.Long.fromBits(0,0,false):0;
Event.prototype.uiEnv=0;
Event.prototype.nodeId=$util.Long?$util.Long.fromBits(0,0,false):0;
Event.prototype.selector="";
Event.prototype.selectorN=0;
Event.prototype.browserEnv=null;
Event.prototype.windowState=null;
Event.prototype.envConfig=null;
Event.prototype.visibility=false;
Event.prototype.inactiveTime=$util.Long?$util.Long.fromBits(0,0,false):0;
Event.prototype.networkStatus="";
Event.prototype.initNodes=$util.emptyArray;
Event.prototype.mutationRecords=$util.emptyArray;
Event.prototype.devCodeInfo=$util.emptyArray;
Event.prototype.componentEvents=$util.emptyArray;
Event.prototype.pointers=$util.emptyArray;
Event.prototype.tap=null;
Event.prototype.scroll=null;
Event.prototype.wxInput=null;
Event.prototype.click=null;
Event.prototype.route=null;
Event.prototype.selection=null;
Event.prototype.input=null;
Event.prototype.depth=null;
Event.prototype.exposure=null;
Event.prototype.console=null;
Event.prototype.network=null;
Event.prototype.customKey="";
Event.prototype.customValue="";
Event.prototype.customDomain=0;
Event.prototype.customKeyInt=0;
Event.prototype.memos=$util.emptyArray;
Event.prototype.commonDeps=$util.emptyArray;
Event.prototype.stayTime=null;
Event.prototype.arbitraryData=$util.emptyArray;
Event.prototype.customEventProps=$util.emptyArray;
Event.create=function create(properties){return new Event(properties);};
Event.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.seq!=null&&Object.hasOwnProperty.call(message,"seq"))writer.uint32(8).int64(message.seq);if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(16).int32(message.type);if(message.timestamp!=null&&Object.hasOwnProperty.call(message,"timestamp"))writer.uint32(24).int64(message.timestamp);if(message.elapsedTime!=null&&Object.hasOwnProperty.call(message,"elapsedTime"))writer.uint32(32).int64(message.elapsedTime);if(message.uiEnv!=null&&Object.hasOwnProperty.call(message,"uiEnv"))writer.uint32(80).int32(message.uiEnv);if(message.nodeId!=null&&Object.hasOwnProperty.call(message,"nodeId"))writer.uint32(88).int64(message.nodeId);if(message.selector!=null&&Object.hasOwnProperty.call(message,"selector"))writer.uint32(98).string(message.selector);if(message.selectorN!=null&&Object.hasOwnProperty.call(message,"selectorN"))writer.uint32(104).int32(message.selectorN);if(message.browserEnv!=null&&Object.hasOwnProperty.call(message,"browserEnv"))$root.Event.BrowserEnv.encode(message.browserEnv,writer.uint32(114).fork()).ldelim();if(message.windowState!=null&&Object.hasOwnProperty.call(message,"windowState"))$root.Event.WindowState.encode(message.windowState,writer.uint32(122).fork()).ldelim();if(message.envConfig!=null&&Object.hasOwnProperty.call(message,"envConfig"))$root.Event.EnvConfig.encode(message.envConfig,writer.uint32(130).fork()).ldelim();if(message.visibility!=null&&Object.hasOwnProperty.call(message,"visibility"))writer.uint32(136).bool(message.visibility);if(message.inactiveTime!=null&&Object.hasOwnProperty.call(message,"inactiveTime"))writer.uint32(144).int64(message.inactiveTime);if(message.networkStatus!=null&&Object.hasOwnProperty.call(message,"networkStatus"))writer.uint32(154).string(message.networkStatus);if(message.initNodes!=null&&message.initNodes.length)for(var i=0;i<message.initNodes.length;++i)$root.AddedNodesSlice.encode(message.initNodes[i],writer.uint32(162).fork()).ldelim();if(message.mutationRecords!=null&&message.mutationRecords.length)for(var _i22=0;_i22<message.mutationRecords.length;++_i22)$root.MutationRecord.encode(message.mutationRecords[_i22],writer.uint32(170).fork()).ldelim();if(message.devCodeInfo!=null&&message.devCodeInfo.length)for(var _i23=0;_i23<message.devCodeInfo.length;++_i23)$root.DevCodeInfo.encode(message.devCodeInfo[_i23],writer.uint32(178).fork()).ldelim();if(message.componentEvents!=null&&message.componentEvents.length)for(var _i24=0;_i24<message.componentEvents.length;++_i24)$root.Event.ComponentEvent.encode(message.componentEvents[_i24],writer.uint32(186).fork()).ldelim();if(message.pointers!=null&&message.pointers.length)for(var _i25=0;_i25<message.pointers.length;++_i25)$root.Pointer.encode(message.pointers[_i25],writer.uint32(242).fork()).ldelim();if(message.tap!=null&&Object.hasOwnProperty.call(message,"tap"))$root.Tap.encode(message.tap,writer.uint32(258).fork()).ldelim();if(message.scroll!=null&&Object.hasOwnProperty.call(message,"scroll"))$root.ScrollDetail.encode(message.scroll,writer.uint32(266).fork()).ldelim();if(message.wxInput!=null&&Object.hasOwnProperty.call(message,"wxInput"))$root.Event.WxInput.encode(message.wxInput,writer.uint32(274).fork()).ldelim();if(message.click!=null&&Object.hasOwnProperty.call(message,"click"))$root.Click.encode(message.click,writer.uint32(282).fork()).ldelim();if(message.route!=null&&Object.hasOwnProperty.call(message,"route"))$root.Event.Route.encode(message.route,writer.uint32(290).fork()).ldelim();if(message.selection!=null&&Object.hasOwnProperty.call(message,"selection"))$root.Selection.encode(message.selection,writer.uint32(298).fork()).ldelim();if(message.input!=null&&Object.hasOwnProperty.call(message,"input"))$root.Event.Input.encode(message.input,writer.uint32(306).fork()).ldelim();if(message.depth!=null&&Object.hasOwnProperty.call(message,"depth"))$root.Event.Depth.encode(message.depth,writer.uint32(314).fork()).ldelim();if(message.exposure!=null&&Object.hasOwnProperty.call(message,"exposure"))$root.Exposure.encode(message.exposure,writer.uint32(322).fork()).ldelim();if(message.console!=null&&Object.hasOwnProperty.call(message,"console"))$root.Event.Console.encode(message.console,writer.uint32(362).fork()).ldelim();if(message.network!=null&&Object.hasOwnProperty.call(message,"network"))$root.Event.Network.encode(message.network,writer.uint32(370).fork()).ldelim();if(message.customKey!=null&&Object.hasOwnProperty.call(message,"customKey"))writer.uint32(402).string(message.customKey);if(message.customValue!=null&&Object.hasOwnProperty.call(message,"customValue"))writer.uint32(410).string(message.customValue);if(message.customDomain!=null&&Object.hasOwnProperty.call(message,"customDomain"))writer.uint32(416).int32(message.customDomain);if(message.customKeyInt!=null&&Object.hasOwnProperty.call(message,"customKeyInt"))writer.uint32(424).int32(message.customKeyInt);if(message.memos!=null&&message.memos.length)for(var _i26=0;_i26<message.memos.length;++_i26)$root.Event.Memo.encode(message.memos[_i26],writer.uint32(434).fork()).ldelim();if(message.commonDeps!=null&&message.commonDeps.length)for(var _i27=0;_i27<message.commonDeps.length;++_i27)writer.uint32(442).string(message.commonDeps[_i27]);if(message.stayTime!=null&&Object.hasOwnProperty.call(message,"stayTime"))$root.Event.StayTime.encode(message.stayTime,writer.uint32(482).fork()).ldelim();if(message.arbitraryData!=null&&message.arbitraryData.length)for(var _i28=0;_i28<message.arbitraryData.length;++_i28)$root.Event.NormalKV.encode(message.arbitraryData[_i28],writer.uint32(570).fork()).ldelim();if(message.customEventProps!=null&&message.customEventProps.length)for(var _i29=0;_i29<message.customEventProps.length;++_i29)$root.Event.CustomEventProp.encode(message.customEventProps[_i29],writer.uint32(7994).fork()).ldelim();return writer;};
Event.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Event.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.seq=reader.int64();break;}case 2:{message.type=reader.int32();break;}case 3:{message.timestamp=reader.int64();break;}case 4:{message.elapsedTime=reader.int64();break;}case 10:{message.uiEnv=reader.int32();break;}case 11:{message.nodeId=reader.int64();break;}case 12:{message.selector=reader.string();break;}case 13:{message.selectorN=reader.int32();break;}case 14:{message.browserEnv=$root.Event.BrowserEnv.decode(reader,reader.uint32());break;}case 15:{message.windowState=$root.Event.WindowState.decode(reader,reader.uint32());break;}case 16:{message.envConfig=$root.Event.EnvConfig.decode(reader,reader.uint32());break;}case 17:{message.visibility=reader.bool();break;}case 18:{message.inactiveTime=reader.int64();break;}case 19:{message.networkStatus=reader.string();break;}case 20:{if(!(message.initNodes&&message.initNodes.length))message.initNodes=[];message.initNodes.push($root.AddedNodesSlice.decode(reader,reader.uint32()));break;}case 21:{if(!(message.mutationRecords&&message.mutationRecords.length))message.mutationRecords=[];message.mutationRecords.push($root.MutationRecord.decode(reader,reader.uint32()));break;}case 22:{if(!(message.devCodeInfo&&message.devCodeInfo.length))message.devCodeInfo=[];message.devCodeInfo.push($root.DevCodeInfo.decode(reader,reader.uint32()));break;}case 23:{if(!(message.componentEvents&&message.componentEvents.length))message.componentEvents=[];message.componentEvents.push($root.Event.ComponentEvent.decode(reader,reader.uint32()));break;}case 30:{if(!(message.pointers&&message.pointers.length))message.pointers=[];message.pointers.push($root.Pointer.decode(reader,reader.uint32()));break;}case 32:{message.tap=$root.Tap.decode(reader,reader.uint32());break;}case 33:{message.scroll=$root.ScrollDetail.decode(reader,reader.uint32());break;}case 34:{message.wxInput=$root.Event.WxInput.decode(reader,reader.uint32());break;}case 35:{message.click=$root.Click.decode(reader,reader.uint32());break;}case 36:{message.route=$root.Event.Route.decode(reader,reader.uint32());break;}case 37:{message.selection=$root.Selection.decode(reader,reader.uint32());break;}case 38:{message.input=$root.Event.Input.decode(reader,reader.uint32());break;}case 39:{message.depth=$root.Event.Depth.decode(reader,reader.uint32());break;}case 40:{message.exposure=$root.Exposure.decode(reader,reader.uint32());break;}case 45:{message.console=$root.Event.Console.decode(reader,reader.uint32());break;}case 46:{message.network=$root.Event.Network.decode(reader,reader.uint32());break;}case 50:{message.customKey=reader.string();break;}case 51:{message.customValue=reader.string();break;}case 52:{message.customDomain=reader.int32();break;}case 53:{message.customKeyInt=reader.int32();break;}case 54:{if(!(message.memos&&message.memos.length))message.memos=[];message.memos.push($root.Event.Memo.decode(reader,reader.uint32()));break;}case 55:{if(!(message.commonDeps&&message.commonDeps.length))message.commonDeps=[];message.commonDeps.push(reader.string());break;}case 60:{message.stayTime=$root.Event.StayTime.decode(reader,reader.uint32());break;}case 71:{if(!(message.arbitraryData&&message.arbitraryData.length))message.arbitraryData=[];message.arbitraryData.push($root.Event.NormalKV.decode(reader,reader.uint32()));break;}case 999:{if(!(message.customEventProps&&message.customEventProps.length))message.customEventProps=[];message.customEventProps.push($root.Event.CustomEventProp.decode(reader,reader.uint32()));break;}default:reader.skipType(tag&7);break;}}return message;};
Event.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Event.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.seq!=null&&message.hasOwnProperty("seq"))if(!$util.isInteger(message.seq)&&!(message.seq&&$util.isInteger(message.seq.low)&&$util.isInteger(message.seq.high)))return "seq: integer|Long expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.timestamp!=null&&message.hasOwnProperty("timestamp"))if(!$util.isInteger(message.timestamp)&&!(message.timestamp&&$util.isInteger(message.timestamp.low)&&$util.isInteger(message.timestamp.high)))return "timestamp: integer|Long expected";if(message.elapsedTime!=null&&message.hasOwnProperty("elapsedTime"))if(!$util.isInteger(message.elapsedTime)&&!(message.elapsedTime&&$util.isInteger(message.elapsedTime.low)&&$util.isInteger(message.elapsedTime.high)))return "elapsedTime: integer|Long expected";if(message.uiEnv!=null&&message.hasOwnProperty("uiEnv"))if(!$util.isInteger(message.uiEnv))return "uiEnv: integer expected";if(message.nodeId!=null&&message.hasOwnProperty("nodeId"))if(!$util.isInteger(message.nodeId)&&!(message.nodeId&&$util.isInteger(message.nodeId.low)&&$util.isInteger(message.nodeId.high)))return "nodeId: integer|Long expected";if(message.selector!=null&&message.hasOwnProperty("selector"))if(!$util.isString(message.selector))return "selector: string expected";if(message.selectorN!=null&&message.hasOwnProperty("selectorN"))if(!$util.isInteger(message.selectorN))return "selectorN: integer expected";if(message.browserEnv!=null&&message.hasOwnProperty("browserEnv")){var error=$root.Event.BrowserEnv.verify(message.browserEnv);if(error)return "browserEnv."+error;}if(message.windowState!=null&&message.hasOwnProperty("windowState")){var _error=$root.Event.WindowState.verify(message.windowState);if(_error)return "windowState."+_error;}if(message.envConfig!=null&&message.hasOwnProperty("envConfig")){var _error2=$root.Event.EnvConfig.verify(message.envConfig);if(_error2)return "envConfig."+_error2;}if(message.visibility!=null&&message.hasOwnProperty("visibility"))if(typeof message.visibility!=="boolean")return "visibility: boolean expected";if(message.inactiveTime!=null&&message.hasOwnProperty("inactiveTime"))if(!$util.isInteger(message.inactiveTime)&&!(message.inactiveTime&&$util.isInteger(message.inactiveTime.low)&&$util.isInteger(message.inactiveTime.high)))return "inactiveTime: integer|Long expected";if(message.networkStatus!=null&&message.hasOwnProperty("networkStatus"))if(!$util.isString(message.networkStatus))return "networkStatus: string expected";if(message.initNodes!=null&&message.hasOwnProperty("initNodes")){if(!Array.isArray(message.initNodes))return "initNodes: array expected";for(var i=0;i<message.initNodes.length;++i){var _error3=$root.AddedNodesSlice.verify(message.initNodes[i]);if(_error3)return "initNodes."+_error3;}}if(message.mutationRecords!=null&&message.hasOwnProperty("mutationRecords")){if(!Array.isArray(message.mutationRecords))return "mutationRecords: array expected";for(var _i30=0;_i30<message.mutationRecords.length;++_i30){var _error4=$root.MutationRecord.verify(message.mutationRecords[_i30]);if(_error4)return "mutationRecords."+_error4;}}if(message.devCodeInfo!=null&&message.hasOwnProperty("devCodeInfo")){if(!Array.isArray(message.devCodeInfo))return "devCodeInfo: array expected";for(var _i31=0;_i31<message.devCodeInfo.length;++_i31){var _error5=$root.DevCodeInfo.verify(message.devCodeInfo[_i31]);if(_error5)return "devCodeInfo."+_error5;}}if(message.componentEvents!=null&&message.hasOwnProperty("componentEvents")){if(!Array.isArray(message.componentEvents))return "componentEvents: array expected";for(var _i32=0;_i32<message.componentEvents.length;++_i32){var _error6=$root.Event.ComponentEvent.verify(message.componentEvents[_i32]);if(_error6)return "componentEvents."+_error6;}}if(message.pointers!=null&&message.hasOwnProperty("pointers")){if(!Array.isArray(message.pointers))return "pointers: array expected";for(var _i33=0;_i33<message.pointers.length;++_i33){var _error7=$root.Pointer.verify(message.pointers[_i33]);if(_error7)return "pointers."+_error7;}}if(message.tap!=null&&message.hasOwnProperty("tap")){var _error8=$root.Tap.verify(message.tap);if(_error8)return "tap."+_error8;}if(message.scroll!=null&&message.hasOwnProperty("scroll")){var _error9=$root.ScrollDetail.verify(message.scroll);if(_error9)return "scroll."+_error9;}if(message.wxInput!=null&&message.hasOwnProperty("wxInput")){var _error10=$root.Event.WxInput.verify(message.wxInput);if(_error10)return "wxInput."+_error10;}if(message.click!=null&&message.hasOwnProperty("click")){var _error11=$root.Click.verify(message.click);if(_error11)return "click."+_error11;}if(message.route!=null&&message.hasOwnProperty("route")){var _error12=$root.Event.Route.verify(message.route);if(_error12)return "route."+_error12;}if(message.selection!=null&&message.hasOwnProperty("selection")){var _error13=$root.Selection.verify(message.selection);if(_error13)return "selection."+_error13;}if(message.input!=null&&message.hasOwnProperty("input")){var _error14=$root.Event.Input.verify(message.input);if(_error14)return "input."+_error14;}if(message.depth!=null&&message.hasOwnProperty("depth")){var _error15=$root.Event.Depth.verify(message.depth);if(_error15)return "depth."+_error15;}if(message.exposure!=null&&message.hasOwnProperty("exposure")){var _error16=$root.Exposure.verify(message.exposure);if(_error16)return "exposure."+_error16;}if(message.console!=null&&message.hasOwnProperty("console")){var _error17=$root.Event.Console.verify(message.console);if(_error17)return "console."+_error17;}if(message.network!=null&&message.hasOwnProperty("network")){var _error18=$root.Event.Network.verify(message.network);if(_error18)return "network."+_error18;}if(message.customKey!=null&&message.hasOwnProperty("customKey"))if(!$util.isString(message.customKey))return "customKey: string expected";if(message.customValue!=null&&message.hasOwnProperty("customValue"))if(!$util.isString(message.customValue))return "customValue: string expected";if(message.customDomain!=null&&message.hasOwnProperty("customDomain"))if(!$util.isInteger(message.customDomain))return "customDomain: integer expected";if(message.customKeyInt!=null&&message.hasOwnProperty("customKeyInt"))if(!$util.isInteger(message.customKeyInt))return "customKeyInt: integer expected";if(message.memos!=null&&message.hasOwnProperty("memos")){if(!Array.isArray(message.memos))return "memos: array expected";for(var _i34=0;_i34<message.memos.length;++_i34){var _error19=$root.Event.Memo.verify(message.memos[_i34]);if(_error19)return "memos."+_error19;}}if(message.commonDeps!=null&&message.hasOwnProperty("commonDeps")){if(!Array.isArray(message.commonDeps))return "commonDeps: array expected";for(var _i35=0;_i35<message.commonDeps.length;++_i35)if(!$util.isString(message.commonDeps[_i35]))return "commonDeps: string[] expected";}if(message.stayTime!=null&&message.hasOwnProperty("stayTime")){var _error20=$root.Event.StayTime.verify(message.stayTime);if(_error20)return "stayTime."+_error20;}if(message.arbitraryData!=null&&message.hasOwnProperty("arbitraryData")){if(!Array.isArray(message.arbitraryData))return "arbitraryData: array expected";for(var _i36=0;_i36<message.arbitraryData.length;++_i36){var _error21=$root.Event.NormalKV.verify(message.arbitraryData[_i36]);if(_error21)return "arbitraryData."+_error21;}}if(message.customEventProps!=null&&message.hasOwnProperty("customEventProps")){if(!Array.isArray(message.customEventProps))return "customEventProps: array expected";for(var _i37=0;_i37<message.customEventProps.length;++_i37){var _error22=$root.Event.CustomEventProp.verify(message.customEventProps[_i37]);if(_error22)return "customEventProps."+_error22;}}return null;};
Event.fromObject=function fromObject(object){if(object instanceof $root.Event)return object;var message=new $root.Event();if(object.seq!=null)if($util.Long)(message.seq=$util.Long.fromValue(object.seq)).unsigned=false;else if(typeof object.seq==="string")message.seq=parseInt(object.seq,10);else if(typeof object.seq==="number")message.seq=object.seq;else if(typeof object.seq==="object")message.seq=new $util.LongBits(object.seq.low>>>0,object.seq.high>>>0).toNumber();if(object.type!=null)message.type=object.type|0;if(object.timestamp!=null)if($util.Long)(message.timestamp=$util.Long.fromValue(object.timestamp)).unsigned=false;else if(typeof object.timestamp==="string")message.timestamp=parseInt(object.timestamp,10);else if(typeof object.timestamp==="number")message.timestamp=object.timestamp;else if(typeof object.timestamp==="object")message.timestamp=new $util.LongBits(object.timestamp.low>>>0,object.timestamp.high>>>0).toNumber();if(object.elapsedTime!=null)if($util.Long)(message.elapsedTime=$util.Long.fromValue(object.elapsedTime)).unsigned=false;else if(typeof object.elapsedTime==="string")message.elapsedTime=parseInt(object.elapsedTime,10);else if(typeof object.elapsedTime==="number")message.elapsedTime=object.elapsedTime;else if(typeof object.elapsedTime==="object")message.elapsedTime=new $util.LongBits(object.elapsedTime.low>>>0,object.elapsedTime.high>>>0).toNumber();if(object.uiEnv!=null)message.uiEnv=object.uiEnv|0;if(object.nodeId!=null)if($util.Long)(message.nodeId=$util.Long.fromValue(object.nodeId)).unsigned=false;else if(typeof object.nodeId==="string")message.nodeId=parseInt(object.nodeId,10);else if(typeof object.nodeId==="number")message.nodeId=object.nodeId;else if(typeof object.nodeId==="object")message.nodeId=new $util.LongBits(object.nodeId.low>>>0,object.nodeId.high>>>0).toNumber();if(object.selector!=null)message.selector=String(object.selector);if(object.selectorN!=null)message.selectorN=object.selectorN|0;if(object.browserEnv!=null){if(typeof object.browserEnv!=="object")throw TypeError(".Event.browserEnv: object expected");message.browserEnv=$root.Event.BrowserEnv.fromObject(object.browserEnv);}if(object.windowState!=null){if(typeof object.windowState!=="object")throw TypeError(".Event.windowState: object expected");message.windowState=$root.Event.WindowState.fromObject(object.windowState);}if(object.envConfig!=null){if(typeof object.envConfig!=="object")throw TypeError(".Event.envConfig: object expected");message.envConfig=$root.Event.EnvConfig.fromObject(object.envConfig);}if(object.visibility!=null)message.visibility=Boolean(object.visibility);if(object.inactiveTime!=null)if($util.Long)(message.inactiveTime=$util.Long.fromValue(object.inactiveTime)).unsigned=false;else if(typeof object.inactiveTime==="string")message.inactiveTime=parseInt(object.inactiveTime,10);else if(typeof object.inactiveTime==="number")message.inactiveTime=object.inactiveTime;else if(typeof object.inactiveTime==="object")message.inactiveTime=new $util.LongBits(object.inactiveTime.low>>>0,object.inactiveTime.high>>>0).toNumber();if(object.networkStatus!=null)message.networkStatus=String(object.networkStatus);if(object.initNodes){if(!Array.isArray(object.initNodes))throw TypeError(".Event.initNodes: array expected");message.initNodes=[];for(var i=0;i<object.initNodes.length;++i){if(typeof object.initNodes[i]!=="object")throw TypeError(".Event.initNodes: object expected");message.initNodes[i]=$root.AddedNodesSlice.fromObject(object.initNodes[i]);}}if(object.mutationRecords){if(!Array.isArray(object.mutationRecords))throw TypeError(".Event.mutationRecords: array expected");message.mutationRecords=[];for(var _i38=0;_i38<object.mutationRecords.length;++_i38){if(typeof object.mutationRecords[_i38]!=="object")throw TypeError(".Event.mutationRecords: object expected");message.mutationRecords[_i38]=$root.MutationRecord.fromObject(object.mutationRecords[_i38]);}}if(object.devCodeInfo){if(!Array.isArray(object.devCodeInfo))throw TypeError(".Event.devCodeInfo: array expected");message.devCodeInfo=[];for(var _i39=0;_i39<object.devCodeInfo.length;++_i39){if(typeof object.devCodeInfo[_i39]!=="object")throw TypeError(".Event.devCodeInfo: object expected");message.devCodeInfo[_i39]=$root.DevCodeInfo.fromObject(object.devCodeInfo[_i39]);}}if(object.componentEvents){if(!Array.isArray(object.componentEvents))throw TypeError(".Event.componentEvents: array expected");message.componentEvents=[];for(var _i40=0;_i40<object.componentEvents.length;++_i40){if(typeof object.componentEvents[_i40]!=="object")throw TypeError(".Event.componentEvents: object expected");message.componentEvents[_i40]=$root.Event.ComponentEvent.fromObject(object.componentEvents[_i40]);}}if(object.pointers){if(!Array.isArray(object.pointers))throw TypeError(".Event.pointers: array expected");message.pointers=[];for(var _i41=0;_i41<object.pointers.length;++_i41){if(typeof object.pointers[_i41]!=="object")throw TypeError(".Event.pointers: object expected");message.pointers[_i41]=$root.Pointer.fromObject(object.pointers[_i41]);}}if(object.tap!=null){if(typeof object.tap!=="object")throw TypeError(".Event.tap: object expected");message.tap=$root.Tap.fromObject(object.tap);}if(object.scroll!=null){if(typeof object.scroll!=="object")throw TypeError(".Event.scroll: object expected");message.scroll=$root.ScrollDetail.fromObject(object.scroll);}if(object.wxInput!=null){if(typeof object.wxInput!=="object")throw TypeError(".Event.wxInput: object expected");message.wxInput=$root.Event.WxInput.fromObject(object.wxInput);}if(object.click!=null){if(typeof object.click!=="object")throw TypeError(".Event.click: object expected");message.click=$root.Click.fromObject(object.click);}if(object.route!=null){if(typeof object.route!=="object")throw TypeError(".Event.route: object expected");message.route=$root.Event.Route.fromObject(object.route);}if(object.selection!=null){if(typeof object.selection!=="object")throw TypeError(".Event.selection: object expected");message.selection=$root.Selection.fromObject(object.selection);}if(object.input!=null){if(typeof object.input!=="object")throw TypeError(".Event.input: object expected");message.input=$root.Event.Input.fromObject(object.input);}if(object.depth!=null){if(typeof object.depth!=="object")throw TypeError(".Event.depth: object expected");message.depth=$root.Event.Depth.fromObject(object.depth);}if(object.exposure!=null){if(typeof object.exposure!=="object")throw TypeError(".Event.exposure: object expected");message.exposure=$root.Exposure.fromObject(object.exposure);}if(object.console!=null){if(typeof object.console!=="object")throw TypeError(".Event.console: object expected");message.console=$root.Event.Console.fromObject(object.console);}if(object.network!=null){if(typeof object.network!=="object")throw TypeError(".Event.network: object expected");message.network=$root.Event.Network.fromObject(object.network);}if(object.customKey!=null)message.customKey=String(object.customKey);if(object.customValue!=null)message.customValue=String(object.customValue);if(object.customDomain!=null)message.customDomain=object.customDomain|0;if(object.customKeyInt!=null)message.customKeyInt=object.customKeyInt|0;if(object.memos){if(!Array.isArray(object.memos))throw TypeError(".Event.memos: array expected");message.memos=[];for(var _i42=0;_i42<object.memos.length;++_i42){if(typeof object.memos[_i42]!=="object")throw TypeError(".Event.memos: object expected");message.memos[_i42]=$root.Event.Memo.fromObject(object.memos[_i42]);}}if(object.commonDeps){if(!Array.isArray(object.commonDeps))throw TypeError(".Event.commonDeps: array expected");message.commonDeps=[];for(var _i43=0;_i43<object.commonDeps.length;++_i43)message.commonDeps[_i43]=String(object.commonDeps[_i43]);}if(object.stayTime!=null){if(typeof object.stayTime!=="object")throw TypeError(".Event.stayTime: object expected");message.stayTime=$root.Event.StayTime.fromObject(object.stayTime);}if(object.arbitraryData){if(!Array.isArray(object.arbitraryData))throw TypeError(".Event.arbitraryData: array expected");message.arbitraryData=[];for(var _i44=0;_i44<object.arbitraryData.length;++_i44){if(typeof object.arbitraryData[_i44]!=="object")throw TypeError(".Event.arbitraryData: object expected");message.arbitraryData[_i44]=$root.Event.NormalKV.fromObject(object.arbitraryData[_i44]);}}if(object.customEventProps){if(!Array.isArray(object.customEventProps))throw TypeError(".Event.customEventProps: array expected");message.customEventProps=[];for(var _i45=0;_i45<object.customEventProps.length;++_i45){if(typeof object.customEventProps[_i45]!=="object")throw TypeError(".Event.customEventProps: object expected");message.customEventProps[_i45]=$root.Event.CustomEventProp.fromObject(object.customEventProps[_i45]);}}return message;};
Event.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.initNodes=[];object.mutationRecords=[];object.devCodeInfo=[];object.componentEvents=[];object.pointers=[];object.memos=[];object.commonDeps=[];object.arbitraryData=[];object.customEventProps=[];}if(options.defaults){if($util.Long){var long=new $util.Long(0,0,false);object.seq=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.seq=options.longs===String?"0":0;object.type=0;if($util.Long){var _long2=new $util.Long(0,0,false);object.timestamp=options.longs===String?_long2.toString():options.longs===Number?_long2.toNumber():_long2;}else object.timestamp=options.longs===String?"0":0;if($util.Long){var _long3=new $util.Long(0,0,false);object.elapsedTime=options.longs===String?_long3.toString():options.longs===Number?_long3.toNumber():_long3;}else object.elapsedTime=options.longs===String?"0":0;object.uiEnv=0;if($util.Long){var _long4=new $util.Long(0,0,false);object.nodeId=options.longs===String?_long4.toString():options.longs===Number?_long4.toNumber():_long4;}else object.nodeId=options.longs===String?"0":0;object.selector="";object.selectorN=0;object.browserEnv=null;object.windowState=null;object.envConfig=null;object.visibility=false;if($util.Long){var _long5=new $util.Long(0,0,false);object.inactiveTime=options.longs===String?_long5.toString():options.longs===Number?_long5.toNumber():_long5;}else object.inactiveTime=options.longs===String?"0":0;object.networkStatus="";object.tap=null;object.scroll=null;object.wxInput=null;object.click=null;object.route=null;object.selection=null;object.input=null;object.depth=null;object.exposure=null;object.console=null;object.network=null;object.customKey="";object.customValue="";object.customDomain=0;object.customKeyInt=0;object.stayTime=null;}if(message.seq!=null&&message.hasOwnProperty("seq"))if(typeof message.seq==="number")object.seq=options.longs===String?String(message.seq):message.seq;else object.seq=options.longs===String?$util.Long.prototype.toString.call(message.seq):options.longs===Number?new $util.LongBits(message.seq.low>>>0,message.seq.high>>>0).toNumber():message.seq;if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.timestamp!=null&&message.hasOwnProperty("timestamp"))if(typeof message.timestamp==="number")object.timestamp=options.longs===String?String(message.timestamp):message.timestamp;else object.timestamp=options.longs===String?$util.Long.prototype.toString.call(message.timestamp):options.longs===Number?new $util.LongBits(message.timestamp.low>>>0,message.timestamp.high>>>0).toNumber():message.timestamp;if(message.elapsedTime!=null&&message.hasOwnProperty("elapsedTime"))if(typeof message.elapsedTime==="number")object.elapsedTime=options.longs===String?String(message.elapsedTime):message.elapsedTime;else object.elapsedTime=options.longs===String?$util.Long.prototype.toString.call(message.elapsedTime):options.longs===Number?new $util.LongBits(message.elapsedTime.low>>>0,message.elapsedTime.high>>>0).toNumber():message.elapsedTime;if(message.uiEnv!=null&&message.hasOwnProperty("uiEnv"))object.uiEnv=message.uiEnv;if(message.nodeId!=null&&message.hasOwnProperty("nodeId"))if(typeof message.nodeId==="number")object.nodeId=options.longs===String?String(message.nodeId):message.nodeId;else object.nodeId=options.longs===String?$util.Long.prototype.toString.call(message.nodeId):options.longs===Number?new $util.LongBits(message.nodeId.low>>>0,message.nodeId.high>>>0).toNumber():message.nodeId;if(message.selector!=null&&message.hasOwnProperty("selector"))object.selector=message.selector;if(message.selectorN!=null&&message.hasOwnProperty("selectorN"))object.selectorN=message.selectorN;if(message.browserEnv!=null&&message.hasOwnProperty("browserEnv"))object.browserEnv=$root.Event.BrowserEnv.toObject(message.browserEnv,options);if(message.windowState!=null&&message.hasOwnProperty("windowState"))object.windowState=$root.Event.WindowState.toObject(message.windowState,options);if(message.envConfig!=null&&message.hasOwnProperty("envConfig"))object.envConfig=$root.Event.EnvConfig.toObject(message.envConfig,options);if(message.visibility!=null&&message.hasOwnProperty("visibility"))object.visibility=message.visibility;if(message.inactiveTime!=null&&message.hasOwnProperty("inactiveTime"))if(typeof message.inactiveTime==="number")object.inactiveTime=options.longs===String?String(message.inactiveTime):message.inactiveTime;else object.inactiveTime=options.longs===String?$util.Long.prototype.toString.call(message.inactiveTime):options.longs===Number?new $util.LongBits(message.inactiveTime.low>>>0,message.inactiveTime.high>>>0).toNumber():message.inactiveTime;if(message.networkStatus!=null&&message.hasOwnProperty("networkStatus"))object.networkStatus=message.networkStatus;if(message.initNodes&&message.initNodes.length){object.initNodes=[];for(var j=0;j<message.initNodes.length;++j)object.initNodes[j]=$root.AddedNodesSlice.toObject(message.initNodes[j],options);}if(message.mutationRecords&&message.mutationRecords.length){object.mutationRecords=[];for(var _j8=0;_j8<message.mutationRecords.length;++_j8)object.mutationRecords[_j8]=$root.MutationRecord.toObject(message.mutationRecords[_j8],options);}if(message.devCodeInfo&&message.devCodeInfo.length){object.devCodeInfo=[];for(var _j9=0;_j9<message.devCodeInfo.length;++_j9)object.devCodeInfo[_j9]=$root.DevCodeInfo.toObject(message.devCodeInfo[_j9],options);}if(message.componentEvents&&message.componentEvents.length){object.componentEvents=[];for(var _j10=0;_j10<message.componentEvents.length;++_j10)object.componentEvents[_j10]=$root.Event.ComponentEvent.toObject(message.componentEvents[_j10],options);}if(message.pointers&&message.pointers.length){object.pointers=[];for(var _j11=0;_j11<message.pointers.length;++_j11)object.pointers[_j11]=$root.Pointer.toObject(message.pointers[_j11],options);}if(message.tap!=null&&message.hasOwnProperty("tap"))object.tap=$root.Tap.toObject(message.tap,options);if(message.scroll!=null&&message.hasOwnProperty("scroll"))object.scroll=$root.ScrollDetail.toObject(message.scroll,options);if(message.wxInput!=null&&message.hasOwnProperty("wxInput"))object.wxInput=$root.Event.WxInput.toObject(message.wxInput,options);if(message.click!=null&&message.hasOwnProperty("click"))object.click=$root.Click.toObject(message.click,options);if(message.route!=null&&message.hasOwnProperty("route"))object.route=$root.Event.Route.toObject(message.route,options);if(message.selection!=null&&message.hasOwnProperty("selection"))object.selection=$root.Selection.toObject(message.selection,options);if(message.input!=null&&message.hasOwnProperty("input"))object.input=$root.Event.Input.toObject(message.input,options);if(message.depth!=null&&message.hasOwnProperty("depth"))object.depth=$root.Event.Depth.toObject(message.depth,options);if(message.exposure!=null&&message.hasOwnProperty("exposure"))object.exposure=$root.Exposure.toObject(message.exposure,options);if(message.console!=null&&message.hasOwnProperty("console"))object.console=$root.Event.Console.toObject(message.console,options);if(message.network!=null&&message.hasOwnProperty("network"))object.network=$root.Event.Network.toObject(message.network,options);if(message.customKey!=null&&message.hasOwnProperty("customKey"))object.customKey=message.customKey;if(message.customValue!=null&&message.hasOwnProperty("customValue"))object.customValue=message.customValue;if(message.customDomain!=null&&message.hasOwnProperty("customDomain"))object.customDomain=message.customDomain;if(message.customKeyInt!=null&&message.hasOwnProperty("customKeyInt"))object.customKeyInt=message.customKeyInt;if(message.memos&&message.memos.length){object.memos=[];for(var _j12=0;_j12<message.memos.length;++_j12)object.memos[_j12]=$root.Event.Memo.toObject(message.memos[_j12],options);}if(message.commonDeps&&message.commonDeps.length){object.commonDeps=[];for(var _j13=0;_j13<message.commonDeps.length;++_j13)object.commonDeps[_j13]=message.commonDeps[_j13];}if(message.stayTime!=null&&message.hasOwnProperty("stayTime"))object.stayTime=$root.Event.StayTime.toObject(message.stayTime,options);if(message.arbitraryData&&message.arbitraryData.length){object.arbitraryData=[];for(var _j14=0;_j14<message.arbitraryData.length;++_j14)object.arbitraryData[_j14]=$root.Event.NormalKV.toObject(message.arbitraryData[_j14],options);}if(message.customEventProps&&message.customEventProps.length){object.customEventProps=[];for(var _j15=0;_j15<message.customEventProps.length;++_j15)object.customEventProps[_j15]=$root.Event.CustomEventProp.toObject(message.customEventProps[_j15],options);}return object;};
Event.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Event.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event";};Event.NormalKV=function(){
function NormalKV(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
NormalKV.prototype.key="";
NormalKV.prototype.value="";
NormalKV.prototype.valueInt=0;
NormalKV.create=function create(properties){return new NormalKV(properties);};
NormalKV.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.key!=null&&Object.hasOwnProperty.call(message,"key"))writer.uint32(10).string(message.key);if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(18).string(message.value);if(message.valueInt!=null&&Object.hasOwnProperty.call(message,"valueInt"))writer.uint32(24).uint32(message.valueInt);return writer;};
NormalKV.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
NormalKV.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.NormalKV();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.key=reader.string();break;}case 2:{message.value=reader.string();break;}case 3:{message.valueInt=reader.uint32();break;}default:reader.skipType(tag&7);break;}}return message;};
NormalKV.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
NormalKV.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.key!=null&&message.hasOwnProperty("key"))if(!$util.isString(message.key))return "key: string expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.valueInt!=null&&message.hasOwnProperty("valueInt"))if(!$util.isInteger(message.valueInt))return "valueInt: integer expected";return null;};
NormalKV.fromObject=function fromObject(object){if(object instanceof $root.Event.NormalKV)return object;var message=new $root.Event.NormalKV();if(object.key!=null)message.key=String(object.key);if(object.value!=null)message.value=String(object.value);if(object.valueInt!=null)message.valueInt=object.valueInt>>>0;return message;};
NormalKV.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.key="";object.value="";object.valueInt=0;}if(message.key!=null&&message.hasOwnProperty("key"))object.key=message.key;if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.valueInt!=null&&message.hasOwnProperty("valueInt"))object.valueInt=message.valueInt;return object;};
NormalKV.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
NormalKV.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.NormalKV";};return NormalKV;}();Event.CustomEventProp=function(){
function CustomEventProp(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
CustomEventProp.prototype.key="";
CustomEventProp.prototype.value="";
CustomEventProp.create=function create(properties){return new CustomEventProp(properties);};
CustomEventProp.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.key!=null&&Object.hasOwnProperty.call(message,"key"))writer.uint32(10).string(message.key);if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(18).string(message.value);return writer;};
CustomEventProp.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
CustomEventProp.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.CustomEventProp();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.key=reader.string();break;}case 2:{message.value=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
CustomEventProp.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
CustomEventProp.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.key!=null&&message.hasOwnProperty("key"))if(!$util.isString(message.key))return "key: string expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";return null;};
CustomEventProp.fromObject=function fromObject(object){if(object instanceof $root.Event.CustomEventProp)return object;var message=new $root.Event.CustomEventProp();if(object.key!=null)message.key=String(object.key);if(object.value!=null)message.value=String(object.value);return message;};
CustomEventProp.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.key="";object.value="";}if(message.key!=null&&message.hasOwnProperty("key"))object.key=message.key;if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;return object;};
CustomEventProp.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
CustomEventProp.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.CustomEventProp";};return CustomEventProp;}();Event.Input=function(){
function Input(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Input.prototype.value="";
Input.prototype.valueLen=0;
Input.prototype.masked=false;
Input.create=function create(properties){return new Input(properties);};
Input.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(10).string(message.value);if(message.valueLen!=null&&Object.hasOwnProperty.call(message,"valueLen"))writer.uint32(16).int32(message.valueLen);if(message.masked!=null&&Object.hasOwnProperty.call(message,"masked"))writer.uint32(24).bool(message.masked);return writer;};
Input.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Input.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Input();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.value=reader.string();break;}case 2:{message.valueLen=reader.int32();break;}case 3:{message.masked=reader.bool();break;}default:reader.skipType(tag&7);break;}}return message;};
Input.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Input.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.valueLen!=null&&message.hasOwnProperty("valueLen"))if(!$util.isInteger(message.valueLen))return "valueLen: integer expected";if(message.masked!=null&&message.hasOwnProperty("masked"))if(typeof message.masked!=="boolean")return "masked: boolean expected";return null;};
Input.fromObject=function fromObject(object){if(object instanceof $root.Event.Input)return object;var message=new $root.Event.Input();if(object.value!=null)message.value=String(object.value);if(object.valueLen!=null)message.valueLen=object.valueLen|0;if(object.masked!=null)message.masked=Boolean(object.masked);return message;};
Input.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.value="";object.valueLen=0;object.masked=false;}if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.valueLen!=null&&message.hasOwnProperty("valueLen"))object.valueLen=message.valueLen;if(message.masked!=null&&message.hasOwnProperty("masked"))object.masked=message.masked;return object;};
Input.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Input.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Input";};return Input;}();Event.WxInput=function(){
function WxInput(properties){this.ancestorPath=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
WxInput.prototype.ancestorPath=$util.emptyArray;
WxInput.prototype.type=0;
WxInput.prototype.value="";
WxInput.prototype.placeholder="";
WxInput.prototype.valueLen=0;
WxInput.create=function create(properties){return new WxInput(properties);};
WxInput.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.ancestorPath!=null&&message.ancestorPath.length)for(var i=0;i<message.ancestorPath.length;++i)$root.AncestorNode.encode(message.ancestorPath[i],writer.uint32(10).fork()).ldelim();if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(16).int32(message.type);if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(26).string(message.value);if(message.placeholder!=null&&Object.hasOwnProperty.call(message,"placeholder"))writer.uint32(34).string(message.placeholder);if(message.valueLen!=null&&Object.hasOwnProperty.call(message,"valueLen"))writer.uint32(40).int32(message.valueLen);return writer;};
WxInput.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
WxInput.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.WxInput();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{if(!(message.ancestorPath&&message.ancestorPath.length))message.ancestorPath=[];message.ancestorPath.push($root.AncestorNode.decode(reader,reader.uint32()));break;}case 2:{message.type=reader.int32();break;}case 3:{message.value=reader.string();break;}case 4:{message.placeholder=reader.string();break;}case 5:{message.valueLen=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
WxInput.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
WxInput.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.ancestorPath!=null&&message.hasOwnProperty("ancestorPath")){if(!Array.isArray(message.ancestorPath))return "ancestorPath: array expected";for(var i=0;i<message.ancestorPath.length;++i){var error=$root.AncestorNode.verify(message.ancestorPath[i]);if(error)return "ancestorPath."+error;}}if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.placeholder!=null&&message.hasOwnProperty("placeholder"))if(!$util.isString(message.placeholder))return "placeholder: string expected";if(message.valueLen!=null&&message.hasOwnProperty("valueLen"))if(!$util.isInteger(message.valueLen))return "valueLen: integer expected";return null;};
WxInput.fromObject=function fromObject(object){if(object instanceof $root.Event.WxInput)return object;var message=new $root.Event.WxInput();if(object.ancestorPath){if(!Array.isArray(object.ancestorPath))throw TypeError(".Event.WxInput.ancestorPath: array expected");message.ancestorPath=[];for(var i=0;i<object.ancestorPath.length;++i){if(typeof object.ancestorPath[i]!=="object")throw TypeError(".Event.WxInput.ancestorPath: object expected");message.ancestorPath[i]=$root.AncestorNode.fromObject(object.ancestorPath[i]);}}if(object.type!=null)message.type=object.type|0;if(object.value!=null)message.value=String(object.value);if(object.placeholder!=null)message.placeholder=String(object.placeholder);if(object.valueLen!=null)message.valueLen=object.valueLen|0;return message;};
WxInput.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults)object.ancestorPath=[];if(options.defaults){object.type=0;object.value="";object.placeholder="";object.valueLen=0;}if(message.ancestorPath&&message.ancestorPath.length){object.ancestorPath=[];for(var j=0;j<message.ancestorPath.length;++j)object.ancestorPath[j]=$root.AncestorNode.toObject(message.ancestorPath[j],options);}if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.placeholder!=null&&message.hasOwnProperty("placeholder"))object.placeholder=message.placeholder;if(message.valueLen!=null&&message.hasOwnProperty("valueLen"))object.valueLen=message.valueLen;return object;};
WxInput.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
WxInput.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.WxInput";};return WxInput;}();Event.StayTime=function(){
function StayTime(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
StayTime.prototype.path="";
StayTime.prototype.staytime=$util.Long?$util.Long.fromBits(0,0,false):0;
StayTime.prototype.query="";
StayTime.create=function create(properties){return new StayTime(properties);};
StayTime.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.path!=null&&Object.hasOwnProperty.call(message,"path"))writer.uint32(10).string(message.path);if(message.staytime!=null&&Object.hasOwnProperty.call(message,"staytime"))writer.uint32(16).int64(message.staytime);if(message.query!=null&&Object.hasOwnProperty.call(message,"query"))writer.uint32(26).string(message.query);return writer;};
StayTime.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
StayTime.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.StayTime();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.path=reader.string();break;}case 2:{message.staytime=reader.int64();break;}case 3:{message.query=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
StayTime.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
StayTime.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.path!=null&&message.hasOwnProperty("path"))if(!$util.isString(message.path))return "path: string expected";if(message.staytime!=null&&message.hasOwnProperty("staytime"))if(!$util.isInteger(message.staytime)&&!(message.staytime&&$util.isInteger(message.staytime.low)&&$util.isInteger(message.staytime.high)))return "staytime: integer|Long expected";if(message.query!=null&&message.hasOwnProperty("query"))if(!$util.isString(message.query))return "query: string expected";return null;};
StayTime.fromObject=function fromObject(object){if(object instanceof $root.Event.StayTime)return object;var message=new $root.Event.StayTime();if(object.path!=null)message.path=String(object.path);if(object.staytime!=null)if($util.Long)(message.staytime=$util.Long.fromValue(object.staytime)).unsigned=false;else if(typeof object.staytime==="string")message.staytime=parseInt(object.staytime,10);else if(typeof object.staytime==="number")message.staytime=object.staytime;else if(typeof object.staytime==="object")message.staytime=new $util.LongBits(object.staytime.low>>>0,object.staytime.high>>>0).toNumber();if(object.query!=null)message.query=String(object.query);return message;};
StayTime.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.path="";if($util.Long){var long=new $util.Long(0,0,false);object.staytime=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.staytime=options.longs===String?"0":0;object.query="";}if(message.path!=null&&message.hasOwnProperty("path"))object.path=message.path;if(message.staytime!=null&&message.hasOwnProperty("staytime"))if(typeof message.staytime==="number")object.staytime=options.longs===String?String(message.staytime):message.staytime;else object.staytime=options.longs===String?$util.Long.prototype.toString.call(message.staytime):options.longs===Number?new $util.LongBits(message.staytime.low>>>0,message.staytime.high>>>0).toNumber():message.staytime;if(message.query!=null&&message.hasOwnProperty("query"))object.query=message.query;return object;};
StayTime.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
StayTime.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.StayTime";};return StayTime;}();Event.Route=function(){
function Route(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Route.prototype.type=0;
Route.prototype.path="";
Route.prototype.query="";
Route.create=function create(properties){return new Route(properties);};
Route.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(8).int32(message.type);if(message.path!=null&&Object.hasOwnProperty.call(message,"path"))writer.uint32(18).string(message.path);if(message.query!=null&&Object.hasOwnProperty.call(message,"query"))writer.uint32(26).string(message.query);return writer;};
Route.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Route.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Route();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.type=reader.int32();break;}case 2:{message.path=reader.string();break;}case 3:{message.query=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
Route.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Route.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.path!=null&&message.hasOwnProperty("path"))if(!$util.isString(message.path))return "path: string expected";if(message.query!=null&&message.hasOwnProperty("query"))if(!$util.isString(message.query))return "query: string expected";return null;};
Route.fromObject=function fromObject(object){if(object instanceof $root.Event.Route)return object;var message=new $root.Event.Route();if(object.type!=null)message.type=object.type|0;if(object.path!=null)message.path=String(object.path);if(object.query!=null)message.query=String(object.query);return message;};
Route.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.type=0;object.path="";object.query="";}if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.path!=null&&message.hasOwnProperty("path"))object.path=message.path;if(message.query!=null&&message.hasOwnProperty("query"))object.query=message.query;return object;};
Route.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Route.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Route";};return Route;}();Event.EnvConfig=function(){
function EnvConfig(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
EnvConfig.prototype.isWhitelistMaskMode=false;
EnvConfig.prototype.dict="";
EnvConfig.prototype.auxiluaryInfo="";
EnvConfig.prototype.inIframe=false;
EnvConfig.prototype.reporter=0;
EnvConfig.prototype.canvas=false;
EnvConfig.prototype.console=false;
EnvConfig.prototype.network=false;
EnvConfig.prototype.sync=false;
EnvConfig.prototype.iframe=false;
EnvConfig.prototype.enabledFeatures="";
EnvConfig.create=function create(properties){return new EnvConfig(properties);};
EnvConfig.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.isWhitelistMaskMode!=null&&Object.hasOwnProperty.call(message,"isWhitelistMaskMode"))writer.uint32(8).bool(message.isWhitelistMaskMode);if(message.dict!=null&&Object.hasOwnProperty.call(message,"dict"))writer.uint32(18).string(message.dict);if(message.auxiluaryInfo!=null&&Object.hasOwnProperty.call(message,"auxiluaryInfo"))writer.uint32(26).string(message.auxiluaryInfo);if(message.inIframe!=null&&Object.hasOwnProperty.call(message,"inIframe"))writer.uint32(32).bool(message.inIframe);if(message.reporter!=null&&Object.hasOwnProperty.call(message,"reporter"))writer.uint32(40).int32(message.reporter);if(message.canvas!=null&&Object.hasOwnProperty.call(message,"canvas"))writer.uint32(48).bool(message.canvas);if(message.console!=null&&Object.hasOwnProperty.call(message,"console"))writer.uint32(56).bool(message.console);if(message.network!=null&&Object.hasOwnProperty.call(message,"network"))writer.uint32(64).bool(message.network);if(message.sync!=null&&Object.hasOwnProperty.call(message,"sync"))writer.uint32(72).bool(message.sync);if(message.iframe!=null&&Object.hasOwnProperty.call(message,"iframe"))writer.uint32(80).bool(message.iframe);if(message.enabledFeatures!=null&&Object.hasOwnProperty.call(message,"enabledFeatures"))writer.uint32(90).string(message.enabledFeatures);return writer;};
EnvConfig.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
EnvConfig.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.EnvConfig();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.isWhitelistMaskMode=reader.bool();break;}case 2:{message.dict=reader.string();break;}case 3:{message.auxiluaryInfo=reader.string();break;}case 4:{message.inIframe=reader.bool();break;}case 5:{message.reporter=reader.int32();break;}case 6:{message.canvas=reader.bool();break;}case 7:{message.console=reader.bool();break;}case 8:{message.network=reader.bool();break;}case 9:{message.sync=reader.bool();break;}case 10:{message.iframe=reader.bool();break;}case 11:{message.enabledFeatures=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
EnvConfig.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
EnvConfig.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.isWhitelistMaskMode!=null&&message.hasOwnProperty("isWhitelistMaskMode"))if(typeof message.isWhitelistMaskMode!=="boolean")return "isWhitelistMaskMode: boolean expected";if(message.dict!=null&&message.hasOwnProperty("dict"))if(!$util.isString(message.dict))return "dict: string expected";if(message.auxiluaryInfo!=null&&message.hasOwnProperty("auxiluaryInfo"))if(!$util.isString(message.auxiluaryInfo))return "auxiluaryInfo: string expected";if(message.inIframe!=null&&message.hasOwnProperty("inIframe"))if(typeof message.inIframe!=="boolean")return "inIframe: boolean expected";if(message.reporter!=null&&message.hasOwnProperty("reporter"))if(!$util.isInteger(message.reporter))return "reporter: integer expected";if(message.canvas!=null&&message.hasOwnProperty("canvas"))if(typeof message.canvas!=="boolean")return "canvas: boolean expected";if(message.console!=null&&message.hasOwnProperty("console"))if(typeof message.console!=="boolean")return "console: boolean expected";if(message.network!=null&&message.hasOwnProperty("network"))if(typeof message.network!=="boolean")return "network: boolean expected";if(message.sync!=null&&message.hasOwnProperty("sync"))if(typeof message.sync!=="boolean")return "sync: boolean expected";if(message.iframe!=null&&message.hasOwnProperty("iframe"))if(typeof message.iframe!=="boolean")return "iframe: boolean expected";if(message.enabledFeatures!=null&&message.hasOwnProperty("enabledFeatures"))if(!$util.isString(message.enabledFeatures))return "enabledFeatures: string expected";return null;};
EnvConfig.fromObject=function fromObject(object){if(object instanceof $root.Event.EnvConfig)return object;var message=new $root.Event.EnvConfig();if(object.isWhitelistMaskMode!=null)message.isWhitelistMaskMode=Boolean(object.isWhitelistMaskMode);if(object.dict!=null)message.dict=String(object.dict);if(object.auxiluaryInfo!=null)message.auxiluaryInfo=String(object.auxiluaryInfo);if(object.inIframe!=null)message.inIframe=Boolean(object.inIframe);if(object.reporter!=null)message.reporter=object.reporter|0;if(object.canvas!=null)message.canvas=Boolean(object.canvas);if(object.console!=null)message.console=Boolean(object.console);if(object.network!=null)message.network=Boolean(object.network);if(object.sync!=null)message.sync=Boolean(object.sync);if(object.iframe!=null)message.iframe=Boolean(object.iframe);if(object.enabledFeatures!=null)message.enabledFeatures=String(object.enabledFeatures);return message;};
EnvConfig.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.isWhitelistMaskMode=false;object.dict="";object.auxiluaryInfo="";object.inIframe=false;object.reporter=0;object.canvas=false;object.console=false;object.network=false;object.sync=false;object.iframe=false;object.enabledFeatures="";}if(message.isWhitelistMaskMode!=null&&message.hasOwnProperty("isWhitelistMaskMode"))object.isWhitelistMaskMode=message.isWhitelistMaskMode;if(message.dict!=null&&message.hasOwnProperty("dict"))object.dict=message.dict;if(message.auxiluaryInfo!=null&&message.hasOwnProperty("auxiluaryInfo"))object.auxiluaryInfo=message.auxiluaryInfo;if(message.inIframe!=null&&message.hasOwnProperty("inIframe"))object.inIframe=message.inIframe;if(message.reporter!=null&&message.hasOwnProperty("reporter"))object.reporter=message.reporter;if(message.canvas!=null&&message.hasOwnProperty("canvas"))object.canvas=message.canvas;if(message.console!=null&&message.hasOwnProperty("console"))object.console=message.console;if(message.network!=null&&message.hasOwnProperty("network"))object.network=message.network;if(message.sync!=null&&message.hasOwnProperty("sync"))object.sync=message.sync;if(message.iframe!=null&&message.hasOwnProperty("iframe"))object.iframe=message.iframe;if(message.enabledFeatures!=null&&message.hasOwnProperty("enabledFeatures"))object.enabledFeatures=message.enabledFeatures;return object;};
EnvConfig.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
EnvConfig.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.EnvConfig";};return EnvConfig;}();Event.WindowState=function(){
function WindowState(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
WindowState.prototype.viewWidth=$util.Long?$util.Long.fromBits(0,0,false):0;
WindowState.prototype.viewHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
WindowState.prototype.url="";
WindowState.prototype.title="";
WindowState.prototype.docWidth=$util.Long?$util.Long.fromBits(0,0,false):0;
WindowState.prototype.docHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
WindowState.prototype.safeAreaInsetTop="";
WindowState.prototype.safeAreaInsetBottom="";
WindowState.prototype.safeAreaInsetLeft="";
WindowState.prototype.safeAreaInsetRight="";
WindowState.create=function create(properties){return new WindowState(properties);};
WindowState.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.viewWidth!=null&&Object.hasOwnProperty.call(message,"viewWidth"))writer.uint32(8).int64(message.viewWidth);if(message.viewHeight!=null&&Object.hasOwnProperty.call(message,"viewHeight"))writer.uint32(16).int64(message.viewHeight);if(message.url!=null&&Object.hasOwnProperty.call(message,"url"))writer.uint32(26).string(message.url);if(message.title!=null&&Object.hasOwnProperty.call(message,"title"))writer.uint32(34).string(message.title);if(message.docWidth!=null&&Object.hasOwnProperty.call(message,"docWidth"))writer.uint32(40).int64(message.docWidth);if(message.docHeight!=null&&Object.hasOwnProperty.call(message,"docHeight"))writer.uint32(48).int64(message.docHeight);if(message.safeAreaInsetTop!=null&&Object.hasOwnProperty.call(message,"safeAreaInsetTop"))writer.uint32(58).string(message.safeAreaInsetTop);if(message.safeAreaInsetBottom!=null&&Object.hasOwnProperty.call(message,"safeAreaInsetBottom"))writer.uint32(66).string(message.safeAreaInsetBottom);if(message.safeAreaInsetLeft!=null&&Object.hasOwnProperty.call(message,"safeAreaInsetLeft"))writer.uint32(74).string(message.safeAreaInsetLeft);if(message.safeAreaInsetRight!=null&&Object.hasOwnProperty.call(message,"safeAreaInsetRight"))writer.uint32(82).string(message.safeAreaInsetRight);return writer;};
WindowState.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
WindowState.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.WindowState();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.viewWidth=reader.int64();break;}case 2:{message.viewHeight=reader.int64();break;}case 3:{message.url=reader.string();break;}case 4:{message.title=reader.string();break;}case 5:{message.docWidth=reader.int64();break;}case 6:{message.docHeight=reader.int64();break;}case 7:{message.safeAreaInsetTop=reader.string();break;}case 8:{message.safeAreaInsetBottom=reader.string();break;}case 9:{message.safeAreaInsetLeft=reader.string();break;}case 10:{message.safeAreaInsetRight=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
WindowState.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
WindowState.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.viewWidth!=null&&message.hasOwnProperty("viewWidth"))if(!$util.isInteger(message.viewWidth)&&!(message.viewWidth&&$util.isInteger(message.viewWidth.low)&&$util.isInteger(message.viewWidth.high)))return "viewWidth: integer|Long expected";if(message.viewHeight!=null&&message.hasOwnProperty("viewHeight"))if(!$util.isInteger(message.viewHeight)&&!(message.viewHeight&&$util.isInteger(message.viewHeight.low)&&$util.isInteger(message.viewHeight.high)))return "viewHeight: integer|Long expected";if(message.url!=null&&message.hasOwnProperty("url"))if(!$util.isString(message.url))return "url: string expected";if(message.title!=null&&message.hasOwnProperty("title"))if(!$util.isString(message.title))return "title: string expected";if(message.docWidth!=null&&message.hasOwnProperty("docWidth"))if(!$util.isInteger(message.docWidth)&&!(message.docWidth&&$util.isInteger(message.docWidth.low)&&$util.isInteger(message.docWidth.high)))return "docWidth: integer|Long expected";if(message.docHeight!=null&&message.hasOwnProperty("docHeight"))if(!$util.isInteger(message.docHeight)&&!(message.docHeight&&$util.isInteger(message.docHeight.low)&&$util.isInteger(message.docHeight.high)))return "docHeight: integer|Long expected";if(message.safeAreaInsetTop!=null&&message.hasOwnProperty("safeAreaInsetTop"))if(!$util.isString(message.safeAreaInsetTop))return "safeAreaInsetTop: string expected";if(message.safeAreaInsetBottom!=null&&message.hasOwnProperty("safeAreaInsetBottom"))if(!$util.isString(message.safeAreaInsetBottom))return "safeAreaInsetBottom: string expected";if(message.safeAreaInsetLeft!=null&&message.hasOwnProperty("safeAreaInsetLeft"))if(!$util.isString(message.safeAreaInsetLeft))return "safeAreaInsetLeft: string expected";if(message.safeAreaInsetRight!=null&&message.hasOwnProperty("safeAreaInsetRight"))if(!$util.isString(message.safeAreaInsetRight))return "safeAreaInsetRight: string expected";return null;};
WindowState.fromObject=function fromObject(object){if(object instanceof $root.Event.WindowState)return object;var message=new $root.Event.WindowState();if(object.viewWidth!=null)if($util.Long)(message.viewWidth=$util.Long.fromValue(object.viewWidth)).unsigned=false;else if(typeof object.viewWidth==="string")message.viewWidth=parseInt(object.viewWidth,10);else if(typeof object.viewWidth==="number")message.viewWidth=object.viewWidth;else if(typeof object.viewWidth==="object")message.viewWidth=new $util.LongBits(object.viewWidth.low>>>0,object.viewWidth.high>>>0).toNumber();if(object.viewHeight!=null)if($util.Long)(message.viewHeight=$util.Long.fromValue(object.viewHeight)).unsigned=false;else if(typeof object.viewHeight==="string")message.viewHeight=parseInt(object.viewHeight,10);else if(typeof object.viewHeight==="number")message.viewHeight=object.viewHeight;else if(typeof object.viewHeight==="object")message.viewHeight=new $util.LongBits(object.viewHeight.low>>>0,object.viewHeight.high>>>0).toNumber();if(object.url!=null)message.url=String(object.url);if(object.title!=null)message.title=String(object.title);if(object.docWidth!=null)if($util.Long)(message.docWidth=$util.Long.fromValue(object.docWidth)).unsigned=false;else if(typeof object.docWidth==="string")message.docWidth=parseInt(object.docWidth,10);else if(typeof object.docWidth==="number")message.docWidth=object.docWidth;else if(typeof object.docWidth==="object")message.docWidth=new $util.LongBits(object.docWidth.low>>>0,object.docWidth.high>>>0).toNumber();if(object.docHeight!=null)if($util.Long)(message.docHeight=$util.Long.fromValue(object.docHeight)).unsigned=false;else if(typeof object.docHeight==="string")message.docHeight=parseInt(object.docHeight,10);else if(typeof object.docHeight==="number")message.docHeight=object.docHeight;else if(typeof object.docHeight==="object")message.docHeight=new $util.LongBits(object.docHeight.low>>>0,object.docHeight.high>>>0).toNumber();if(object.safeAreaInsetTop!=null)message.safeAreaInsetTop=String(object.safeAreaInsetTop);if(object.safeAreaInsetBottom!=null)message.safeAreaInsetBottom=String(object.safeAreaInsetBottom);if(object.safeAreaInsetLeft!=null)message.safeAreaInsetLeft=String(object.safeAreaInsetLeft);if(object.safeAreaInsetRight!=null)message.safeAreaInsetRight=String(object.safeAreaInsetRight);return message;};
WindowState.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){if($util.Long){var long=new $util.Long(0,0,false);object.viewWidth=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.viewWidth=options.longs===String?"0":0;if($util.Long){var _long6=new $util.Long(0,0,false);object.viewHeight=options.longs===String?_long6.toString():options.longs===Number?_long6.toNumber():_long6;}else object.viewHeight=options.longs===String?"0":0;object.url="";object.title="";if($util.Long){var _long7=new $util.Long(0,0,false);object.docWidth=options.longs===String?_long7.toString():options.longs===Number?_long7.toNumber():_long7;}else object.docWidth=options.longs===String?"0":0;if($util.Long){var _long8=new $util.Long(0,0,false);object.docHeight=options.longs===String?_long8.toString():options.longs===Number?_long8.toNumber():_long8;}else object.docHeight=options.longs===String?"0":0;object.safeAreaInsetTop="";object.safeAreaInsetBottom="";object.safeAreaInsetLeft="";object.safeAreaInsetRight="";}if(message.viewWidth!=null&&message.hasOwnProperty("viewWidth"))if(typeof message.viewWidth==="number")object.viewWidth=options.longs===String?String(message.viewWidth):message.viewWidth;else object.viewWidth=options.longs===String?$util.Long.prototype.toString.call(message.viewWidth):options.longs===Number?new $util.LongBits(message.viewWidth.low>>>0,message.viewWidth.high>>>0).toNumber():message.viewWidth;if(message.viewHeight!=null&&message.hasOwnProperty("viewHeight"))if(typeof message.viewHeight==="number")object.viewHeight=options.longs===String?String(message.viewHeight):message.viewHeight;else object.viewHeight=options.longs===String?$util.Long.prototype.toString.call(message.viewHeight):options.longs===Number?new $util.LongBits(message.viewHeight.low>>>0,message.viewHeight.high>>>0).toNumber():message.viewHeight;if(message.url!=null&&message.hasOwnProperty("url"))object.url=message.url;if(message.title!=null&&message.hasOwnProperty("title"))object.title=message.title;if(message.docWidth!=null&&message.hasOwnProperty("docWidth"))if(typeof message.docWidth==="number")object.docWidth=options.longs===String?String(message.docWidth):message.docWidth;else object.docWidth=options.longs===String?$util.Long.prototype.toString.call(message.docWidth):options.longs===Number?new $util.LongBits(message.docWidth.low>>>0,message.docWidth.high>>>0).toNumber():message.docWidth;if(message.docHeight!=null&&message.hasOwnProperty("docHeight"))if(typeof message.docHeight==="number")object.docHeight=options.longs===String?String(message.docHeight):message.docHeight;else object.docHeight=options.longs===String?$util.Long.prototype.toString.call(message.docHeight):options.longs===Number?new $util.LongBits(message.docHeight.low>>>0,message.docHeight.high>>>0).toNumber():message.docHeight;if(message.safeAreaInsetTop!=null&&message.hasOwnProperty("safeAreaInsetTop"))object.safeAreaInsetTop=message.safeAreaInsetTop;if(message.safeAreaInsetBottom!=null&&message.hasOwnProperty("safeAreaInsetBottom"))object.safeAreaInsetBottom=message.safeAreaInsetBottom;if(message.safeAreaInsetLeft!=null&&message.hasOwnProperty("safeAreaInsetLeft"))object.safeAreaInsetLeft=message.safeAreaInsetLeft;if(message.safeAreaInsetRight!=null&&message.hasOwnProperty("safeAreaInsetRight"))object.safeAreaInsetRight=message.safeAreaInsetRight;return object;};
WindowState.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
WindowState.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.WindowState";};return WindowState;}();Event.BrowserEnv=function(){
function BrowserEnv(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
BrowserEnv.prototype.userAgent="";
BrowserEnv.prototype.os="";
BrowserEnv.prototype.osVersion="";
BrowserEnv.prototype.deviceVendor="";
BrowserEnv.prototype.deviceType="";
BrowserEnv.prototype.deviceModel="";
BrowserEnv.prototype.browser="";
BrowserEnv.prototype.identifier="";
BrowserEnv.create=function create(properties){return new BrowserEnv(properties);};
BrowserEnv.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.userAgent!=null&&Object.hasOwnProperty.call(message,"userAgent"))writer.uint32(10).string(message.userAgent);if(message.os!=null&&Object.hasOwnProperty.call(message,"os"))writer.uint32(18).string(message.os);if(message.osVersion!=null&&Object.hasOwnProperty.call(message,"osVersion"))writer.uint32(26).string(message.osVersion);if(message.deviceVendor!=null&&Object.hasOwnProperty.call(message,"deviceVendor"))writer.uint32(34).string(message.deviceVendor);if(message.deviceType!=null&&Object.hasOwnProperty.call(message,"deviceType"))writer.uint32(42).string(message.deviceType);if(message.deviceModel!=null&&Object.hasOwnProperty.call(message,"deviceModel"))writer.uint32(50).string(message.deviceModel);if(message.browser!=null&&Object.hasOwnProperty.call(message,"browser"))writer.uint32(58).string(message.browser);if(message.identifier!=null&&Object.hasOwnProperty.call(message,"identifier"))writer.uint32(66).string(message.identifier);return writer;};
BrowserEnv.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
BrowserEnv.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.BrowserEnv();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.userAgent=reader.string();break;}case 2:{message.os=reader.string();break;}case 3:{message.osVersion=reader.string();break;}case 4:{message.deviceVendor=reader.string();break;}case 5:{message.deviceType=reader.string();break;}case 6:{message.deviceModel=reader.string();break;}case 7:{message.browser=reader.string();break;}case 8:{message.identifier=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
BrowserEnv.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
BrowserEnv.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.userAgent!=null&&message.hasOwnProperty("userAgent"))if(!$util.isString(message.userAgent))return "userAgent: string expected";if(message.os!=null&&message.hasOwnProperty("os"))if(!$util.isString(message.os))return "os: string expected";if(message.osVersion!=null&&message.hasOwnProperty("osVersion"))if(!$util.isString(message.osVersion))return "osVersion: string expected";if(message.deviceVendor!=null&&message.hasOwnProperty("deviceVendor"))if(!$util.isString(message.deviceVendor))return "deviceVendor: string expected";if(message.deviceType!=null&&message.hasOwnProperty("deviceType"))if(!$util.isString(message.deviceType))return "deviceType: string expected";if(message.deviceModel!=null&&message.hasOwnProperty("deviceModel"))if(!$util.isString(message.deviceModel))return "deviceModel: string expected";if(message.browser!=null&&message.hasOwnProperty("browser"))if(!$util.isString(message.browser))return "browser: string expected";if(message.identifier!=null&&message.hasOwnProperty("identifier"))if(!$util.isString(message.identifier))return "identifier: string expected";return null;};
BrowserEnv.fromObject=function fromObject(object){if(object instanceof $root.Event.BrowserEnv)return object;var message=new $root.Event.BrowserEnv();if(object.userAgent!=null)message.userAgent=String(object.userAgent);if(object.os!=null)message.os=String(object.os);if(object.osVersion!=null)message.osVersion=String(object.osVersion);if(object.deviceVendor!=null)message.deviceVendor=String(object.deviceVendor);if(object.deviceType!=null)message.deviceType=String(object.deviceType);if(object.deviceModel!=null)message.deviceModel=String(object.deviceModel);if(object.browser!=null)message.browser=String(object.browser);if(object.identifier!=null)message.identifier=String(object.identifier);return message;};
BrowserEnv.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.userAgent="";object.os="";object.osVersion="";object.deviceVendor="";object.deviceType="";object.deviceModel="";object.browser="";object.identifier="";}if(message.userAgent!=null&&message.hasOwnProperty("userAgent"))object.userAgent=message.userAgent;if(message.os!=null&&message.hasOwnProperty("os"))object.os=message.os;if(message.osVersion!=null&&message.hasOwnProperty("osVersion"))object.osVersion=message.osVersion;if(message.deviceVendor!=null&&message.hasOwnProperty("deviceVendor"))object.deviceVendor=message.deviceVendor;if(message.deviceType!=null&&message.hasOwnProperty("deviceType"))object.deviceType=message.deviceType;if(message.deviceModel!=null&&message.hasOwnProperty("deviceModel"))object.deviceModel=message.deviceModel;if(message.browser!=null&&message.hasOwnProperty("browser"))object.browser=message.browser;if(message.identifier!=null&&message.hasOwnProperty("identifier"))object.identifier=message.identifier;return object;};
BrowserEnv.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
BrowserEnv.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.BrowserEnv";};return BrowserEnv;}();Event.Depth=function(){
function Depth(properties){this.tops=[];this.bottoms=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Depth.prototype.path="";
Depth.prototype.documentHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
Depth.prototype.maxScrollY=$util.Long?$util.Long.fromBits(0,0,false):0;
Depth.prototype.windowHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
Depth.prototype.selector="";
Depth.prototype.selectorN=0;
Depth.prototype.tops=$util.emptyArray;
Depth.prototype.bottoms=$util.emptyArray;
Depth.create=function create(properties){return new Depth(properties);};
Depth.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.path!=null&&Object.hasOwnProperty.call(message,"path"))writer.uint32(10).string(message.path);if(message.documentHeight!=null&&Object.hasOwnProperty.call(message,"documentHeight"))writer.uint32(16).int64(message.documentHeight);if(message.maxScrollY!=null&&Object.hasOwnProperty.call(message,"maxScrollY"))writer.uint32(24).int64(message.maxScrollY);if(message.windowHeight!=null&&Object.hasOwnProperty.call(message,"windowHeight"))writer.uint32(32).int64(message.windowHeight);if(message.selector!=null&&Object.hasOwnProperty.call(message,"selector"))writer.uint32(42).string(message.selector);if(message.selectorN!=null&&Object.hasOwnProperty.call(message,"selectorN"))writer.uint32(48).int32(message.selectorN);if(message.tops!=null&&message.tops.length){writer.uint32(58).fork();for(var i=0;i<message.tops.length;++i)writer.int32(message.tops[i]);writer.ldelim();}if(message.bottoms!=null&&message.bottoms.length){writer.uint32(66).fork();for(var _i46=0;_i46<message.bottoms.length;++_i46)writer.int32(message.bottoms[_i46]);writer.ldelim();}return writer;};
Depth.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Depth.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Depth();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.path=reader.string();break;}case 2:{message.documentHeight=reader.int64();break;}case 3:{message.maxScrollY=reader.int64();break;}case 4:{message.windowHeight=reader.int64();break;}case 5:{message.selector=reader.string();break;}case 6:{message.selectorN=reader.int32();break;}case 7:{if(!(message.tops&&message.tops.length))message.tops=[];if((tag&7)===2){var end2=reader.uint32()+reader.pos;while(reader.pos<end2)message.tops.push(reader.int32());}else message.tops.push(reader.int32());break;}case 8:{if(!(message.bottoms&&message.bottoms.length))message.bottoms=[];if((tag&7)===2){var _end4=reader.uint32()+reader.pos;while(reader.pos<_end4)message.bottoms.push(reader.int32());}else message.bottoms.push(reader.int32());break;}default:reader.skipType(tag&7);break;}}return message;};
Depth.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Depth.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.path!=null&&message.hasOwnProperty("path"))if(!$util.isString(message.path))return "path: string expected";if(message.documentHeight!=null&&message.hasOwnProperty("documentHeight"))if(!$util.isInteger(message.documentHeight)&&!(message.documentHeight&&$util.isInteger(message.documentHeight.low)&&$util.isInteger(message.documentHeight.high)))return "documentHeight: integer|Long expected";if(message.maxScrollY!=null&&message.hasOwnProperty("maxScrollY"))if(!$util.isInteger(message.maxScrollY)&&!(message.maxScrollY&&$util.isInteger(message.maxScrollY.low)&&$util.isInteger(message.maxScrollY.high)))return "maxScrollY: integer|Long expected";if(message.windowHeight!=null&&message.hasOwnProperty("windowHeight"))if(!$util.isInteger(message.windowHeight)&&!(message.windowHeight&&$util.isInteger(message.windowHeight.low)&&$util.isInteger(message.windowHeight.high)))return "windowHeight: integer|Long expected";if(message.selector!=null&&message.hasOwnProperty("selector"))if(!$util.isString(message.selector))return "selector: string expected";if(message.selectorN!=null&&message.hasOwnProperty("selectorN"))if(!$util.isInteger(message.selectorN))return "selectorN: integer expected";if(message.tops!=null&&message.hasOwnProperty("tops")){if(!Array.isArray(message.tops))return "tops: array expected";for(var i=0;i<message.tops.length;++i)if(!$util.isInteger(message.tops[i]))return "tops: integer[] expected";}if(message.bottoms!=null&&message.hasOwnProperty("bottoms")){if(!Array.isArray(message.bottoms))return "bottoms: array expected";for(var _i47=0;_i47<message.bottoms.length;++_i47)if(!$util.isInteger(message.bottoms[_i47]))return "bottoms: integer[] expected";}return null;};
Depth.fromObject=function fromObject(object){if(object instanceof $root.Event.Depth)return object;var message=new $root.Event.Depth();if(object.path!=null)message.path=String(object.path);if(object.documentHeight!=null)if($util.Long)(message.documentHeight=$util.Long.fromValue(object.documentHeight)).unsigned=false;else if(typeof object.documentHeight==="string")message.documentHeight=parseInt(object.documentHeight,10);else if(typeof object.documentHeight==="number")message.documentHeight=object.documentHeight;else if(typeof object.documentHeight==="object")message.documentHeight=new $util.LongBits(object.documentHeight.low>>>0,object.documentHeight.high>>>0).toNumber();if(object.maxScrollY!=null)if($util.Long)(message.maxScrollY=$util.Long.fromValue(object.maxScrollY)).unsigned=false;else if(typeof object.maxScrollY==="string")message.maxScrollY=parseInt(object.maxScrollY,10);else if(typeof object.maxScrollY==="number")message.maxScrollY=object.maxScrollY;else if(typeof object.maxScrollY==="object")message.maxScrollY=new $util.LongBits(object.maxScrollY.low>>>0,object.maxScrollY.high>>>0).toNumber();if(object.windowHeight!=null)if($util.Long)(message.windowHeight=$util.Long.fromValue(object.windowHeight)).unsigned=false;else if(typeof object.windowHeight==="string")message.windowHeight=parseInt(object.windowHeight,10);else if(typeof object.windowHeight==="number")message.windowHeight=object.windowHeight;else if(typeof object.windowHeight==="object")message.windowHeight=new $util.LongBits(object.windowHeight.low>>>0,object.windowHeight.high>>>0).toNumber();if(object.selector!=null)message.selector=String(object.selector);if(object.selectorN!=null)message.selectorN=object.selectorN|0;if(object.tops){if(!Array.isArray(object.tops))throw TypeError(".Event.Depth.tops: array expected");message.tops=[];for(var i=0;i<object.tops.length;++i)message.tops[i]=object.tops[i]|0;}if(object.bottoms){if(!Array.isArray(object.bottoms))throw TypeError(".Event.Depth.bottoms: array expected");message.bottoms=[];for(var _i48=0;_i48<object.bottoms.length;++_i48)message.bottoms[_i48]=object.bottoms[_i48]|0;}return message;};
Depth.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.tops=[];object.bottoms=[];}if(options.defaults){object.path="";if($util.Long){var long=new $util.Long(0,0,false);object.documentHeight=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.documentHeight=options.longs===String?"0":0;if($util.Long){var _long9=new $util.Long(0,0,false);object.maxScrollY=options.longs===String?_long9.toString():options.longs===Number?_long9.toNumber():_long9;}else object.maxScrollY=options.longs===String?"0":0;if($util.Long){var _long10=new $util.Long(0,0,false);object.windowHeight=options.longs===String?_long10.toString():options.longs===Number?_long10.toNumber():_long10;}else object.windowHeight=options.longs===String?"0":0;object.selector="";object.selectorN=0;}if(message.path!=null&&message.hasOwnProperty("path"))object.path=message.path;if(message.documentHeight!=null&&message.hasOwnProperty("documentHeight"))if(typeof message.documentHeight==="number")object.documentHeight=options.longs===String?String(message.documentHeight):message.documentHeight;else object.documentHeight=options.longs===String?$util.Long.prototype.toString.call(message.documentHeight):options.longs===Number?new $util.LongBits(message.documentHeight.low>>>0,message.documentHeight.high>>>0).toNumber():message.documentHeight;if(message.maxScrollY!=null&&message.hasOwnProperty("maxScrollY"))if(typeof message.maxScrollY==="number")object.maxScrollY=options.longs===String?String(message.maxScrollY):message.maxScrollY;else object.maxScrollY=options.longs===String?$util.Long.prototype.toString.call(message.maxScrollY):options.longs===Number?new $util.LongBits(message.maxScrollY.low>>>0,message.maxScrollY.high>>>0).toNumber():message.maxScrollY;if(message.windowHeight!=null&&message.hasOwnProperty("windowHeight"))if(typeof message.windowHeight==="number")object.windowHeight=options.longs===String?String(message.windowHeight):message.windowHeight;else object.windowHeight=options.longs===String?$util.Long.prototype.toString.call(message.windowHeight):options.longs===Number?new $util.LongBits(message.windowHeight.low>>>0,message.windowHeight.high>>>0).toNumber():message.windowHeight;if(message.selector!=null&&message.hasOwnProperty("selector"))object.selector=message.selector;if(message.selectorN!=null&&message.hasOwnProperty("selectorN"))object.selectorN=message.selectorN;if(message.tops&&message.tops.length){object.tops=[];for(var j=0;j<message.tops.length;++j)object.tops[j]=message.tops[j];}if(message.bottoms&&message.bottoms.length){object.bottoms=[];for(var _j16=0;_j16<message.bottoms.length;++_j16)object.bottoms[_j16]=message.bottoms[_j16];}return object;};
Depth.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Depth.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Depth";};return Depth;}();Event.Memo=function(){
function Memo(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Memo.prototype.key="";
Memo.prototype.keyInt=0;
Memo.prototype.value="";
Memo.prototype.domain=0;
Memo.prototype.refWebview=0;
Memo.prototype.refStart=0;
Memo.prototype.refLen=0;
Memo.prototype.refKey=0;
Memo.prototype.refRemote=0;
Memo.create=function create(properties){return new Memo(properties);};
Memo.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.key!=null&&Object.hasOwnProperty.call(message,"key"))writer.uint32(10).string(message.key);if(message.keyInt!=null&&Object.hasOwnProperty.call(message,"keyInt"))writer.uint32(16).int32(message.keyInt);if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(26).string(message.value);if(message.domain!=null&&Object.hasOwnProperty.call(message,"domain"))writer.uint32(32).int32(message.domain);if(message.refWebview!=null&&Object.hasOwnProperty.call(message,"refWebview"))writer.uint32(40).int32(message.refWebview);if(message.refStart!=null&&Object.hasOwnProperty.call(message,"refStart"))writer.uint32(48).int32(message.refStart);if(message.refLen!=null&&Object.hasOwnProperty.call(message,"refLen"))writer.uint32(56).int32(message.refLen);if(message.refKey!=null&&Object.hasOwnProperty.call(message,"refKey"))writer.uint32(64).int32(message.refKey);if(message.refRemote!=null&&Object.hasOwnProperty.call(message,"refRemote"))writer.uint32(72).int32(message.refRemote);return writer;};
Memo.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Memo.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Memo();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.key=reader.string();break;}case 2:{message.keyInt=reader.int32();break;}case 3:{message.value=reader.string();break;}case 4:{message.domain=reader.int32();break;}case 5:{message.refWebview=reader.int32();break;}case 6:{message.refStart=reader.int32();break;}case 7:{message.refLen=reader.int32();break;}case 8:{message.refKey=reader.int32();break;}case 9:{message.refRemote=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
Memo.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Memo.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.key!=null&&message.hasOwnProperty("key"))if(!$util.isString(message.key))return "key: string expected";if(message.keyInt!=null&&message.hasOwnProperty("keyInt"))if(!$util.isInteger(message.keyInt))return "keyInt: integer expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.domain!=null&&message.hasOwnProperty("domain"))if(!$util.isInteger(message.domain))return "domain: integer expected";if(message.refWebview!=null&&message.hasOwnProperty("refWebview"))if(!$util.isInteger(message.refWebview))return "refWebview: integer expected";if(message.refStart!=null&&message.hasOwnProperty("refStart"))if(!$util.isInteger(message.refStart))return "refStart: integer expected";if(message.refLen!=null&&message.hasOwnProperty("refLen"))if(!$util.isInteger(message.refLen))return "refLen: integer expected";if(message.refKey!=null&&message.hasOwnProperty("refKey"))if(!$util.isInteger(message.refKey))return "refKey: integer expected";if(message.refRemote!=null&&message.hasOwnProperty("refRemote"))if(!$util.isInteger(message.refRemote))return "refRemote: integer expected";return null;};
Memo.fromObject=function fromObject(object){if(object instanceof $root.Event.Memo)return object;var message=new $root.Event.Memo();if(object.key!=null)message.key=String(object.key);if(object.keyInt!=null)message.keyInt=object.keyInt|0;if(object.value!=null)message.value=String(object.value);if(object.domain!=null)message.domain=object.domain|0;if(object.refWebview!=null)message.refWebview=object.refWebview|0;if(object.refStart!=null)message.refStart=object.refStart|0;if(object.refLen!=null)message.refLen=object.refLen|0;if(object.refKey!=null)message.refKey=object.refKey|0;if(object.refRemote!=null)message.refRemote=object.refRemote|0;return message;};
Memo.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.key="";object.keyInt=0;object.value="";object.domain=0;object.refWebview=0;object.refStart=0;object.refLen=0;object.refKey=0;object.refRemote=0;}if(message.key!=null&&message.hasOwnProperty("key"))object.key=message.key;if(message.keyInt!=null&&message.hasOwnProperty("keyInt"))object.keyInt=message.keyInt;if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.domain!=null&&message.hasOwnProperty("domain"))object.domain=message.domain;if(message.refWebview!=null&&message.hasOwnProperty("refWebview"))object.refWebview=message.refWebview;if(message.refStart!=null&&message.hasOwnProperty("refStart"))object.refStart=message.refStart;if(message.refLen!=null&&message.hasOwnProperty("refLen"))object.refLen=message.refLen;if(message.refKey!=null&&message.hasOwnProperty("refKey"))object.refKey=message.refKey;if(message.refRemote!=null&&message.hasOwnProperty("refRemote"))object.refRemote=message.refRemote;return object;};
Memo.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Memo.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Memo";};return Memo;}();Event.Console=function(){
function Console(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Console.prototype.type=0;
Console.prototype.message="";
Console.prototype.level="";
Console.prototype.path="";
Console.prototype.query="";
Console.prototype.eventHash="";
Console.prototype.msgHash="";
Console.create=function create(properties){return new Console(properties);};
Console.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(8).int32(message.type);if(message.message!=null&&Object.hasOwnProperty.call(message,"message"))writer.uint32(18).string(message.message);if(message.level!=null&&Object.hasOwnProperty.call(message,"level"))writer.uint32(26).string(message.level);if(message.path!=null&&Object.hasOwnProperty.call(message,"path"))writer.uint32(34).string(message.path);if(message.query!=null&&Object.hasOwnProperty.call(message,"query"))writer.uint32(42).string(message.query);if(message.eventHash!=null&&Object.hasOwnProperty.call(message,"eventHash"))writer.uint32(50).string(message.eventHash);if(message.msgHash!=null&&Object.hasOwnProperty.call(message,"msgHash"))writer.uint32(58).string(message.msgHash);return writer;};
Console.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Console.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Console();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.type=reader.int32();break;}case 2:{message.message=reader.string();break;}case 3:{message.level=reader.string();break;}case 4:{message.path=reader.string();break;}case 5:{message.query=reader.string();break;}case 6:{message.eventHash=reader.string();break;}case 7:{message.msgHash=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
Console.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Console.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.message!=null&&message.hasOwnProperty("message"))if(!$util.isString(message.message))return "message: string expected";if(message.level!=null&&message.hasOwnProperty("level"))if(!$util.isString(message.level))return "level: string expected";if(message.path!=null&&message.hasOwnProperty("path"))if(!$util.isString(message.path))return "path: string expected";if(message.query!=null&&message.hasOwnProperty("query"))if(!$util.isString(message.query))return "query: string expected";if(message.eventHash!=null&&message.hasOwnProperty("eventHash"))if(!$util.isString(message.eventHash))return "eventHash: string expected";if(message.msgHash!=null&&message.hasOwnProperty("msgHash"))if(!$util.isString(message.msgHash))return "msgHash: string expected";return null;};
Console.fromObject=function fromObject(object){if(object instanceof $root.Event.Console)return object;var message=new $root.Event.Console();if(object.type!=null)message.type=object.type|0;if(object.message!=null)message.message=String(object.message);if(object.level!=null)message.level=String(object.level);if(object.path!=null)message.path=String(object.path);if(object.query!=null)message.query=String(object.query);if(object.eventHash!=null)message.eventHash=String(object.eventHash);if(object.msgHash!=null)message.msgHash=String(object.msgHash);return message;};
Console.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.type=0;object.message="";object.level="";object.path="";object.query="";object.eventHash="";object.msgHash="";}if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.message!=null&&message.hasOwnProperty("message"))object.message=message.message;if(message.level!=null&&message.hasOwnProperty("level"))object.level=message.level;if(message.path!=null&&message.hasOwnProperty("path"))object.path=message.path;if(message.query!=null&&message.hasOwnProperty("query"))object.query=message.query;if(message.eventHash!=null&&message.hasOwnProperty("eventHash"))object.eventHash=message.eventHash;if(message.msgHash!=null&&message.hasOwnProperty("msgHash"))object.msgHash=message.msgHash;return object;};
Console.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Console.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Console";};return Console;}();Event.Network=function(){
function Network(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Network.prototype.success=false;
Network.prototype.url="";
Network.prototype.method="";
Network.prototype.status=0;
Network.prototype.cost=0;
Network.prototype.errMsg="";
Network.prototype.reqBody="";
Network.prototype.resBody="";
Network.create=function create(properties){return new Network(properties);};
Network.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.success!=null&&Object.hasOwnProperty.call(message,"success"))writer.uint32(8).bool(message.success);if(message.url!=null&&Object.hasOwnProperty.call(message,"url"))writer.uint32(18).string(message.url);if(message.method!=null&&Object.hasOwnProperty.call(message,"method"))writer.uint32(26).string(message.method);if(message.status!=null&&Object.hasOwnProperty.call(message,"status"))writer.uint32(32).int32(message.status);if(message.cost!=null&&Object.hasOwnProperty.call(message,"cost"))writer.uint32(40).int32(message.cost);if(message.errMsg!=null&&Object.hasOwnProperty.call(message,"errMsg"))writer.uint32(50).string(message.errMsg);if(message.reqBody!=null&&Object.hasOwnProperty.call(message,"reqBody"))writer.uint32(58).string(message.reqBody);if(message.resBody!=null&&Object.hasOwnProperty.call(message,"resBody"))writer.uint32(66).string(message.resBody);return writer;};
Network.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Network.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.Network();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.success=reader.bool();break;}case 2:{message.url=reader.string();break;}case 3:{message.method=reader.string();break;}case 4:{message.status=reader.int32();break;}case 5:{message.cost=reader.int32();break;}case 6:{message.errMsg=reader.string();break;}case 7:{message.reqBody=reader.string();break;}case 8:{message.resBody=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
Network.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Network.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.success!=null&&message.hasOwnProperty("success"))if(typeof message.success!=="boolean")return "success: boolean expected";if(message.url!=null&&message.hasOwnProperty("url"))if(!$util.isString(message.url))return "url: string expected";if(message.method!=null&&message.hasOwnProperty("method"))if(!$util.isString(message.method))return "method: string expected";if(message.status!=null&&message.hasOwnProperty("status"))if(!$util.isInteger(message.status))return "status: integer expected";if(message.cost!=null&&message.hasOwnProperty("cost"))if(!$util.isInteger(message.cost))return "cost: integer expected";if(message.errMsg!=null&&message.hasOwnProperty("errMsg"))if(!$util.isString(message.errMsg))return "errMsg: string expected";if(message.reqBody!=null&&message.hasOwnProperty("reqBody"))if(!$util.isString(message.reqBody))return "reqBody: string expected";if(message.resBody!=null&&message.hasOwnProperty("resBody"))if(!$util.isString(message.resBody))return "resBody: string expected";return null;};
Network.fromObject=function fromObject(object){if(object instanceof $root.Event.Network)return object;var message=new $root.Event.Network();if(object.success!=null)message.success=Boolean(object.success);if(object.url!=null)message.url=String(object.url);if(object.method!=null)message.method=String(object.method);if(object.status!=null)message.status=object.status|0;if(object.cost!=null)message.cost=object.cost|0;if(object.errMsg!=null)message.errMsg=String(object.errMsg);if(object.reqBody!=null)message.reqBody=String(object.reqBody);if(object.resBody!=null)message.resBody=String(object.resBody);return message;};
Network.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.success=false;object.url="";object.method="";object.status=0;object.cost=0;object.errMsg="";object.reqBody="";object.resBody="";}if(message.success!=null&&message.hasOwnProperty("success"))object.success=message.success;if(message.url!=null&&message.hasOwnProperty("url"))object.url=message.url;if(message.method!=null&&message.hasOwnProperty("method"))object.method=message.method;if(message.status!=null&&message.hasOwnProperty("status"))object.status=message.status;if(message.cost!=null&&message.hasOwnProperty("cost"))object.cost=message.cost;if(message.errMsg!=null&&message.hasOwnProperty("errMsg"))object.errMsg=message.errMsg;if(message.reqBody!=null&&message.hasOwnProperty("reqBody"))object.reqBody=message.reqBody;if(message.resBody!=null&&message.hasOwnProperty("resBody"))object.resBody=message.resBody;return object;};
Network.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Network.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.Network";};return Network;}();Event.ComponentEvent=function(){
function ComponentEvent(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
ComponentEvent.prototype.numType=0;
ComponentEvent.prototype.strType="";
ComponentEvent.prototype.nodeId=0;
ComponentEvent.prototype.imgErrorDetail=null;
ComponentEvent.create=function create(properties){return new ComponentEvent(properties);};
ComponentEvent.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.numType!=null&&Object.hasOwnProperty.call(message,"numType"))writer.uint32(8).int32(message.numType);if(message.strType!=null&&Object.hasOwnProperty.call(message,"strType"))writer.uint32(18).string(message.strType);if(message.nodeId!=null&&Object.hasOwnProperty.call(message,"nodeId"))writer.uint32(24).int32(message.nodeId);if(message.imgErrorDetail!=null&&Object.hasOwnProperty.call(message,"imgErrorDetail"))$root.Event.WxImageErrorEventDetail.encode(message.imgErrorDetail,writer.uint32(42).fork()).ldelim();return writer;};
ComponentEvent.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
ComponentEvent.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.ComponentEvent();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.numType=reader.int32();break;}case 2:{message.strType=reader.string();break;}case 3:{message.nodeId=reader.int32();break;}case 5:{message.imgErrorDetail=$root.Event.WxImageErrorEventDetail.decode(reader,reader.uint32());break;}default:reader.skipType(tag&7);break;}}return message;};
ComponentEvent.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
ComponentEvent.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.numType!=null&&message.hasOwnProperty("numType"))if(!$util.isInteger(message.numType))return "numType: integer expected";if(message.strType!=null&&message.hasOwnProperty("strType"))if(!$util.isString(message.strType))return "strType: string expected";if(message.nodeId!=null&&message.hasOwnProperty("nodeId"))if(!$util.isInteger(message.nodeId))return "nodeId: integer expected";if(message.imgErrorDetail!=null&&message.hasOwnProperty("imgErrorDetail")){var error=$root.Event.WxImageErrorEventDetail.verify(message.imgErrorDetail);if(error)return "imgErrorDetail."+error;}return null;};
ComponentEvent.fromObject=function fromObject(object){if(object instanceof $root.Event.ComponentEvent)return object;var message=new $root.Event.ComponentEvent();if(object.numType!=null)message.numType=object.numType|0;if(object.strType!=null)message.strType=String(object.strType);if(object.nodeId!=null)message.nodeId=object.nodeId|0;if(object.imgErrorDetail!=null){if(typeof object.imgErrorDetail!=="object")throw TypeError(".Event.ComponentEvent.imgErrorDetail: object expected");message.imgErrorDetail=$root.Event.WxImageErrorEventDetail.fromObject(object.imgErrorDetail);}return message;};
ComponentEvent.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.numType=0;object.strType="";object.nodeId=0;object.imgErrorDetail=null;}if(message.numType!=null&&message.hasOwnProperty("numType"))object.numType=message.numType;if(message.strType!=null&&message.hasOwnProperty("strType"))object.strType=message.strType;if(message.nodeId!=null&&message.hasOwnProperty("nodeId"))object.nodeId=message.nodeId;if(message.imgErrorDetail!=null&&message.hasOwnProperty("imgErrorDetail"))object.imgErrorDetail=$root.Event.WxImageErrorEventDetail.toObject(message.imgErrorDetail,options);return object;};
ComponentEvent.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
ComponentEvent.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.ComponentEvent";};return ComponentEvent;}();Event.WxImageErrorEventDetail=function(){
function WxImageErrorEventDetail(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
WxImageErrorEventDetail.prototype.errMsg="";
WxImageErrorEventDetail.create=function create(properties){return new WxImageErrorEventDetail(properties);};
WxImageErrorEventDetail.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.errMsg!=null&&Object.hasOwnProperty.call(message,"errMsg"))writer.uint32(10).string(message.errMsg);return writer;};
WxImageErrorEventDetail.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
WxImageErrorEventDetail.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Event.WxImageErrorEventDetail();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.errMsg=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
WxImageErrorEventDetail.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
WxImageErrorEventDetail.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.errMsg!=null&&message.hasOwnProperty("errMsg"))if(!$util.isString(message.errMsg))return "errMsg: string expected";return null;};
WxImageErrorEventDetail.fromObject=function fromObject(object){if(object instanceof $root.Event.WxImageErrorEventDetail)return object;var message=new $root.Event.WxImageErrorEventDetail();if(object.errMsg!=null)message.errMsg=String(object.errMsg);return message;};
WxImageErrorEventDetail.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults)object.errMsg="";if(message.errMsg!=null&&message.hasOwnProperty("errMsg"))object.errMsg=message.errMsg;return object;};
WxImageErrorEventDetail.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
WxImageErrorEventDetail.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Event.WxImageErrorEventDetail";};return WxImageErrorEventDetail;}();return Event;})();$root.MutationRecord=(()=>{
function MutationRecord(properties){this.addedNodes=[];this.removedNodes=[];this.propertyValueTokens_=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
MutationRecord.prototype.type=0;
MutationRecord.prototype.target=0;
MutationRecord.prototype.addedNodes=$util.emptyArray;
MutationRecord.prototype.removedNodes=$util.emptyArray;
MutationRecord.prototype.previousSibling=0;
MutationRecord.prototype.nextSibling=0;
MutationRecord.prototype.attributeName="";
MutationRecord.prototype.attributeValue="";
MutationRecord.prototype.attributeRemoved=false;
MutationRecord.prototype.propertyName="";
MutationRecord.prototype.propertyValueStr="";
MutationRecord.prototype.propertyValueNum=0;
MutationRecord.prototype.propertyValueBool=false;
MutationRecord.prototype.propertyValueType=0;
MutationRecord.prototype.propertyName_=0;
MutationRecord.prototype.propertyValueTokens_=$util.emptyArray;
MutationRecord.prototype.characterData="";
MutationRecord.prototype.characterDataHash="";
MutationRecord.prototype.maskLength=$util.Long?$util.Long.fromBits(0,0,false):0;
MutationRecord.prototype.width=$util.Long?$util.Long.fromBits(0,0,false):0;
MutationRecord.prototype.height=$util.Long?$util.Long.fromBits(0,0,false):0;
MutationRecord.prototype.canvas=null;
MutationRecord.prototype.videoEventType=0;
MutationRecord.prototype.position=0;
MutationRecord.create=function create(properties){return new MutationRecord(properties);};
MutationRecord.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(8).int32(message.type);if(message.target!=null&&Object.hasOwnProperty.call(message,"target"))writer.uint32(16).int32(message.target);if(message.addedNodes!=null&&message.addedNodes.length)for(var i=0;i<message.addedNodes.length;++i)$root.AddedNodesSlice.encode(message.addedNodes[i],writer.uint32(26).fork()).ldelim();if(message.removedNodes!=null&&message.removedNodes.length)for(var _i49=0;_i49<message.removedNodes.length;++_i49)writer.uint32(32).int32(message.removedNodes[_i49]);if(message.previousSibling!=null&&Object.hasOwnProperty.call(message,"previousSibling"))writer.uint32(40).int32(message.previousSibling);if(message.nextSibling!=null&&Object.hasOwnProperty.call(message,"nextSibling"))writer.uint32(48).int32(message.nextSibling);if(message.attributeName!=null&&Object.hasOwnProperty.call(message,"attributeName"))writer.uint32(58).string(message.attributeName);if(message.attributeValue!=null&&Object.hasOwnProperty.call(message,"attributeValue"))writer.uint32(66).string(message.attributeValue);if(message.attributeRemoved!=null&&Object.hasOwnProperty.call(message,"attributeRemoved"))writer.uint32(72).bool(message.attributeRemoved);if(message.propertyName!=null&&Object.hasOwnProperty.call(message,"propertyName"))writer.uint32(82).string(message.propertyName);if(message.propertyValueStr!=null&&Object.hasOwnProperty.call(message,"propertyValueStr"))writer.uint32(90).string(message.propertyValueStr);if(message.propertyValueNum!=null&&Object.hasOwnProperty.call(message,"propertyValueNum"))writer.uint32(97).double(message.propertyValueNum);if(message.propertyValueBool!=null&&Object.hasOwnProperty.call(message,"propertyValueBool"))writer.uint32(104).bool(message.propertyValueBool);if(message.propertyValueType!=null&&Object.hasOwnProperty.call(message,"propertyValueType"))writer.uint32(112).int32(message.propertyValueType);if(message.characterData!=null&&Object.hasOwnProperty.call(message,"characterData"))writer.uint32(122).string(message.characterData);if(message.maskLength!=null&&Object.hasOwnProperty.call(message,"maskLength"))writer.uint32(128).int64(message.maskLength);if(message.width!=null&&Object.hasOwnProperty.call(message,"width"))writer.uint32(136).int64(message.width);if(message.height!=null&&Object.hasOwnProperty.call(message,"height"))writer.uint32(144).int64(message.height);if(message.characterDataHash!=null&&Object.hasOwnProperty.call(message,"characterDataHash"))writer.uint32(154).string(message.characterDataHash);if(message.canvas!=null&&Object.hasOwnProperty.call(message,"canvas"))$root.CanvasDetail.encode(message.canvas,writer.uint32(162).fork()).ldelim();if(message.propertyName_!=null&&Object.hasOwnProperty.call(message,"propertyName_"))writer.uint32(168).int32(message.propertyName_);if(message.propertyValueTokens_!=null&&message.propertyValueTokens_.length)for(var _i50=0;_i50<message.propertyValueTokens_.length;++_i50)writer.uint32(176).int32(message.propertyValueTokens_[_i50]);if(message.videoEventType!=null&&Object.hasOwnProperty.call(message,"videoEventType"))writer.uint32(184).int32(message.videoEventType);if(message.position!=null&&Object.hasOwnProperty.call(message,"position"))writer.uint32(192).int32(message.position);return writer;};
MutationRecord.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
MutationRecord.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.MutationRecord();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.type=reader.int32();break;}case 2:{message.target=reader.int32();break;}case 3:{if(!(message.addedNodes&&message.addedNodes.length))message.addedNodes=[];message.addedNodes.push($root.AddedNodesSlice.decode(reader,reader.uint32()));break;}case 4:{if(!(message.removedNodes&&message.removedNodes.length))message.removedNodes=[];if((tag&7)===2){var end2=reader.uint32()+reader.pos;while(reader.pos<end2)message.removedNodes.push(reader.int32());}else message.removedNodes.push(reader.int32());break;}case 5:{message.previousSibling=reader.int32();break;}case 6:{message.nextSibling=reader.int32();break;}case 7:{message.attributeName=reader.string();break;}case 8:{message.attributeValue=reader.string();break;}case 9:{message.attributeRemoved=reader.bool();break;}case 10:{message.propertyName=reader.string();break;}case 11:{message.propertyValueStr=reader.string();break;}case 12:{message.propertyValueNum=reader.double();break;}case 13:{message.propertyValueBool=reader.bool();break;}case 14:{message.propertyValueType=reader.int32();break;}case 21:{message.propertyName_=reader.int32();break;}case 22:{if(!(message.propertyValueTokens_&&message.propertyValueTokens_.length))message.propertyValueTokens_=[];if((tag&7)===2){var _end5=reader.uint32()+reader.pos;while(reader.pos<_end5)message.propertyValueTokens_.push(reader.int32());}else message.propertyValueTokens_.push(reader.int32());break;}case 15:{message.characterData=reader.string();break;}case 19:{message.characterDataHash=reader.string();break;}case 16:{message.maskLength=reader.int64();break;}case 17:{message.width=reader.int64();break;}case 18:{message.height=reader.int64();break;}case 20:{message.canvas=$root.CanvasDetail.decode(reader,reader.uint32());break;}case 23:{message.videoEventType=reader.int32();break;}case 24:{message.position=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
MutationRecord.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
MutationRecord.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.target!=null&&message.hasOwnProperty("target"))if(!$util.isInteger(message.target))return "target: integer expected";if(message.addedNodes!=null&&message.hasOwnProperty("addedNodes")){if(!Array.isArray(message.addedNodes))return "addedNodes: array expected";for(var i=0;i<message.addedNodes.length;++i){var error=$root.AddedNodesSlice.verify(message.addedNodes[i]);if(error)return "addedNodes."+error;}}if(message.removedNodes!=null&&message.hasOwnProperty("removedNodes")){if(!Array.isArray(message.removedNodes))return "removedNodes: array expected";for(var _i51=0;_i51<message.removedNodes.length;++_i51)if(!$util.isInteger(message.removedNodes[_i51]))return "removedNodes: integer[] expected";}if(message.previousSibling!=null&&message.hasOwnProperty("previousSibling"))if(!$util.isInteger(message.previousSibling))return "previousSibling: integer expected";if(message.nextSibling!=null&&message.hasOwnProperty("nextSibling"))if(!$util.isInteger(message.nextSibling))return "nextSibling: integer expected";if(message.attributeName!=null&&message.hasOwnProperty("attributeName"))if(!$util.isString(message.attributeName))return "attributeName: string expected";if(message.attributeValue!=null&&message.hasOwnProperty("attributeValue"))if(!$util.isString(message.attributeValue))return "attributeValue: string expected";if(message.attributeRemoved!=null&&message.hasOwnProperty("attributeRemoved"))if(typeof message.attributeRemoved!=="boolean")return "attributeRemoved: boolean expected";if(message.propertyName!=null&&message.hasOwnProperty("propertyName"))if(!$util.isString(message.propertyName))return "propertyName: string expected";if(message.propertyValueStr!=null&&message.hasOwnProperty("propertyValueStr"))if(!$util.isString(message.propertyValueStr))return "propertyValueStr: string expected";if(message.propertyValueNum!=null&&message.hasOwnProperty("propertyValueNum"))if(typeof message.propertyValueNum!=="number")return "propertyValueNum: number expected";if(message.propertyValueBool!=null&&message.hasOwnProperty("propertyValueBool"))if(typeof message.propertyValueBool!=="boolean")return "propertyValueBool: boolean expected";if(message.propertyValueType!=null&&message.hasOwnProperty("propertyValueType"))switch(message.propertyValueType){default:return "propertyValueType: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:break;}if(message.propertyName_!=null&&message.hasOwnProperty("propertyName_"))if(!$util.isInteger(message.propertyName_))return "propertyName_: integer expected";if(message.propertyValueTokens_!=null&&message.hasOwnProperty("propertyValueTokens_")){if(!Array.isArray(message.propertyValueTokens_))return "propertyValueTokens_: array expected";for(var _i52=0;_i52<message.propertyValueTokens_.length;++_i52)if(!$util.isInteger(message.propertyValueTokens_[_i52]))return "propertyValueTokens_: integer[] expected";}if(message.characterData!=null&&message.hasOwnProperty("characterData"))if(!$util.isString(message.characterData))return "characterData: string expected";if(message.characterDataHash!=null&&message.hasOwnProperty("characterDataHash"))if(!$util.isString(message.characterDataHash))return "characterDataHash: string expected";if(message.maskLength!=null&&message.hasOwnProperty("maskLength"))if(!$util.isInteger(message.maskLength)&&!(message.maskLength&&$util.isInteger(message.maskLength.low)&&$util.isInteger(message.maskLength.high)))return "maskLength: integer|Long expected";if(message.width!=null&&message.hasOwnProperty("width"))if(!$util.isInteger(message.width)&&!(message.width&&$util.isInteger(message.width.low)&&$util.isInteger(message.width.high)))return "width: integer|Long expected";if(message.height!=null&&message.hasOwnProperty("height"))if(!$util.isInteger(message.height)&&!(message.height&&$util.isInteger(message.height.low)&&$util.isInteger(message.height.high)))return "height: integer|Long expected";if(message.canvas!=null&&message.hasOwnProperty("canvas")){var _error23=$root.CanvasDetail.verify(message.canvas);if(_error23)return "canvas."+_error23;}if(message.videoEventType!=null&&message.hasOwnProperty("videoEventType"))if(!$util.isInteger(message.videoEventType))return "videoEventType: integer expected";if(message.position!=null&&message.hasOwnProperty("position"))if(!$util.isInteger(message.position))return "position: integer expected";return null;};
MutationRecord.fromObject=function fromObject(object){if(object instanceof $root.MutationRecord)return object;var message=new $root.MutationRecord();if(object.type!=null)message.type=object.type|0;if(object.target!=null)message.target=object.target|0;if(object.addedNodes){if(!Array.isArray(object.addedNodes))throw TypeError(".MutationRecord.addedNodes: array expected");message.addedNodes=[];for(var i=0;i<object.addedNodes.length;++i){if(typeof object.addedNodes[i]!=="object")throw TypeError(".MutationRecord.addedNodes: object expected");message.addedNodes[i]=$root.AddedNodesSlice.fromObject(object.addedNodes[i]);}}if(object.removedNodes){if(!Array.isArray(object.removedNodes))throw TypeError(".MutationRecord.removedNodes: array expected");message.removedNodes=[];for(var _i53=0;_i53<object.removedNodes.length;++_i53)message.removedNodes[_i53]=object.removedNodes[_i53]|0;}if(object.previousSibling!=null)message.previousSibling=object.previousSibling|0;if(object.nextSibling!=null)message.nextSibling=object.nextSibling|0;if(object.attributeName!=null)message.attributeName=String(object.attributeName);if(object.attributeValue!=null)message.attributeValue=String(object.attributeValue);if(object.attributeRemoved!=null)message.attributeRemoved=Boolean(object.attributeRemoved);if(object.propertyName!=null)message.propertyName=String(object.propertyName);if(object.propertyValueStr!=null)message.propertyValueStr=String(object.propertyValueStr);if(object.propertyValueNum!=null)message.propertyValueNum=Number(object.propertyValueNum);if(object.propertyValueBool!=null)message.propertyValueBool=Boolean(object.propertyValueBool);switch(object.propertyValueType){default:if(typeof object.propertyValueType==="number"){message.propertyValueType=object.propertyValueType;break;}break;case"Unset":case 0:message.propertyValueType=0;break;case"String":case 1:message.propertyValueType=1;break;case"Number":case 2:message.propertyValueType=2;break;case"Boolean":case 3:message.propertyValueType=3;break;case"JSON":case 4:message.propertyValueType=4;break;case"Null":case 5:message.propertyValueType=5;break;case"Undefined":case 6:message.propertyValueType=6;break;}if(object.propertyName_!=null)message.propertyName_=object.propertyName_|0;if(object.propertyValueTokens_){if(!Array.isArray(object.propertyValueTokens_))throw TypeError(".MutationRecord.propertyValueTokens_: array expected");message.propertyValueTokens_=[];for(var _i54=0;_i54<object.propertyValueTokens_.length;++_i54)message.propertyValueTokens_[_i54]=object.propertyValueTokens_[_i54]|0;}if(object.characterData!=null)message.characterData=String(object.characterData);if(object.characterDataHash!=null)message.characterDataHash=String(object.characterDataHash);if(object.maskLength!=null)if($util.Long)(message.maskLength=$util.Long.fromValue(object.maskLength)).unsigned=false;else if(typeof object.maskLength==="string")message.maskLength=parseInt(object.maskLength,10);else if(typeof object.maskLength==="number")message.maskLength=object.maskLength;else if(typeof object.maskLength==="object")message.maskLength=new $util.LongBits(object.maskLength.low>>>0,object.maskLength.high>>>0).toNumber();if(object.width!=null)if($util.Long)(message.width=$util.Long.fromValue(object.width)).unsigned=false;else if(typeof object.width==="string")message.width=parseInt(object.width,10);else if(typeof object.width==="number")message.width=object.width;else if(typeof object.width==="object")message.width=new $util.LongBits(object.width.low>>>0,object.width.high>>>0).toNumber();if(object.height!=null)if($util.Long)(message.height=$util.Long.fromValue(object.height)).unsigned=false;else if(typeof object.height==="string")message.height=parseInt(object.height,10);else if(typeof object.height==="number")message.height=object.height;else if(typeof object.height==="object")message.height=new $util.LongBits(object.height.low>>>0,object.height.high>>>0).toNumber();if(object.canvas!=null){if(typeof object.canvas!=="object")throw TypeError(".MutationRecord.canvas: object expected");message.canvas=$root.CanvasDetail.fromObject(object.canvas);}if(object.videoEventType!=null)message.videoEventType=object.videoEventType|0;if(object.position!=null)message.position=object.position|0;return message;};
MutationRecord.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.addedNodes=[];object.removedNodes=[];object.propertyValueTokens_=[];}if(options.defaults){object.type=0;object.target=0;object.previousSibling=0;object.nextSibling=0;object.attributeName="";object.attributeValue="";object.attributeRemoved=false;object.propertyName="";object.propertyValueStr="";object.propertyValueNum=0;object.propertyValueBool=false;object.propertyValueType=options.enums===String?"Unset":0;object.characterData="";if($util.Long){var long=new $util.Long(0,0,false);object.maskLength=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.maskLength=options.longs===String?"0":0;if($util.Long){var _long11=new $util.Long(0,0,false);object.width=options.longs===String?_long11.toString():options.longs===Number?_long11.toNumber():_long11;}else object.width=options.longs===String?"0":0;if($util.Long){var _long12=new $util.Long(0,0,false);object.height=options.longs===String?_long12.toString():options.longs===Number?_long12.toNumber():_long12;}else object.height=options.longs===String?"0":0;object.characterDataHash="";object.canvas=null;object.propertyName_=0;object.videoEventType=0;object.position=0;}if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.target!=null&&message.hasOwnProperty("target"))object.target=message.target;if(message.addedNodes&&message.addedNodes.length){object.addedNodes=[];for(var j=0;j<message.addedNodes.length;++j)object.addedNodes[j]=$root.AddedNodesSlice.toObject(message.addedNodes[j],options);}if(message.removedNodes&&message.removedNodes.length){object.removedNodes=[];for(var _j17=0;_j17<message.removedNodes.length;++_j17)object.removedNodes[_j17]=message.removedNodes[_j17];}if(message.previousSibling!=null&&message.hasOwnProperty("previousSibling"))object.previousSibling=message.previousSibling;if(message.nextSibling!=null&&message.hasOwnProperty("nextSibling"))object.nextSibling=message.nextSibling;if(message.attributeName!=null&&message.hasOwnProperty("attributeName"))object.attributeName=message.attributeName;if(message.attributeValue!=null&&message.hasOwnProperty("attributeValue"))object.attributeValue=message.attributeValue;if(message.attributeRemoved!=null&&message.hasOwnProperty("attributeRemoved"))object.attributeRemoved=message.attributeRemoved;if(message.propertyName!=null&&message.hasOwnProperty("propertyName"))object.propertyName=message.propertyName;if(message.propertyValueStr!=null&&message.hasOwnProperty("propertyValueStr"))object.propertyValueStr=message.propertyValueStr;if(message.propertyValueNum!=null&&message.hasOwnProperty("propertyValueNum"))object.propertyValueNum=options.json&&!isFinite(message.propertyValueNum)?String(message.propertyValueNum):message.propertyValueNum;if(message.propertyValueBool!=null&&message.hasOwnProperty("propertyValueBool"))object.propertyValueBool=message.propertyValueBool;if(message.propertyValueType!=null&&message.hasOwnProperty("propertyValueType"))object.propertyValueType=options.enums===String?$root.ExparserCompPropType[message.propertyValueType]===undefined?message.propertyValueType:$root.ExparserCompPropType[message.propertyValueType]:message.propertyValueType;if(message.characterData!=null&&message.hasOwnProperty("characterData"))object.characterData=message.characterData;if(message.maskLength!=null&&message.hasOwnProperty("maskLength"))if(typeof message.maskLength==="number")object.maskLength=options.longs===String?String(message.maskLength):message.maskLength;else object.maskLength=options.longs===String?$util.Long.prototype.toString.call(message.maskLength):options.longs===Number?new $util.LongBits(message.maskLength.low>>>0,message.maskLength.high>>>0).toNumber():message.maskLength;if(message.width!=null&&message.hasOwnProperty("width"))if(typeof message.width==="number")object.width=options.longs===String?String(message.width):message.width;else object.width=options.longs===String?$util.Long.prototype.toString.call(message.width):options.longs===Number?new $util.LongBits(message.width.low>>>0,message.width.high>>>0).toNumber():message.width;if(message.height!=null&&message.hasOwnProperty("height"))if(typeof message.height==="number")object.height=options.longs===String?String(message.height):message.height;else object.height=options.longs===String?$util.Long.prototype.toString.call(message.height):options.longs===Number?new $util.LongBits(message.height.low>>>0,message.height.high>>>0).toNumber():message.height;if(message.characterDataHash!=null&&message.hasOwnProperty("characterDataHash"))object.characterDataHash=message.characterDataHash;if(message.canvas!=null&&message.hasOwnProperty("canvas"))object.canvas=$root.CanvasDetail.toObject(message.canvas,options);if(message.propertyName_!=null&&message.hasOwnProperty("propertyName_"))object.propertyName_=message.propertyName_;if(message.propertyValueTokens_&&message.propertyValueTokens_.length){object.propertyValueTokens_=[];for(var _j18=0;_j18<message.propertyValueTokens_.length;++_j18)object.propertyValueTokens_[_j18]=message.propertyValueTokens_[_j18];}if(message.videoEventType!=null&&message.hasOwnProperty("videoEventType"))object.videoEventType=message.videoEventType;if(message.position!=null&&message.hasOwnProperty("position"))object.position=message.position;return object;};
MutationRecord.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
MutationRecord.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/MutationRecord";};return MutationRecord;})();$root.AddedNodesSlice=(()=>{
function AddedNodesSlice(properties){this.nodes=[];this.sliceInfos=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
AddedNodesSlice.prototype.ts=0;
AddedNodesSlice.prototype.nodes=$util.emptyArray;
AddedNodesSlice.prototype.sliceInfos=$util.emptyArray;
AddedNodesSlice.create=function create(properties){return new AddedNodesSlice(properties);};
AddedNodesSlice.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.ts!=null&&Object.hasOwnProperty.call(message,"ts"))writer.uint32(8).int32(message.ts);if(message.nodes!=null&&message.nodes.length)for(var i=0;i<message.nodes.length;++i)$root.NodeInfo.encode(message.nodes[i],writer.uint32(18).fork()).ldelim();if(message.sliceInfos!=null&&message.sliceInfos.length)for(var _i55=0;_i55<message.sliceInfos.length;++_i55)$root.AddedNodesSlice.SliceInfo.encode(message.sliceInfos[_i55],writer.uint32(26).fork()).ldelim();return writer;};
AddedNodesSlice.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
AddedNodesSlice.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.AddedNodesSlice();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.ts=reader.int32();break;}case 2:{if(!(message.nodes&&message.nodes.length))message.nodes=[];message.nodes.push($root.NodeInfo.decode(reader,reader.uint32()));break;}case 3:{if(!(message.sliceInfos&&message.sliceInfos.length))message.sliceInfos=[];message.sliceInfos.push($root.AddedNodesSlice.SliceInfo.decode(reader,reader.uint32()));break;}default:reader.skipType(tag&7);break;}}return message;};
AddedNodesSlice.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
AddedNodesSlice.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.ts!=null&&message.hasOwnProperty("ts"))if(!$util.isInteger(message.ts))return "ts: integer expected";if(message.nodes!=null&&message.hasOwnProperty("nodes")){if(!Array.isArray(message.nodes))return "nodes: array expected";for(var i=0;i<message.nodes.length;++i){var error=$root.NodeInfo.verify(message.nodes[i]);if(error)return "nodes."+error;}}if(message.sliceInfos!=null&&message.hasOwnProperty("sliceInfos")){if(!Array.isArray(message.sliceInfos))return "sliceInfos: array expected";for(var _i56=0;_i56<message.sliceInfos.length;++_i56){var _error24=$root.AddedNodesSlice.SliceInfo.verify(message.sliceInfos[_i56]);if(_error24)return "sliceInfos."+_error24;}}return null;};
AddedNodesSlice.fromObject=function fromObject(object){if(object instanceof $root.AddedNodesSlice)return object;var message=new $root.AddedNodesSlice();if(object.ts!=null)message.ts=object.ts|0;if(object.nodes){if(!Array.isArray(object.nodes))throw TypeError(".AddedNodesSlice.nodes: array expected");message.nodes=[];for(var i=0;i<object.nodes.length;++i){if(typeof object.nodes[i]!=="object")throw TypeError(".AddedNodesSlice.nodes: object expected");message.nodes[i]=$root.NodeInfo.fromObject(object.nodes[i]);}}if(object.sliceInfos){if(!Array.isArray(object.sliceInfos))throw TypeError(".AddedNodesSlice.sliceInfos: array expected");message.sliceInfos=[];for(var _i57=0;_i57<object.sliceInfos.length;++_i57){if(typeof object.sliceInfos[_i57]!=="object")throw TypeError(".AddedNodesSlice.sliceInfos: object expected");message.sliceInfos[_i57]=$root.AddedNodesSlice.SliceInfo.fromObject(object.sliceInfos[_i57]);}}return message;};
AddedNodesSlice.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.nodes=[];object.sliceInfos=[];}if(options.defaults)object.ts=0;if(message.ts!=null&&message.hasOwnProperty("ts"))object.ts=message.ts;if(message.nodes&&message.nodes.length){object.nodes=[];for(var j=0;j<message.nodes.length;++j)object.nodes[j]=$root.NodeInfo.toObject(message.nodes[j],options);}if(message.sliceInfos&&message.sliceInfos.length){object.sliceInfos=[];for(var _j19=0;_j19<message.sliceInfos.length;++_j19)object.sliceInfos[_j19]=$root.AddedNodesSlice.SliceInfo.toObject(message.sliceInfos[_j19],options);}return object;};
AddedNodesSlice.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
AddedNodesSlice.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/AddedNodesSlice";};AddedNodesSlice.SliceInfo=function(){
function SliceInfo(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
SliceInfo.prototype.ts=0;
SliceInfo.prototype.len=0;
SliceInfo.create=function create(properties){return new SliceInfo(properties);};
SliceInfo.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.ts!=null&&Object.hasOwnProperty.call(message,"ts"))writer.uint32(8).int32(message.ts);if(message.len!=null&&Object.hasOwnProperty.call(message,"len"))writer.uint32(16).int32(message.len);return writer;};
SliceInfo.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
SliceInfo.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.AddedNodesSlice.SliceInfo();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.ts=reader.int32();break;}case 2:{message.len=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
SliceInfo.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
SliceInfo.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.ts!=null&&message.hasOwnProperty("ts"))if(!$util.isInteger(message.ts))return "ts: integer expected";if(message.len!=null&&message.hasOwnProperty("len"))if(!$util.isInteger(message.len))return "len: integer expected";return null;};
SliceInfo.fromObject=function fromObject(object){if(object instanceof $root.AddedNodesSlice.SliceInfo)return object;var message=new $root.AddedNodesSlice.SliceInfo();if(object.ts!=null)message.ts=object.ts|0;if(object.len!=null)message.len=object.len|0;return message;};
SliceInfo.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.ts=0;object.len=0;}if(message.ts!=null&&message.hasOwnProperty("ts"))object.ts=message.ts;if(message.len!=null&&message.hasOwnProperty("len"))object.len=message.len;return object;};
SliceInfo.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
SliceInfo.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/AddedNodesSlice.SliceInfo";};return SliceInfo;}();return AddedNodesSlice;})();$root.NodeInfo=(()=>{
function NodeInfo(properties){this.attributes=[];this.properties=[];this.classes_=[];this.styles_=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
NodeInfo.prototype.id=0;
NodeInfo.prototype.type=0;
NodeInfo.prototype.updateTs=$util.Long?$util.Long.fromBits(0,0,false):0;
NodeInfo.prototype.tag="";
NodeInfo.prototype.attributes=$util.emptyArray;
NodeInfo.prototype.value="";
NodeInfo.prototype.valueHash="";
NodeInfo.prototype.parentId=0;
NodeInfo.prototype.prevId=0;
NodeInfo.prototype.is="";
NodeInfo.prototype.builtIn=false;
NodeInfo.prototype.slot="";
NodeInfo.prototype.properties=$util.emptyArray;
NodeInfo.prototype.compOptions=null;
NodeInfo.prototype.width=$util.Long?$util.Long.fromBits(0,0,false):0;
NodeInfo.prototype.height=$util.Long?$util.Long.fromBits(0,0,false):0;
NodeInfo.prototype.masked=false;
NodeInfo.prototype.unmasked=false;
NodeInfo.prototype.maskLength=0;
NodeInfo.prototype.excluded=false;
NodeInfo.prototype.is_=0;
NodeInfo.prototype.tag_=0;
NodeInfo.prototype.id_=0;
NodeInfo.prototype.parentId_=0;
NodeInfo.prototype.noParent_=false;
NodeInfo.prototype.prevId_=0;
NodeInfo.prototype.classes_=$util.emptyArray;
NodeInfo.prototype.styles_=$util.emptyArray;
NodeInfo.prototype.value_=0;
NodeInfo.prototype.tapHandlerName="";
NodeInfo.prototype.tapHandlerName_=0;
NodeInfo.create=function create(properties){return new NodeInfo(properties);};
NodeInfo.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.id!=null&&Object.hasOwnProperty.call(message,"id"))writer.uint32(8).int32(message.id);if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(16).int32(message.type);if(message.updateTs!=null&&Object.hasOwnProperty.call(message,"updateTs"))writer.uint32(24).int64(message.updateTs);if(message.tag!=null&&Object.hasOwnProperty.call(message,"tag"))writer.uint32(34).string(message.tag);if(message.attributes!=null&&message.attributes.length)for(var i=0;i<message.attributes.length;++i)$root.NodeAttribute.encode(message.attributes[i],writer.uint32(42).fork()).ldelim();if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(50).string(message.value);if(message.parentId!=null&&Object.hasOwnProperty.call(message,"parentId"))writer.uint32(56).int32(message.parentId);if(message.prevId!=null&&Object.hasOwnProperty.call(message,"prevId"))writer.uint32(64).int32(message.prevId);if(message.is!=null&&Object.hasOwnProperty.call(message,"is"))writer.uint32(82).string(message.is);if(message.builtIn!=null&&Object.hasOwnProperty.call(message,"builtIn"))writer.uint32(88).bool(message.builtIn);if(message.slot!=null&&Object.hasOwnProperty.call(message,"slot"))writer.uint32(98).string(message.slot);if(message.properties!=null&&message.properties.length)for(var _i58=0;_i58<message.properties.length;++_i58)$root.ExparserCompProperty.encode(message.properties[_i58],writer.uint32(106).fork()).ldelim();if(message.compOptions!=null&&Object.hasOwnProperty.call(message,"compOptions"))$root.NodeInfo.ExparserCompOptions.encode(message.compOptions,writer.uint32(114).fork()).ldelim();if(message.width!=null&&Object.hasOwnProperty.call(message,"width"))writer.uint32(120).int64(message.width);if(message.height!=null&&Object.hasOwnProperty.call(message,"height"))writer.uint32(128).int64(message.height);if(message.masked!=null&&Object.hasOwnProperty.call(message,"masked"))writer.uint32(136).bool(message.masked);if(message.unmasked!=null&&Object.hasOwnProperty.call(message,"unmasked"))writer.uint32(144).bool(message.unmasked);if(message.maskLength!=null&&Object.hasOwnProperty.call(message,"maskLength"))writer.uint32(152).int32(message.maskLength);if(message.excluded!=null&&Object.hasOwnProperty.call(message,"excluded"))writer.uint32(160).bool(message.excluded);if(message.valueHash!=null&&Object.hasOwnProperty.call(message,"valueHash"))writer.uint32(170).string(message.valueHash);if(message.is_!=null&&Object.hasOwnProperty.call(message,"is_"))writer.uint32(176).int32(message.is_);if(message.tag_!=null&&Object.hasOwnProperty.call(message,"tag_"))writer.uint32(184).int32(message.tag_);if(message.id_!=null&&Object.hasOwnProperty.call(message,"id_"))writer.uint32(192).int32(message.id_);if(message.parentId_!=null&&Object.hasOwnProperty.call(message,"parentId_"))writer.uint32(200).int32(message.parentId_);if(message.noParent_!=null&&Object.hasOwnProperty.call(message,"noParent_"))writer.uint32(208).bool(message.noParent_);if(message.prevId_!=null&&Object.hasOwnProperty.call(message,"prevId_"))writer.uint32(216).int32(message.prevId_);if(message.classes_!=null&&message.classes_.length){writer.uint32(226).fork();for(var _i59=0;_i59<message.classes_.length;++_i59)writer.int32(message.classes_[_i59]);writer.ldelim();}if(message.styles_!=null&&message.styles_.length){writer.uint32(234).fork();for(var _i60=0;_i60<message.styles_.length;++_i60)writer.int32(message.styles_[_i60]);writer.ldelim();}if(message.value_!=null&&Object.hasOwnProperty.call(message,"value_"))writer.uint32(240).int32(message.value_);if(message.tapHandlerName!=null&&Object.hasOwnProperty.call(message,"tapHandlerName"))writer.uint32(250).string(message.tapHandlerName);if(message.tapHandlerName_!=null&&Object.hasOwnProperty.call(message,"tapHandlerName_"))writer.uint32(256).int32(message.tapHandlerName_);return writer;};
NodeInfo.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
NodeInfo.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.NodeInfo();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.id=reader.int32();break;}case 2:{message.type=reader.int32();break;}case 3:{message.updateTs=reader.int64();break;}case 4:{message.tag=reader.string();break;}case 5:{if(!(message.attributes&&message.attributes.length))message.attributes=[];message.attributes.push($root.NodeAttribute.decode(reader,reader.uint32()));break;}case 6:{message.value=reader.string();break;}case 21:{message.valueHash=reader.string();break;}case 7:{message.parentId=reader.int32();break;}case 8:{message.prevId=reader.int32();break;}case 10:{message.is=reader.string();break;}case 11:{message.builtIn=reader.bool();break;}case 12:{message.slot=reader.string();break;}case 13:{if(!(message.properties&&message.properties.length))message.properties=[];message.properties.push($root.ExparserCompProperty.decode(reader,reader.uint32()));break;}case 14:{message.compOptions=$root.NodeInfo.ExparserCompOptions.decode(reader,reader.uint32());break;}case 15:{message.width=reader.int64();break;}case 16:{message.height=reader.int64();break;}case 17:{message.masked=reader.bool();break;}case 18:{message.unmasked=reader.bool();break;}case 19:{message.maskLength=reader.int32();break;}case 20:{message.excluded=reader.bool();break;}case 22:{message.is_=reader.int32();break;}case 23:{message.tag_=reader.int32();break;}case 24:{message.id_=reader.int32();break;}case 25:{message.parentId_=reader.int32();break;}case 26:{message.noParent_=reader.bool();break;}case 27:{message.prevId_=reader.int32();break;}case 28:{if(!(message.classes_&&message.classes_.length))message.classes_=[];if((tag&7)===2){var end2=reader.uint32()+reader.pos;while(reader.pos<end2)message.classes_.push(reader.int32());}else message.classes_.push(reader.int32());break;}case 29:{if(!(message.styles_&&message.styles_.length))message.styles_=[];if((tag&7)===2){var _end6=reader.uint32()+reader.pos;while(reader.pos<_end6)message.styles_.push(reader.int32());}else message.styles_.push(reader.int32());break;}case 30:{message.value_=reader.int32();break;}case 31:{message.tapHandlerName=reader.string();break;}case 32:{message.tapHandlerName_=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
NodeInfo.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
NodeInfo.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.id!=null&&message.hasOwnProperty("id"))if(!$util.isInteger(message.id))return "id: integer expected";if(message.type!=null&&message.hasOwnProperty("type"))if(!$util.isInteger(message.type))return "type: integer expected";if(message.updateTs!=null&&message.hasOwnProperty("updateTs"))if(!$util.isInteger(message.updateTs)&&!(message.updateTs&&$util.isInteger(message.updateTs.low)&&$util.isInteger(message.updateTs.high)))return "updateTs: integer|Long expected";if(message.tag!=null&&message.hasOwnProperty("tag"))if(!$util.isString(message.tag))return "tag: string expected";if(message.attributes!=null&&message.hasOwnProperty("attributes")){if(!Array.isArray(message.attributes))return "attributes: array expected";for(var i=0;i<message.attributes.length;++i){var error=$root.NodeAttribute.verify(message.attributes[i]);if(error)return "attributes."+error;}}if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.valueHash!=null&&message.hasOwnProperty("valueHash"))if(!$util.isString(message.valueHash))return "valueHash: string expected";if(message.parentId!=null&&message.hasOwnProperty("parentId"))if(!$util.isInteger(message.parentId))return "parentId: integer expected";if(message.prevId!=null&&message.hasOwnProperty("prevId"))if(!$util.isInteger(message.prevId))return "prevId: integer expected";if(message.is!=null&&message.hasOwnProperty("is"))if(!$util.isString(message.is))return "is: string expected";if(message.builtIn!=null&&message.hasOwnProperty("builtIn"))if(typeof message.builtIn!=="boolean")return "builtIn: boolean expected";if(message.slot!=null&&message.hasOwnProperty("slot"))if(!$util.isString(message.slot))return "slot: string expected";if(message.properties!=null&&message.hasOwnProperty("properties")){if(!Array.isArray(message.properties))return "properties: array expected";for(var _i61=0;_i61<message.properties.length;++_i61){var _error25=$root.ExparserCompProperty.verify(message.properties[_i61]);if(_error25)return "properties."+_error25;}}if(message.compOptions!=null&&message.hasOwnProperty("compOptions")){var _error26=$root.NodeInfo.ExparserCompOptions.verify(message.compOptions);if(_error26)return "compOptions."+_error26;}if(message.width!=null&&message.hasOwnProperty("width"))if(!$util.isInteger(message.width)&&!(message.width&&$util.isInteger(message.width.low)&&$util.isInteger(message.width.high)))return "width: integer|Long expected";if(message.height!=null&&message.hasOwnProperty("height"))if(!$util.isInteger(message.height)&&!(message.height&&$util.isInteger(message.height.low)&&$util.isInteger(message.height.high)))return "height: integer|Long expected";if(message.masked!=null&&message.hasOwnProperty("masked"))if(typeof message.masked!=="boolean")return "masked: boolean expected";if(message.unmasked!=null&&message.hasOwnProperty("unmasked"))if(typeof message.unmasked!=="boolean")return "unmasked: boolean expected";if(message.maskLength!=null&&message.hasOwnProperty("maskLength"))if(!$util.isInteger(message.maskLength))return "maskLength: integer expected";if(message.excluded!=null&&message.hasOwnProperty("excluded"))if(typeof message.excluded!=="boolean")return "excluded: boolean expected";if(message.is_!=null&&message.hasOwnProperty("is_"))if(!$util.isInteger(message.is_))return "is_: integer expected";if(message.tag_!=null&&message.hasOwnProperty("tag_"))if(!$util.isInteger(message.tag_))return "tag_: integer expected";if(message.id_!=null&&message.hasOwnProperty("id_"))if(!$util.isInteger(message.id_))return "id_: integer expected";if(message.parentId_!=null&&message.hasOwnProperty("parentId_"))if(!$util.isInteger(message.parentId_))return "parentId_: integer expected";if(message.noParent_!=null&&message.hasOwnProperty("noParent_"))if(typeof message.noParent_!=="boolean")return "noParent_: boolean expected";if(message.prevId_!=null&&message.hasOwnProperty("prevId_"))if(!$util.isInteger(message.prevId_))return "prevId_: integer expected";if(message.classes_!=null&&message.hasOwnProperty("classes_")){if(!Array.isArray(message.classes_))return "classes_: array expected";for(var _i62=0;_i62<message.classes_.length;++_i62)if(!$util.isInteger(message.classes_[_i62]))return "classes_: integer[] expected";}if(message.styles_!=null&&message.hasOwnProperty("styles_")){if(!Array.isArray(message.styles_))return "styles_: array expected";for(var _i63=0;_i63<message.styles_.length;++_i63)if(!$util.isInteger(message.styles_[_i63]))return "styles_: integer[] expected";}if(message.value_!=null&&message.hasOwnProperty("value_"))if(!$util.isInteger(message.value_))return "value_: integer expected";if(message.tapHandlerName!=null&&message.hasOwnProperty("tapHandlerName"))if(!$util.isString(message.tapHandlerName))return "tapHandlerName: string expected";if(message.tapHandlerName_!=null&&message.hasOwnProperty("tapHandlerName_"))if(!$util.isInteger(message.tapHandlerName_))return "tapHandlerName_: integer expected";return null;};
NodeInfo.fromObject=function fromObject(object){if(object instanceof $root.NodeInfo)return object;var message=new $root.NodeInfo();if(object.id!=null)message.id=object.id|0;if(object.type!=null)message.type=object.type|0;if(object.updateTs!=null)if($util.Long)(message.updateTs=$util.Long.fromValue(object.updateTs)).unsigned=false;else if(typeof object.updateTs==="string")message.updateTs=parseInt(object.updateTs,10);else if(typeof object.updateTs==="number")message.updateTs=object.updateTs;else if(typeof object.updateTs==="object")message.updateTs=new $util.LongBits(object.updateTs.low>>>0,object.updateTs.high>>>0).toNumber();if(object.tag!=null)message.tag=String(object.tag);if(object.attributes){if(!Array.isArray(object.attributes))throw TypeError(".NodeInfo.attributes: array expected");message.attributes=[];for(var i=0;i<object.attributes.length;++i){if(typeof object.attributes[i]!=="object")throw TypeError(".NodeInfo.attributes: object expected");message.attributes[i]=$root.NodeAttribute.fromObject(object.attributes[i]);}}if(object.value!=null)message.value=String(object.value);if(object.valueHash!=null)message.valueHash=String(object.valueHash);if(object.parentId!=null)message.parentId=object.parentId|0;if(object.prevId!=null)message.prevId=object.prevId|0;if(object.is!=null)message.is=String(object.is);if(object.builtIn!=null)message.builtIn=Boolean(object.builtIn);if(object.slot!=null)message.slot=String(object.slot);if(object.properties){if(!Array.isArray(object.properties))throw TypeError(".NodeInfo.properties: array expected");message.properties=[];for(var _i64=0;_i64<object.properties.length;++_i64){if(typeof object.properties[_i64]!=="object")throw TypeError(".NodeInfo.properties: object expected");message.properties[_i64]=$root.ExparserCompProperty.fromObject(object.properties[_i64]);}}if(object.compOptions!=null){if(typeof object.compOptions!=="object")throw TypeError(".NodeInfo.compOptions: object expected");message.compOptions=$root.NodeInfo.ExparserCompOptions.fromObject(object.compOptions);}if(object.width!=null)if($util.Long)(message.width=$util.Long.fromValue(object.width)).unsigned=false;else if(typeof object.width==="string")message.width=parseInt(object.width,10);else if(typeof object.width==="number")message.width=object.width;else if(typeof object.width==="object")message.width=new $util.LongBits(object.width.low>>>0,object.width.high>>>0).toNumber();if(object.height!=null)if($util.Long)(message.height=$util.Long.fromValue(object.height)).unsigned=false;else if(typeof object.height==="string")message.height=parseInt(object.height,10);else if(typeof object.height==="number")message.height=object.height;else if(typeof object.height==="object")message.height=new $util.LongBits(object.height.low>>>0,object.height.high>>>0).toNumber();if(object.masked!=null)message.masked=Boolean(object.masked);if(object.unmasked!=null)message.unmasked=Boolean(object.unmasked);if(object.maskLength!=null)message.maskLength=object.maskLength|0;if(object.excluded!=null)message.excluded=Boolean(object.excluded);if(object.is_!=null)message.is_=object.is_|0;if(object.tag_!=null)message.tag_=object.tag_|0;if(object.id_!=null)message.id_=object.id_|0;if(object.parentId_!=null)message.parentId_=object.parentId_|0;if(object.noParent_!=null)message.noParent_=Boolean(object.noParent_);if(object.prevId_!=null)message.prevId_=object.prevId_|0;if(object.classes_){if(!Array.isArray(object.classes_))throw TypeError(".NodeInfo.classes_: array expected");message.classes_=[];for(var _i65=0;_i65<object.classes_.length;++_i65)message.classes_[_i65]=object.classes_[_i65]|0;}if(object.styles_){if(!Array.isArray(object.styles_))throw TypeError(".NodeInfo.styles_: array expected");message.styles_=[];for(var _i66=0;_i66<object.styles_.length;++_i66)message.styles_[_i66]=object.styles_[_i66]|0;}if(object.value_!=null)message.value_=object.value_|0;if(object.tapHandlerName!=null)message.tapHandlerName=String(object.tapHandlerName);if(object.tapHandlerName_!=null)message.tapHandlerName_=object.tapHandlerName_|0;return message;};
NodeInfo.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults){object.attributes=[];object.properties=[];object.classes_=[];object.styles_=[];}if(options.defaults){object.id=0;object.type=0;if($util.Long){var long=new $util.Long(0,0,false);object.updateTs=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.updateTs=options.longs===String?"0":0;object.tag="";object.value="";object.parentId=0;object.prevId=0;object.is="";object.builtIn=false;object.slot="";object.compOptions=null;if($util.Long){var _long13=new $util.Long(0,0,false);object.width=options.longs===String?_long13.toString():options.longs===Number?_long13.toNumber():_long13;}else object.width=options.longs===String?"0":0;if($util.Long){var _long14=new $util.Long(0,0,false);object.height=options.longs===String?_long14.toString():options.longs===Number?_long14.toNumber():_long14;}else object.height=options.longs===String?"0":0;object.masked=false;object.unmasked=false;object.maskLength=0;object.excluded=false;object.valueHash="";object.is_=0;object.tag_=0;object.id_=0;object.parentId_=0;object.noParent_=false;object.prevId_=0;object.value_=0;object.tapHandlerName="";object.tapHandlerName_=0;}if(message.id!=null&&message.hasOwnProperty("id"))object.id=message.id;if(message.type!=null&&message.hasOwnProperty("type"))object.type=message.type;if(message.updateTs!=null&&message.hasOwnProperty("updateTs"))if(typeof message.updateTs==="number")object.updateTs=options.longs===String?String(message.updateTs):message.updateTs;else object.updateTs=options.longs===String?$util.Long.prototype.toString.call(message.updateTs):options.longs===Number?new $util.LongBits(message.updateTs.low>>>0,message.updateTs.high>>>0).toNumber():message.updateTs;if(message.tag!=null&&message.hasOwnProperty("tag"))object.tag=message.tag;if(message.attributes&&message.attributes.length){object.attributes=[];for(var j=0;j<message.attributes.length;++j)object.attributes[j]=$root.NodeAttribute.toObject(message.attributes[j],options);}if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.parentId!=null&&message.hasOwnProperty("parentId"))object.parentId=message.parentId;if(message.prevId!=null&&message.hasOwnProperty("prevId"))object.prevId=message.prevId;if(message.is!=null&&message.hasOwnProperty("is"))object.is=message.is;if(message.builtIn!=null&&message.hasOwnProperty("builtIn"))object.builtIn=message.builtIn;if(message.slot!=null&&message.hasOwnProperty("slot"))object.slot=message.slot;if(message.properties&&message.properties.length){object.properties=[];for(var _j20=0;_j20<message.properties.length;++_j20)object.properties[_j20]=$root.ExparserCompProperty.toObject(message.properties[_j20],options);}if(message.compOptions!=null&&message.hasOwnProperty("compOptions"))object.compOptions=$root.NodeInfo.ExparserCompOptions.toObject(message.compOptions,options);if(message.width!=null&&message.hasOwnProperty("width"))if(typeof message.width==="number")object.width=options.longs===String?String(message.width):message.width;else object.width=options.longs===String?$util.Long.prototype.toString.call(message.width):options.longs===Number?new $util.LongBits(message.width.low>>>0,message.width.high>>>0).toNumber():message.width;if(message.height!=null&&message.hasOwnProperty("height"))if(typeof message.height==="number")object.height=options.longs===String?String(message.height):message.height;else object.height=options.longs===String?$util.Long.prototype.toString.call(message.height):options.longs===Number?new $util.LongBits(message.height.low>>>0,message.height.high>>>0).toNumber():message.height;if(message.masked!=null&&message.hasOwnProperty("masked"))object.masked=message.masked;if(message.unmasked!=null&&message.hasOwnProperty("unmasked"))object.unmasked=message.unmasked;if(message.maskLength!=null&&message.hasOwnProperty("maskLength"))object.maskLength=message.maskLength;if(message.excluded!=null&&message.hasOwnProperty("excluded"))object.excluded=message.excluded;if(message.valueHash!=null&&message.hasOwnProperty("valueHash"))object.valueHash=message.valueHash;if(message.is_!=null&&message.hasOwnProperty("is_"))object.is_=message.is_;if(message.tag_!=null&&message.hasOwnProperty("tag_"))object.tag_=message.tag_;if(message.id_!=null&&message.hasOwnProperty("id_"))object.id_=message.id_;if(message.parentId_!=null&&message.hasOwnProperty("parentId_"))object.parentId_=message.parentId_;if(message.noParent_!=null&&message.hasOwnProperty("noParent_"))object.noParent_=message.noParent_;if(message.prevId_!=null&&message.hasOwnProperty("prevId_"))object.prevId_=message.prevId_;if(message.classes_&&message.classes_.length){object.classes_=[];for(var _j21=0;_j21<message.classes_.length;++_j21)object.classes_[_j21]=message.classes_[_j21];}if(message.styles_&&message.styles_.length){object.styles_=[];for(var _j22=0;_j22<message.styles_.length;++_j22)object.styles_[_j22]=message.styles_[_j22];}if(message.value_!=null&&message.hasOwnProperty("value_"))object.value_=message.value_;if(message.tapHandlerName!=null&&message.hasOwnProperty("tapHandlerName"))object.tapHandlerName=message.tapHandlerName;if(message.tapHandlerName_!=null&&message.hasOwnProperty("tapHandlerName_"))object.tapHandlerName_=message.tapHandlerName_;return object;};
NodeInfo.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
NodeInfo.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/NodeInfo";};NodeInfo.ExparserCompOptions=function(){
function ExparserCompOptions(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
ExparserCompOptions.prototype.virtualHost=false;
ExparserCompOptions.create=function create(properties){return new ExparserCompOptions(properties);};
ExparserCompOptions.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.virtualHost!=null&&Object.hasOwnProperty.call(message,"virtualHost"))writer.uint32(8).bool(message.virtualHost);return writer;};
ExparserCompOptions.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
ExparserCompOptions.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.NodeInfo.ExparserCompOptions();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.virtualHost=reader.bool();break;}default:reader.skipType(tag&7);break;}}return message;};
ExparserCompOptions.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
ExparserCompOptions.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.virtualHost!=null&&message.hasOwnProperty("virtualHost"))if(typeof message.virtualHost!=="boolean")return "virtualHost: boolean expected";return null;};
ExparserCompOptions.fromObject=function fromObject(object){if(object instanceof $root.NodeInfo.ExparserCompOptions)return object;var message=new $root.NodeInfo.ExparserCompOptions();if(object.virtualHost!=null)message.virtualHost=Boolean(object.virtualHost);return message;};
ExparserCompOptions.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults)object.virtualHost=false;if(message.virtualHost!=null&&message.hasOwnProperty("virtualHost"))object.virtualHost=message.virtualHost;return object;};
ExparserCompOptions.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
ExparserCompOptions.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/NodeInfo.ExparserCompOptions";};return ExparserCompOptions;}();return NodeInfo;})();$root.NodeAttribute=(()=>{
function NodeAttribute(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
NodeAttribute.prototype.key="";
NodeAttribute.prototype.value="";
NodeAttribute.prototype.removed=false;
NodeAttribute.prototype.key_=0;
NodeAttribute.prototype.value_=0;
NodeAttribute.create=function create(properties){return new NodeAttribute(properties);};
NodeAttribute.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.key!=null&&Object.hasOwnProperty.call(message,"key"))writer.uint32(10).string(message.key);if(message.value!=null&&Object.hasOwnProperty.call(message,"value"))writer.uint32(18).string(message.value);if(message.removed!=null&&Object.hasOwnProperty.call(message,"removed"))writer.uint32(24).bool(message.removed);if(message.key_!=null&&Object.hasOwnProperty.call(message,"key_"))writer.uint32(32).int32(message.key_);if(message.value_!=null&&Object.hasOwnProperty.call(message,"value_"))writer.uint32(40).int32(message.value_);return writer;};
NodeAttribute.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
NodeAttribute.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.NodeAttribute();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.key=reader.string();break;}case 2:{message.value=reader.string();break;}case 3:{message.removed=reader.bool();break;}case 4:{message.key_=reader.int32();break;}case 5:{message.value_=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
NodeAttribute.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
NodeAttribute.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.key!=null&&message.hasOwnProperty("key"))if(!$util.isString(message.key))return "key: string expected";if(message.value!=null&&message.hasOwnProperty("value"))if(!$util.isString(message.value))return "value: string expected";if(message.removed!=null&&message.hasOwnProperty("removed"))if(typeof message.removed!=="boolean")return "removed: boolean expected";if(message.key_!=null&&message.hasOwnProperty("key_"))if(!$util.isInteger(message.key_))return "key_: integer expected";if(message.value_!=null&&message.hasOwnProperty("value_"))if(!$util.isInteger(message.value_))return "value_: integer expected";return null;};
NodeAttribute.fromObject=function fromObject(object){if(object instanceof $root.NodeAttribute)return object;var message=new $root.NodeAttribute();if(object.key!=null)message.key=String(object.key);if(object.value!=null)message.value=String(object.value);if(object.removed!=null)message.removed=Boolean(object.removed);if(object.key_!=null)message.key_=object.key_|0;if(object.value_!=null)message.value_=object.value_|0;return message;};
NodeAttribute.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.key="";object.value="";object.removed=false;object.key_=0;object.value_=0;}if(message.key!=null&&message.hasOwnProperty("key"))object.key=message.key;if(message.value!=null&&message.hasOwnProperty("value"))object.value=message.value;if(message.removed!=null&&message.hasOwnProperty("removed"))object.removed=message.removed;if(message.key_!=null&&message.hasOwnProperty("key_"))object.key_=message.key_;if(message.value_!=null&&message.hasOwnProperty("value_"))object.value_=message.value_;return object;};
NodeAttribute.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
NodeAttribute.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/NodeAttribute";};return NodeAttribute;})();$root.AncestorNode=(()=>{
function AncestorNode(properties){this.attributes=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
AncestorNode.prototype.tagName="";
AncestorNode.prototype.attributes=$util.emptyArray;
AncestorNode.create=function create(properties){return new AncestorNode(properties);};
AncestorNode.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.tagName!=null&&Object.hasOwnProperty.call(message,"tagName"))writer.uint32(10).string(message.tagName);if(message.attributes!=null&&message.attributes.length)for(var i=0;i<message.attributes.length;++i)$root.Attributes.encode(message.attributes[i],writer.uint32(18).fork()).ldelim();return writer;};
AncestorNode.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
AncestorNode.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.AncestorNode();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.tagName=reader.string();break;}case 2:{if(!(message.attributes&&message.attributes.length))message.attributes=[];message.attributes.push($root.Attributes.decode(reader,reader.uint32()));break;}default:reader.skipType(tag&7);break;}}return message;};
AncestorNode.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
AncestorNode.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.tagName!=null&&message.hasOwnProperty("tagName"))if(!$util.isString(message.tagName))return "tagName: string expected";if(message.attributes!=null&&message.hasOwnProperty("attributes")){if(!Array.isArray(message.attributes))return "attributes: array expected";for(var i=0;i<message.attributes.length;++i){var error=$root.Attributes.verify(message.attributes[i]);if(error)return "attributes."+error;}}return null;};
AncestorNode.fromObject=function fromObject(object){if(object instanceof $root.AncestorNode)return object;var message=new $root.AncestorNode();if(object.tagName!=null)message.tagName=String(object.tagName);if(object.attributes){if(!Array.isArray(object.attributes))throw TypeError(".AncestorNode.attributes: array expected");message.attributes=[];for(var i=0;i<object.attributes.length;++i){if(typeof object.attributes[i]!=="object")throw TypeError(".AncestorNode.attributes: object expected");message.attributes[i]=$root.Attributes.fromObject(object.attributes[i]);}}return message;};
AncestorNode.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults)object.attributes=[];if(options.defaults)object.tagName="";if(message.tagName!=null&&message.hasOwnProperty("tagName"))object.tagName=message.tagName;if(message.attributes&&message.attributes.length){object.attributes=[];for(var j=0;j<message.attributes.length;++j)object.attributes[j]=$root.Attributes.toObject(message.attributes[j],options);}return object;};
AncestorNode.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
AncestorNode.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/AncestorNode";};return AncestorNode;})();$root.Attributes=(()=>{
function Attributes(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Attributes.prototype.k="";
Attributes.prototype.v="";
Attributes.create=function create(properties){return new Attributes(properties);};
Attributes.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.k!=null&&Object.hasOwnProperty.call(message,"k"))writer.uint32(10).string(message.k);if(message.v!=null&&Object.hasOwnProperty.call(message,"v"))writer.uint32(18).string(message.v);return writer;};
Attributes.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Attributes.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Attributes();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.k=reader.string();break;}case 2:{message.v=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
Attributes.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Attributes.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.k!=null&&message.hasOwnProperty("k"))if(!$util.isString(message.k))return "k: string expected";if(message.v!=null&&message.hasOwnProperty("v"))if(!$util.isString(message.v))return "v: string expected";return null;};
Attributes.fromObject=function fromObject(object){if(object instanceof $root.Attributes)return object;var message=new $root.Attributes();if(object.k!=null)message.k=String(object.k);if(object.v!=null)message.v=String(object.v);return message;};
Attributes.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.k="";object.v="";}if(message.k!=null&&message.hasOwnProperty("k"))object.k=message.k;if(message.v!=null&&message.hasOwnProperty("v"))object.v=message.v;return object;};
Attributes.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Attributes.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Attributes";};return Attributes;})();$root.DevCodeInfo=(()=>{
function DevCodeInfo(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
DevCodeInfo.prototype.compOptions=null;
DevCodeInfo.create=function create(properties){return new DevCodeInfo(properties);};
DevCodeInfo.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.compOptions!=null&&Object.hasOwnProperty.call(message,"compOptions"))$root.DevCodeInfo.UnifiedExpCompOptions.encode(message.compOptions,writer.uint32(18).fork()).ldelim();return writer;};
DevCodeInfo.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
DevCodeInfo.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.DevCodeInfo();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 2:{message.compOptions=$root.DevCodeInfo.UnifiedExpCompOptions.decode(reader,reader.uint32());break;}default:reader.skipType(tag&7);break;}}return message;};
DevCodeInfo.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
DevCodeInfo.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.compOptions!=null&&message.hasOwnProperty("compOptions")){var error=$root.DevCodeInfo.UnifiedExpCompOptions.verify(message.compOptions);if(error)return "compOptions."+error;}return null;};
DevCodeInfo.fromObject=function fromObject(object){if(object instanceof $root.DevCodeInfo)return object;var message=new $root.DevCodeInfo();if(object.compOptions!=null){if(typeof object.compOptions!=="object")throw TypeError(".DevCodeInfo.compOptions: object expected");message.compOptions=$root.DevCodeInfo.UnifiedExpCompOptions.fromObject(object.compOptions);}return message;};
DevCodeInfo.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults)object.compOptions=null;if(message.compOptions!=null&&message.hasOwnProperty("compOptions"))object.compOptions=$root.DevCodeInfo.UnifiedExpCompOptions.toObject(message.compOptions,options);return object;};
DevCodeInfo.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
DevCodeInfo.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/DevCodeInfo";};DevCodeInfo.UnifiedExpCompOptions=function(){
function UnifiedExpCompOptions(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
UnifiedExpCompOptions.prototype.is="";
UnifiedExpCompOptions.prototype.virtualHost=false;
UnifiedExpCompOptions.prototype.multipleSlots=false;
UnifiedExpCompOptions.prototype.dynamicSlots=false;
UnifiedExpCompOptions.create=function create(properties){return new UnifiedExpCompOptions(properties);};
UnifiedExpCompOptions.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.is!=null&&Object.hasOwnProperty.call(message,"is"))writer.uint32(10).string(message.is);if(message.virtualHost!=null&&Object.hasOwnProperty.call(message,"virtualHost"))writer.uint32(16).bool(message.virtualHost);if(message.multipleSlots!=null&&Object.hasOwnProperty.call(message,"multipleSlots"))writer.uint32(24).bool(message.multipleSlots);if(message.dynamicSlots!=null&&Object.hasOwnProperty.call(message,"dynamicSlots"))writer.uint32(32).bool(message.dynamicSlots);return writer;};
UnifiedExpCompOptions.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
UnifiedExpCompOptions.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.DevCodeInfo.UnifiedExpCompOptions();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.is=reader.string();break;}case 2:{message.virtualHost=reader.bool();break;}case 3:{message.multipleSlots=reader.bool();break;}case 4:{message.dynamicSlots=reader.bool();break;}default:reader.skipType(tag&7);break;}}return message;};
UnifiedExpCompOptions.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
UnifiedExpCompOptions.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.is!=null&&message.hasOwnProperty("is"))if(!$util.isString(message.is))return "is: string expected";if(message.virtualHost!=null&&message.hasOwnProperty("virtualHost"))if(typeof message.virtualHost!=="boolean")return "virtualHost: boolean expected";if(message.multipleSlots!=null&&message.hasOwnProperty("multipleSlots"))if(typeof message.multipleSlots!=="boolean")return "multipleSlots: boolean expected";if(message.dynamicSlots!=null&&message.hasOwnProperty("dynamicSlots"))if(typeof message.dynamicSlots!=="boolean")return "dynamicSlots: boolean expected";return null;};
UnifiedExpCompOptions.fromObject=function fromObject(object){if(object instanceof $root.DevCodeInfo.UnifiedExpCompOptions)return object;var message=new $root.DevCodeInfo.UnifiedExpCompOptions();if(object.is!=null)message.is=String(object.is);if(object.virtualHost!=null)message.virtualHost=Boolean(object.virtualHost);if(object.multipleSlots!=null)message.multipleSlots=Boolean(object.multipleSlots);if(object.dynamicSlots!=null)message.dynamicSlots=Boolean(object.dynamicSlots);return message;};
UnifiedExpCompOptions.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.is="";object.virtualHost=false;object.multipleSlots=false;object.dynamicSlots=false;}if(message.is!=null&&message.hasOwnProperty("is"))object.is=message.is;if(message.virtualHost!=null&&message.hasOwnProperty("virtualHost"))object.virtualHost=message.virtualHost;if(message.multipleSlots!=null&&message.hasOwnProperty("multipleSlots"))object.multipleSlots=message.multipleSlots;if(message.dynamicSlots!=null&&message.hasOwnProperty("dynamicSlots"))object.dynamicSlots=message.dynamicSlots;return object;};
UnifiedExpCompOptions.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
UnifiedExpCompOptions.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/DevCodeInfo.UnifiedExpCompOptions";};return UnifiedExpCompOptions;}();return DevCodeInfo;})();$root.Tap=(()=>{
function Tap(properties){this.ancestorPath=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Tap.prototype.x=0;
Tap.prototype.y=0;
Tap.prototype.pageX=0;
Tap.prototype.pageY=0;
Tap.prototype.relativeX=0;
Tap.prototype.relativeY=0;
Tap.prototype.identifier=0;
Tap.prototype.ancestorPath=$util.emptyArray;
Tap.prototype.innerText="";
Tap.prototype.isRage=false;
Tap.prototype.innerImage="";
Tap.create=function create(properties){return new Tap(properties);};
Tap.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.x!=null&&Object.hasOwnProperty.call(message,"x"))writer.uint32(9).double(message.x);if(message.y!=null&&Object.hasOwnProperty.call(message,"y"))writer.uint32(17).double(message.y);if(message.pageX!=null&&Object.hasOwnProperty.call(message,"pageX"))writer.uint32(25).double(message.pageX);if(message.pageY!=null&&Object.hasOwnProperty.call(message,"pageY"))writer.uint32(33).double(message.pageY);if(message.relativeX!=null&&Object.hasOwnProperty.call(message,"relativeX"))writer.uint32(41).double(message.relativeX);if(message.relativeY!=null&&Object.hasOwnProperty.call(message,"relativeY"))writer.uint32(49).double(message.relativeY);if(message.identifier!=null&&Object.hasOwnProperty.call(message,"identifier"))writer.uint32(57).double(message.identifier);if(message.ancestorPath!=null&&message.ancestorPath.length)for(var i=0;i<message.ancestorPath.length;++i)$root.AncestorNode.encode(message.ancestorPath[i],writer.uint32(66).fork()).ldelim();if(message.innerText!=null&&Object.hasOwnProperty.call(message,"innerText"))writer.uint32(74).string(message.innerText);if(message.isRage!=null&&Object.hasOwnProperty.call(message,"isRage"))writer.uint32(80).bool(message.isRage);if(message.innerImage!=null&&Object.hasOwnProperty.call(message,"innerImage"))writer.uint32(90).string(message.innerImage);return writer;};
Tap.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Tap.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Tap();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.x=reader.double();break;}case 2:{message.y=reader.double();break;}case 3:{message.pageX=reader.double();break;}case 4:{message.pageY=reader.double();break;}case 5:{message.relativeX=reader.double();break;}case 6:{message.relativeY=reader.double();break;}case 7:{message.identifier=reader.double();break;}case 8:{if(!(message.ancestorPath&&message.ancestorPath.length))message.ancestorPath=[];message.ancestorPath.push($root.AncestorNode.decode(reader,reader.uint32()));break;}case 9:{message.innerText=reader.string();break;}case 10:{message.isRage=reader.bool();break;}case 11:{message.innerImage=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
Tap.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Tap.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.x!=null&&message.hasOwnProperty("x"))if(typeof message.x!=="number")return "x: number expected";if(message.y!=null&&message.hasOwnProperty("y"))if(typeof message.y!=="number")return "y: number expected";if(message.pageX!=null&&message.hasOwnProperty("pageX"))if(typeof message.pageX!=="number")return "pageX: number expected";if(message.pageY!=null&&message.hasOwnProperty("pageY"))if(typeof message.pageY!=="number")return "pageY: number expected";if(message.relativeX!=null&&message.hasOwnProperty("relativeX"))if(typeof message.relativeX!=="number")return "relativeX: number expected";if(message.relativeY!=null&&message.hasOwnProperty("relativeY"))if(typeof message.relativeY!=="number")return "relativeY: number expected";if(message.identifier!=null&&message.hasOwnProperty("identifier"))if(typeof message.identifier!=="number")return "identifier: number expected";if(message.ancestorPath!=null&&message.hasOwnProperty("ancestorPath")){if(!Array.isArray(message.ancestorPath))return "ancestorPath: array expected";for(var i=0;i<message.ancestorPath.length;++i){var error=$root.AncestorNode.verify(message.ancestorPath[i]);if(error)return "ancestorPath."+error;}}if(message.innerText!=null&&message.hasOwnProperty("innerText"))if(!$util.isString(message.innerText))return "innerText: string expected";if(message.isRage!=null&&message.hasOwnProperty("isRage"))if(typeof message.isRage!=="boolean")return "isRage: boolean expected";if(message.innerImage!=null&&message.hasOwnProperty("innerImage"))if(!$util.isString(message.innerImage))return "innerImage: string expected";return null;};
Tap.fromObject=function fromObject(object){if(object instanceof $root.Tap)return object;var message=new $root.Tap();if(object.x!=null)message.x=Number(object.x);if(object.y!=null)message.y=Number(object.y);if(object.pageX!=null)message.pageX=Number(object.pageX);if(object.pageY!=null)message.pageY=Number(object.pageY);if(object.relativeX!=null)message.relativeX=Number(object.relativeX);if(object.relativeY!=null)message.relativeY=Number(object.relativeY);if(object.identifier!=null)message.identifier=Number(object.identifier);if(object.ancestorPath){if(!Array.isArray(object.ancestorPath))throw TypeError(".Tap.ancestorPath: array expected");message.ancestorPath=[];for(var i=0;i<object.ancestorPath.length;++i){if(typeof object.ancestorPath[i]!=="object")throw TypeError(".Tap.ancestorPath: object expected");message.ancestorPath[i]=$root.AncestorNode.fromObject(object.ancestorPath[i]);}}if(object.innerText!=null)message.innerText=String(object.innerText);if(object.isRage!=null)message.isRage=Boolean(object.isRage);if(object.innerImage!=null)message.innerImage=String(object.innerImage);return message;};
Tap.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults)object.ancestorPath=[];if(options.defaults){object.x=0;object.y=0;object.pageX=0;object.pageY=0;object.relativeX=0;object.relativeY=0;object.identifier=0;object.innerText="";object.isRage=false;object.innerImage="";}if(message.x!=null&&message.hasOwnProperty("x"))object.x=options.json&&!isFinite(message.x)?String(message.x):message.x;if(message.y!=null&&message.hasOwnProperty("y"))object.y=options.json&&!isFinite(message.y)?String(message.y):message.y;if(message.pageX!=null&&message.hasOwnProperty("pageX"))object.pageX=options.json&&!isFinite(message.pageX)?String(message.pageX):message.pageX;if(message.pageY!=null&&message.hasOwnProperty("pageY"))object.pageY=options.json&&!isFinite(message.pageY)?String(message.pageY):message.pageY;if(message.relativeX!=null&&message.hasOwnProperty("relativeX"))object.relativeX=options.json&&!isFinite(message.relativeX)?String(message.relativeX):message.relativeX;if(message.relativeY!=null&&message.hasOwnProperty("relativeY"))object.relativeY=options.json&&!isFinite(message.relativeY)?String(message.relativeY):message.relativeY;if(message.identifier!=null&&message.hasOwnProperty("identifier"))object.identifier=options.json&&!isFinite(message.identifier)?String(message.identifier):message.identifier;if(message.ancestorPath&&message.ancestorPath.length){object.ancestorPath=[];for(var j=0;j<message.ancestorPath.length;++j)object.ancestorPath[j]=$root.AncestorNode.toObject(message.ancestorPath[j],options);}if(message.innerText!=null&&message.hasOwnProperty("innerText"))object.innerText=message.innerText;if(message.isRage!=null&&message.hasOwnProperty("isRage"))object.isRage=message.isRage;if(message.innerImage!=null&&message.hasOwnProperty("innerImage"))object.innerImage=message.innerImage;return object;};
Tap.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Tap.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Tap";};return Tap;})();$root.Click=(()=>{
function Click(properties){this.ancestorPath=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Click.prototype.x=0;
Click.prototype.y=0;
Click.prototype.pageX=0;
Click.prototype.pageY=0;
Click.prototype.relativeX=0;
Click.prototype.relativeY=0;
Click.prototype.ancestorPath=$util.emptyArray;
Click.prototype.innerText="";
Click.prototype.isRage=false;
Click.create=function create(properties){return new Click(properties);};
Click.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.x!=null&&Object.hasOwnProperty.call(message,"x"))writer.uint32(9).double(message.x);if(message.y!=null&&Object.hasOwnProperty.call(message,"y"))writer.uint32(17).double(message.y);if(message.pageX!=null&&Object.hasOwnProperty.call(message,"pageX"))writer.uint32(25).double(message.pageX);if(message.pageY!=null&&Object.hasOwnProperty.call(message,"pageY"))writer.uint32(33).double(message.pageY);if(message.relativeX!=null&&Object.hasOwnProperty.call(message,"relativeX"))writer.uint32(41).double(message.relativeX);if(message.relativeY!=null&&Object.hasOwnProperty.call(message,"relativeY"))writer.uint32(49).double(message.relativeY);if(message.ancestorPath!=null&&message.ancestorPath.length)for(var i=0;i<message.ancestorPath.length;++i)$root.AncestorNode.encode(message.ancestorPath[i],writer.uint32(58).fork()).ldelim();if(message.innerText!=null&&Object.hasOwnProperty.call(message,"innerText"))writer.uint32(66).string(message.innerText);if(message.isRage!=null&&Object.hasOwnProperty.call(message,"isRage"))writer.uint32(72).bool(message.isRage);return writer;};
Click.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Click.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Click();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.x=reader.double();break;}case 2:{message.y=reader.double();break;}case 3:{message.pageX=reader.double();break;}case 4:{message.pageY=reader.double();break;}case 5:{message.relativeX=reader.double();break;}case 6:{message.relativeY=reader.double();break;}case 7:{if(!(message.ancestorPath&&message.ancestorPath.length))message.ancestorPath=[];message.ancestorPath.push($root.AncestorNode.decode(reader,reader.uint32()));break;}case 8:{message.innerText=reader.string();break;}case 9:{message.isRage=reader.bool();break;}default:reader.skipType(tag&7);break;}}return message;};
Click.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Click.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.x!=null&&message.hasOwnProperty("x"))if(typeof message.x!=="number")return "x: number expected";if(message.y!=null&&message.hasOwnProperty("y"))if(typeof message.y!=="number")return "y: number expected";if(message.pageX!=null&&message.hasOwnProperty("pageX"))if(typeof message.pageX!=="number")return "pageX: number expected";if(message.pageY!=null&&message.hasOwnProperty("pageY"))if(typeof message.pageY!=="number")return "pageY: number expected";if(message.relativeX!=null&&message.hasOwnProperty("relativeX"))if(typeof message.relativeX!=="number")return "relativeX: number expected";if(message.relativeY!=null&&message.hasOwnProperty("relativeY"))if(typeof message.relativeY!=="number")return "relativeY: number expected";if(message.ancestorPath!=null&&message.hasOwnProperty("ancestorPath")){if(!Array.isArray(message.ancestorPath))return "ancestorPath: array expected";for(var i=0;i<message.ancestorPath.length;++i){var error=$root.AncestorNode.verify(message.ancestorPath[i]);if(error)return "ancestorPath."+error;}}if(message.innerText!=null&&message.hasOwnProperty("innerText"))if(!$util.isString(message.innerText))return "innerText: string expected";if(message.isRage!=null&&message.hasOwnProperty("isRage"))if(typeof message.isRage!=="boolean")return "isRage: boolean expected";return null;};
Click.fromObject=function fromObject(object){if(object instanceof $root.Click)return object;var message=new $root.Click();if(object.x!=null)message.x=Number(object.x);if(object.y!=null)message.y=Number(object.y);if(object.pageX!=null)message.pageX=Number(object.pageX);if(object.pageY!=null)message.pageY=Number(object.pageY);if(object.relativeX!=null)message.relativeX=Number(object.relativeX);if(object.relativeY!=null)message.relativeY=Number(object.relativeY);if(object.ancestorPath){if(!Array.isArray(object.ancestorPath))throw TypeError(".Click.ancestorPath: array expected");message.ancestorPath=[];for(var i=0;i<object.ancestorPath.length;++i){if(typeof object.ancestorPath[i]!=="object")throw TypeError(".Click.ancestorPath: object expected");message.ancestorPath[i]=$root.AncestorNode.fromObject(object.ancestorPath[i]);}}if(object.innerText!=null)message.innerText=String(object.innerText);if(object.isRage!=null)message.isRage=Boolean(object.isRage);return message;};
Click.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults)object.ancestorPath=[];if(options.defaults){object.x=0;object.y=0;object.pageX=0;object.pageY=0;object.relativeX=0;object.relativeY=0;object.innerText="";object.isRage=false;}if(message.x!=null&&message.hasOwnProperty("x"))object.x=options.json&&!isFinite(message.x)?String(message.x):message.x;if(message.y!=null&&message.hasOwnProperty("y"))object.y=options.json&&!isFinite(message.y)?String(message.y):message.y;if(message.pageX!=null&&message.hasOwnProperty("pageX"))object.pageX=options.json&&!isFinite(message.pageX)?String(message.pageX):message.pageX;if(message.pageY!=null&&message.hasOwnProperty("pageY"))object.pageY=options.json&&!isFinite(message.pageY)?String(message.pageY):message.pageY;if(message.relativeX!=null&&message.hasOwnProperty("relativeX"))object.relativeX=options.json&&!isFinite(message.relativeX)?String(message.relativeX):message.relativeX;if(message.relativeY!=null&&message.hasOwnProperty("relativeY"))object.relativeY=options.json&&!isFinite(message.relativeY)?String(message.relativeY):message.relativeY;if(message.ancestorPath&&message.ancestorPath.length){object.ancestorPath=[];for(var j=0;j<message.ancestorPath.length;++j)object.ancestorPath[j]=$root.AncestorNode.toObject(message.ancestorPath[j],options);}if(message.innerText!=null&&message.hasOwnProperty("innerText"))object.innerText=message.innerText;if(message.isRage!=null&&message.hasOwnProperty("isRage"))object.isRage=message.isRage;return object;};
Click.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Click.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Click";};return Click;})();$root.Exposure=(()=>{
function Exposure(properties){this.ancestorPath=[];if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Exposure.prototype.ancestorPath=$util.emptyArray;
Exposure.prototype.innerText="";
Exposure.prototype.documentHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
Exposure.prototype.maxScrollY=$util.Long?$util.Long.fromBits(0,0,false):0;
Exposure.prototype.windowHeight=$util.Long?$util.Long.fromBits(0,0,false):0;
Exposure.create=function create(properties){return new Exposure(properties);};
Exposure.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.ancestorPath!=null&&message.ancestorPath.length)for(var i=0;i<message.ancestorPath.length;++i)$root.AncestorNode.encode(message.ancestorPath[i],writer.uint32(10).fork()).ldelim();if(message.innerText!=null&&Object.hasOwnProperty.call(message,"innerText"))writer.uint32(18).string(message.innerText);if(message.documentHeight!=null&&Object.hasOwnProperty.call(message,"documentHeight"))writer.uint32(24).int64(message.documentHeight);if(message.maxScrollY!=null&&Object.hasOwnProperty.call(message,"maxScrollY"))writer.uint32(32).int64(message.maxScrollY);if(message.windowHeight!=null&&Object.hasOwnProperty.call(message,"windowHeight"))writer.uint32(40).int64(message.windowHeight);return writer;};
Exposure.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Exposure.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Exposure();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{if(!(message.ancestorPath&&message.ancestorPath.length))message.ancestorPath=[];message.ancestorPath.push($root.AncestorNode.decode(reader,reader.uint32()));break;}case 2:{message.innerText=reader.string();break;}case 3:{message.documentHeight=reader.int64();break;}case 4:{message.maxScrollY=reader.int64();break;}case 5:{message.windowHeight=reader.int64();break;}default:reader.skipType(tag&7);break;}}return message;};
Exposure.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Exposure.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.ancestorPath!=null&&message.hasOwnProperty("ancestorPath")){if(!Array.isArray(message.ancestorPath))return "ancestorPath: array expected";for(var i=0;i<message.ancestorPath.length;++i){var error=$root.AncestorNode.verify(message.ancestorPath[i]);if(error)return "ancestorPath."+error;}}if(message.innerText!=null&&message.hasOwnProperty("innerText"))if(!$util.isString(message.innerText))return "innerText: string expected";if(message.documentHeight!=null&&message.hasOwnProperty("documentHeight"))if(!$util.isInteger(message.documentHeight)&&!(message.documentHeight&&$util.isInteger(message.documentHeight.low)&&$util.isInteger(message.documentHeight.high)))return "documentHeight: integer|Long expected";if(message.maxScrollY!=null&&message.hasOwnProperty("maxScrollY"))if(!$util.isInteger(message.maxScrollY)&&!(message.maxScrollY&&$util.isInteger(message.maxScrollY.low)&&$util.isInteger(message.maxScrollY.high)))return "maxScrollY: integer|Long expected";if(message.windowHeight!=null&&message.hasOwnProperty("windowHeight"))if(!$util.isInteger(message.windowHeight)&&!(message.windowHeight&&$util.isInteger(message.windowHeight.low)&&$util.isInteger(message.windowHeight.high)))return "windowHeight: integer|Long expected";return null;};
Exposure.fromObject=function fromObject(object){if(object instanceof $root.Exposure)return object;var message=new $root.Exposure();if(object.ancestorPath){if(!Array.isArray(object.ancestorPath))throw TypeError(".Exposure.ancestorPath: array expected");message.ancestorPath=[];for(var i=0;i<object.ancestorPath.length;++i){if(typeof object.ancestorPath[i]!=="object")throw TypeError(".Exposure.ancestorPath: object expected");message.ancestorPath[i]=$root.AncestorNode.fromObject(object.ancestorPath[i]);}}if(object.innerText!=null)message.innerText=String(object.innerText);if(object.documentHeight!=null)if($util.Long)(message.documentHeight=$util.Long.fromValue(object.documentHeight)).unsigned=false;else if(typeof object.documentHeight==="string")message.documentHeight=parseInt(object.documentHeight,10);else if(typeof object.documentHeight==="number")message.documentHeight=object.documentHeight;else if(typeof object.documentHeight==="object")message.documentHeight=new $util.LongBits(object.documentHeight.low>>>0,object.documentHeight.high>>>0).toNumber();if(object.maxScrollY!=null)if($util.Long)(message.maxScrollY=$util.Long.fromValue(object.maxScrollY)).unsigned=false;else if(typeof object.maxScrollY==="string")message.maxScrollY=parseInt(object.maxScrollY,10);else if(typeof object.maxScrollY==="number")message.maxScrollY=object.maxScrollY;else if(typeof object.maxScrollY==="object")message.maxScrollY=new $util.LongBits(object.maxScrollY.low>>>0,object.maxScrollY.high>>>0).toNumber();if(object.windowHeight!=null)if($util.Long)(message.windowHeight=$util.Long.fromValue(object.windowHeight)).unsigned=false;else if(typeof object.windowHeight==="string")message.windowHeight=parseInt(object.windowHeight,10);else if(typeof object.windowHeight==="number")message.windowHeight=object.windowHeight;else if(typeof object.windowHeight==="object")message.windowHeight=new $util.LongBits(object.windowHeight.low>>>0,object.windowHeight.high>>>0).toNumber();return message;};
Exposure.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.arrays||options.defaults)object.ancestorPath=[];if(options.defaults){object.innerText="";if($util.Long){var long=new $util.Long(0,0,false);object.documentHeight=options.longs===String?long.toString():options.longs===Number?long.toNumber():long;}else object.documentHeight=options.longs===String?"0":0;if($util.Long){var _long15=new $util.Long(0,0,false);object.maxScrollY=options.longs===String?_long15.toString():options.longs===Number?_long15.toNumber():_long15;}else object.maxScrollY=options.longs===String?"0":0;if($util.Long){var _long16=new $util.Long(0,0,false);object.windowHeight=options.longs===String?_long16.toString():options.longs===Number?_long16.toNumber():_long16;}else object.windowHeight=options.longs===String?"0":0;}if(message.ancestorPath&&message.ancestorPath.length){object.ancestorPath=[];for(var j=0;j<message.ancestorPath.length;++j)object.ancestorPath[j]=$root.AncestorNode.toObject(message.ancestorPath[j],options);}if(message.innerText!=null&&message.hasOwnProperty("innerText"))object.innerText=message.innerText;if(message.documentHeight!=null&&message.hasOwnProperty("documentHeight"))if(typeof message.documentHeight==="number")object.documentHeight=options.longs===String?String(message.documentHeight):message.documentHeight;else object.documentHeight=options.longs===String?$util.Long.prototype.toString.call(message.documentHeight):options.longs===Number?new $util.LongBits(message.documentHeight.low>>>0,message.documentHeight.high>>>0).toNumber():message.documentHeight;if(message.maxScrollY!=null&&message.hasOwnProperty("maxScrollY"))if(typeof message.maxScrollY==="number")object.maxScrollY=options.longs===String?String(message.maxScrollY):message.maxScrollY;else object.maxScrollY=options.longs===String?$util.Long.prototype.toString.call(message.maxScrollY):options.longs===Number?new $util.LongBits(message.maxScrollY.low>>>0,message.maxScrollY.high>>>0).toNumber():message.maxScrollY;if(message.windowHeight!=null&&message.hasOwnProperty("windowHeight"))if(typeof message.windowHeight==="number")object.windowHeight=options.longs===String?String(message.windowHeight):message.windowHeight;else object.windowHeight=options.longs===String?$util.Long.prototype.toString.call(message.windowHeight):options.longs===Number?new $util.LongBits(message.windowHeight.low>>>0,message.windowHeight.high>>>0).toNumber():message.windowHeight;return object;};
Exposure.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Exposure.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Exposure";};return Exposure;})();$root.Pointer=(()=>{
function Pointer(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Pointer.prototype.x=0;
Pointer.prototype.y=0;
Pointer.prototype.identifier=0;
Pointer.create=function create(properties){return new Pointer(properties);};
Pointer.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.x!=null&&Object.hasOwnProperty.call(message,"x"))writer.uint32(9).double(message.x);if(message.y!=null&&Object.hasOwnProperty.call(message,"y"))writer.uint32(17).double(message.y);if(message.identifier!=null&&Object.hasOwnProperty.call(message,"identifier"))writer.uint32(25).double(message.identifier);return writer;};
Pointer.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Pointer.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Pointer();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.x=reader.double();break;}case 2:{message.y=reader.double();break;}case 3:{message.identifier=reader.double();break;}default:reader.skipType(tag&7);break;}}return message;};
Pointer.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Pointer.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.x!=null&&message.hasOwnProperty("x"))if(typeof message.x!=="number")return "x: number expected";if(message.y!=null&&message.hasOwnProperty("y"))if(typeof message.y!=="number")return "y: number expected";if(message.identifier!=null&&message.hasOwnProperty("identifier"))if(typeof message.identifier!=="number")return "identifier: number expected";return null;};
Pointer.fromObject=function fromObject(object){if(object instanceof $root.Pointer)return object;var message=new $root.Pointer();if(object.x!=null)message.x=Number(object.x);if(object.y!=null)message.y=Number(object.y);if(object.identifier!=null)message.identifier=Number(object.identifier);return message;};
Pointer.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.x=0;object.y=0;object.identifier=0;}if(message.x!=null&&message.hasOwnProperty("x"))object.x=options.json&&!isFinite(message.x)?String(message.x):message.x;if(message.y!=null&&message.hasOwnProperty("y"))object.y=options.json&&!isFinite(message.y)?String(message.y):message.y;if(message.identifier!=null&&message.hasOwnProperty("identifier"))object.identifier=options.json&&!isFinite(message.identifier)?String(message.identifier):message.identifier;return object;};
Pointer.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Pointer.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Pointer";};return Pointer;})();$root.Selection=(()=>{
function Selection(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
Selection.prototype.start=0;
Selection.prototype.startOffset=0;
Selection.prototype.end=0;
Selection.prototype.endOffset=0;
Selection.create=function create(properties){return new Selection(properties);};
Selection.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.start!=null&&Object.hasOwnProperty.call(message,"start"))writer.uint32(8).int32(message.start);if(message.startOffset!=null&&Object.hasOwnProperty.call(message,"startOffset"))writer.uint32(16).int32(message.startOffset);if(message.end!=null&&Object.hasOwnProperty.call(message,"end"))writer.uint32(24).int32(message.end);if(message.endOffset!=null&&Object.hasOwnProperty.call(message,"endOffset"))writer.uint32(32).int32(message.endOffset);return writer;};
Selection.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
Selection.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.Selection();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.start=reader.int32();break;}case 2:{message.startOffset=reader.int32();break;}case 3:{message.end=reader.int32();break;}case 4:{message.endOffset=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
Selection.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
Selection.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.start!=null&&message.hasOwnProperty("start"))if(!$util.isInteger(message.start))return "start: integer expected";if(message.startOffset!=null&&message.hasOwnProperty("startOffset"))if(!$util.isInteger(message.startOffset))return "startOffset: integer expected";if(message.end!=null&&message.hasOwnProperty("end"))if(!$util.isInteger(message.end))return "end: integer expected";if(message.endOffset!=null&&message.hasOwnProperty("endOffset"))if(!$util.isInteger(message.endOffset))return "endOffset: integer expected";return null;};
Selection.fromObject=function fromObject(object){if(object instanceof $root.Selection)return object;var message=new $root.Selection();if(object.start!=null)message.start=object.start|0;if(object.startOffset!=null)message.startOffset=object.startOffset|0;if(object.end!=null)message.end=object.end|0;if(object.endOffset!=null)message.endOffset=object.endOffset|0;return message;};
Selection.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.start=0;object.startOffset=0;object.end=0;object.endOffset=0;}if(message.start!=null&&message.hasOwnProperty("start"))object.start=message.start;if(message.startOffset!=null&&message.hasOwnProperty("startOffset"))object.startOffset=message.startOffset;if(message.end!=null&&message.hasOwnProperty("end"))object.end=message.end;if(message.endOffset!=null&&message.hasOwnProperty("endOffset"))object.endOffset=message.endOffset;return object;};
Selection.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
Selection.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/Selection";};return Selection;})();$root.ScrollDetail=(()=>{
function ScrollDetail(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
ScrollDetail.prototype.scrollTop=0;
ScrollDetail.prototype.scrollLeft=0;
ScrollDetail.create=function create(properties){return new ScrollDetail(properties);};
ScrollDetail.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.scrollTop!=null&&Object.hasOwnProperty.call(message,"scrollTop"))writer.uint32(8).int32(message.scrollTop);if(message.scrollLeft!=null&&Object.hasOwnProperty.call(message,"scrollLeft"))writer.uint32(16).int32(message.scrollLeft);return writer;};
ScrollDetail.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
ScrollDetail.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.ScrollDetail();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.scrollTop=reader.int32();break;}case 2:{message.scrollLeft=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
ScrollDetail.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
ScrollDetail.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.scrollTop!=null&&message.hasOwnProperty("scrollTop"))if(!$util.isInteger(message.scrollTop))return "scrollTop: integer expected";if(message.scrollLeft!=null&&message.hasOwnProperty("scrollLeft"))if(!$util.isInteger(message.scrollLeft))return "scrollLeft: integer expected";return null;};
ScrollDetail.fromObject=function fromObject(object){if(object instanceof $root.ScrollDetail)return object;var message=new $root.ScrollDetail();if(object.scrollTop!=null)message.scrollTop=object.scrollTop|0;if(object.scrollLeft!=null)message.scrollLeft=object.scrollLeft|0;return message;};
ScrollDetail.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.scrollTop=0;object.scrollLeft=0;}if(message.scrollTop!=null&&message.hasOwnProperty("scrollTop"))object.scrollTop=message.scrollTop;if(message.scrollLeft!=null&&message.hasOwnProperty("scrollLeft"))object.scrollLeft=message.scrollLeft;return object;};
ScrollDetail.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
ScrollDetail.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/ScrollDetail";};return ScrollDetail;})();$root.CanvasDetail=(()=>{
function CanvasDetail(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
CanvasDetail.prototype.frameBuffer=$util.newBuffer([]);
CanvasDetail.prototype.encoding="";
CanvasDetail.prototype.frameBufferId="";
CanvasDetail.create=function create(properties){return new CanvasDetail(properties);};
CanvasDetail.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.frameBuffer!=null&&Object.hasOwnProperty.call(message,"frameBuffer"))writer.uint32(10).bytes(message.frameBuffer);if(message.encoding!=null&&Object.hasOwnProperty.call(message,"encoding"))writer.uint32(18).string(message.encoding);if(message.frameBufferId!=null&&Object.hasOwnProperty.call(message,"frameBufferId"))writer.uint32(26).string(message.frameBufferId);return writer;};
CanvasDetail.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
CanvasDetail.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.CanvasDetail();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.frameBuffer=reader.bytes();break;}case 2:{message.encoding=reader.string();break;}case 3:{message.frameBufferId=reader.string();break;}default:reader.skipType(tag&7);break;}}return message;};
CanvasDetail.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
CanvasDetail.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.frameBuffer!=null&&message.hasOwnProperty("frameBuffer"))if(!(message.frameBuffer&&typeof message.frameBuffer.length==="number"||$util.isString(message.frameBuffer)))return "frameBuffer: buffer expected";if(message.encoding!=null&&message.hasOwnProperty("encoding"))if(!$util.isString(message.encoding))return "encoding: string expected";if(message.frameBufferId!=null&&message.hasOwnProperty("frameBufferId"))if(!$util.isString(message.frameBufferId))return "frameBufferId: string expected";return null;};
CanvasDetail.fromObject=function fromObject(object){if(object instanceof $root.CanvasDetail)return object;var message=new $root.CanvasDetail();if(object.frameBuffer!=null)if(typeof object.frameBuffer==="string")$util.base64.decode(object.frameBuffer,message.frameBuffer=$util.newBuffer($util.base64.length(object.frameBuffer)),0);else if(object.frameBuffer.length>=0)message.frameBuffer=object.frameBuffer;if(object.encoding!=null)message.encoding=String(object.encoding);if(object.frameBufferId!=null)message.frameBufferId=String(object.frameBufferId);return message;};
CanvasDetail.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){if(options.bytes===String)object.frameBuffer="";else {object.frameBuffer=[];if(options.bytes!==Array)object.frameBuffer=$util.newBuffer(object.frameBuffer);}object.encoding="";object.frameBufferId="";}if(message.frameBuffer!=null&&message.hasOwnProperty("frameBuffer"))object.frameBuffer=options.bytes===String?$util.base64.encode(message.frameBuffer,0,message.frameBuffer.length):options.bytes===Array?Array.prototype.slice.call(message.frameBuffer):message.frameBuffer;if(message.encoding!=null&&message.hasOwnProperty("encoding"))object.encoding=message.encoding;if(message.frameBufferId!=null&&message.hasOwnProperty("frameBufferId"))object.frameBufferId=message.frameBufferId;return object;};
CanvasDetail.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
CanvasDetail.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/CanvasDetail";};return CanvasDetail;})();$root.ExparserCompProperty=(()=>{
function ExparserCompProperty(properties){if(properties)for(var keys=Object.keys(properties),i=0;i<keys.length;++i)if(properties[keys[i]]!=null)this[keys[i]]=properties[keys[i]];}
ExparserCompProperty.prototype.key="";
ExparserCompProperty.prototype.valueStr="";
ExparserCompProperty.prototype.valueNum=0;
ExparserCompProperty.prototype.valueBool=false;
ExparserCompProperty.prototype.type=0;
ExparserCompProperty.prototype.key_=0;
ExparserCompProperty.prototype.valueStr_=0;
ExparserCompProperty.create=function create(properties){return new ExparserCompProperty(properties);};
ExparserCompProperty.encode=function encode(message,writer){if(!writer)writer=$Writer.create();if(message.key!=null&&Object.hasOwnProperty.call(message,"key"))writer.uint32(10).string(message.key);if(message.valueStr!=null&&Object.hasOwnProperty.call(message,"valueStr"))writer.uint32(18).string(message.valueStr);if(message.valueNum!=null&&Object.hasOwnProperty.call(message,"valueNum"))writer.uint32(25).double(message.valueNum);if(message.valueBool!=null&&Object.hasOwnProperty.call(message,"valueBool"))writer.uint32(32).bool(message.valueBool);if(message.type!=null&&Object.hasOwnProperty.call(message,"type"))writer.uint32(40).int32(message.type);if(message.key_!=null&&Object.hasOwnProperty.call(message,"key_"))writer.uint32(48).int32(message.key_);if(message.valueStr_!=null&&Object.hasOwnProperty.call(message,"valueStr_"))writer.uint32(56).int32(message.valueStr_);return writer;};
ExparserCompProperty.encodeDelimited=function encodeDelimited(message,writer){return this.encode(message,writer).ldelim();};
ExparserCompProperty.decode=function decode(reader,length){if(!(reader instanceof $Reader))reader=$Reader.create(reader);var end=length===undefined?reader.len:reader.pos+length,message=new $root.ExparserCompProperty();while(reader.pos<end){var tag=reader.uint32();switch(tag>>>3){case 1:{message.key=reader.string();break;}case 2:{message.valueStr=reader.string();break;}case 3:{message.valueNum=reader.double();break;}case 4:{message.valueBool=reader.bool();break;}case 5:{message.type=reader.int32();break;}case 6:{message.key_=reader.int32();break;}case 7:{message.valueStr_=reader.int32();break;}default:reader.skipType(tag&7);break;}}return message;};
ExparserCompProperty.decodeDelimited=function decodeDelimited(reader){if(!(reader instanceof $Reader))reader=new $Reader(reader);return this.decode(reader,reader.uint32());};
ExparserCompProperty.verify=function verify(message){if(typeof message!=="object"||message===null)return "object expected";if(message.key!=null&&message.hasOwnProperty("key"))if(!$util.isString(message.key))return "key: string expected";if(message.valueStr!=null&&message.hasOwnProperty("valueStr"))if(!$util.isString(message.valueStr))return "valueStr: string expected";if(message.valueNum!=null&&message.hasOwnProperty("valueNum"))if(typeof message.valueNum!=="number")return "valueNum: number expected";if(message.valueBool!=null&&message.hasOwnProperty("valueBool"))if(typeof message.valueBool!=="boolean")return "valueBool: boolean expected";if(message.type!=null&&message.hasOwnProperty("type"))switch(message.type){default:return "type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:break;}if(message.key_!=null&&message.hasOwnProperty("key_"))if(!$util.isInteger(message.key_))return "key_: integer expected";if(message.valueStr_!=null&&message.hasOwnProperty("valueStr_"))if(!$util.isInteger(message.valueStr_))return "valueStr_: integer expected";return null;};
ExparserCompProperty.fromObject=function fromObject(object){if(object instanceof $root.ExparserCompProperty)return object;var message=new $root.ExparserCompProperty();if(object.key!=null)message.key=String(object.key);if(object.valueStr!=null)message.valueStr=String(object.valueStr);if(object.valueNum!=null)message.valueNum=Number(object.valueNum);if(object.valueBool!=null)message.valueBool=Boolean(object.valueBool);switch(object.type){default:if(typeof object.type==="number"){message.type=object.type;break;}break;case"Unset":case 0:message.type=0;break;case"String":case 1:message.type=1;break;case"Number":case 2:message.type=2;break;case"Boolean":case 3:message.type=3;break;case"JSON":case 4:message.type=4;break;case"Null":case 5:message.type=5;break;case"Undefined":case 6:message.type=6;break;}if(object.key_!=null)message.key_=object.key_|0;if(object.valueStr_!=null)message.valueStr_=object.valueStr_|0;return message;};
ExparserCompProperty.toObject=function toObject(message,options){if(!options)options={};var object={};if(options.defaults){object.key="";object.valueStr="";object.valueNum=0;object.valueBool=false;object.type=options.enums===String?"Unset":0;object.key_=0;object.valueStr_=0;}if(message.key!=null&&message.hasOwnProperty("key"))object.key=message.key;if(message.valueStr!=null&&message.hasOwnProperty("valueStr"))object.valueStr=message.valueStr;if(message.valueNum!=null&&message.hasOwnProperty("valueNum"))object.valueNum=options.json&&!isFinite(message.valueNum)?String(message.valueNum):message.valueNum;if(message.valueBool!=null&&message.hasOwnProperty("valueBool"))object.valueBool=message.valueBool;if(message.type!=null&&message.hasOwnProperty("type"))object.type=options.enums===String?$root.ExparserCompPropType[message.type]===undefined?message.type:$root.ExparserCompPropType[message.type]:message.type;if(message.key_!=null&&message.hasOwnProperty("key_"))object.key_=message.key_;if(message.valueStr_!=null&&message.hasOwnProperty("valueStr_"))object.valueStr_=message.valueStr_;return object;};
ExparserCompProperty.prototype.toJSON=function toJSON(){return this.constructor.toObject(this,minimal$1.exports.util.toJSONOptions);};
ExparserCompProperty.getTypeUrl=function getTypeUrl(typeUrlPrefix){if(typeUrlPrefix===undefined){typeUrlPrefix="type.googleapis.com";}return typeUrlPrefix+"/ExparserCompProperty";};return ExparserCompProperty;})();
$root.ExparserCompPropType=(()=>{var valuesById={},values=Object.create(valuesById);values[valuesById[0]="Unset"]=0;values[valuesById[1]="String"]=1;values[valuesById[2]="Number"]=2;values[valuesById[3]="Boolean"]=3;values[valuesById[4]="JSON"]=4;values[valuesById[5]="Null"]=5;values[valuesById[6]="Undefined"]=6;return values;})();
$root.DiffSeqSignal=(()=>{var valuesById={},values=Object.create(valuesById);values[valuesById[0]="Unset"]=0;values[valuesById[1]="Start"]=1;values[valuesById[2]="End"]=2;values[valuesById[3]="StartAndEnd"]=3;return values;})();

const LONG_TASK_DURATION = 30;
const SIMPLE_OPERATIONS_PER_TASK_SLICE = 1000;
const COMPLEX_OPERATIONS_PER_TASK_SLICE = 100;
const COMMON_EVENTE_LISTENER_OPTIONS = {
    capture: true,
    passive: true,
};
const INTRINSIC_ATTRIBUTES = new Set(['id', 'class', 'style']);
const IGNORED_COMP_PROPS = new Set([
    'ariaActivedescendant',
    'ariaAtomic',
    'ariaAutocomplete',
    'ariaBusy',
    'ariaChecked',
    'ariaColcount',
    'ariaColindex',
    'ariaColspan',
    'ariaControls',
    'ariaCurrent',
    'ariaDescribedby',
    'ariaDetails',
    'ariaDisabled',
    'ariaDropeffect',
    'ariaErrormessage',
    'ariaExpanded',
    'ariaFlowto',
    'ariaGrabbed',
    'ariaHaspopup',
    'ariaHidden',
    'ariaInvalid',
    'ariaKeyshortcuts',
    'ariaLabel',
    'ariaLabelledby',
    'ariaLevel',
    'ariaLive',
    'ariaModal',
    'ariaMultiline',
    'ariaMultiselectable',
    'ariaOrientation',
    'ariaOwns',
    'ariaPlaceholder',
    'ariaPosinset',
    'ariaPressed',
    'ariaReadonly',
    'ariaRelevant',
    'ariaRequired',
    'ariaRole',
    'ariaRoledescription',
    'ariaRowcount',
    'ariaRowindex',
    'ariaRowspan',
    'ariaSelected',
    'ariaSetsize',
    'ariaSort',
    'ariaValuemax',
    'ariaValuemin',
    'ariaValuenow',
    'ariaValuetext',
    'enableSelection',
    'disableSelection',
]);
const PACK_VERSION = {
    Raw: '0',
    Compressed: '1.0',
    CompressedAndAesCbc: '2.0',
};

let base = 0;
let baseTimestamp = 0;
function start$i() {
    base = performance.now();
    baseTimestamp = Date.now() + config.serverClientTimeDiff;
}
function elapsed(ts) {
    return Math.max(Math.round((ts || performance.now()) - base), 0);
}
function reset$j() {
    base = 0;
    baseTimestamp = 0;
}
function startTiming() {
    const start = performance.now();
    return {
        end() {
            return performance.now() - start;
        },
    };
}
const getBaseTime = () => baseTimestamp;
const getNow = () => Date.now() + config.serverClientTimeDiff;

const activeIds = new Set();
let id = 0;
function requestIdleCallback$$(cb, opt = { timeout: 5000 }) {
    id++;
    activeIds.add(id);
    _requestIdleCallback$$(id, cb, opt.timeout);
    return id;
}
function _requestIdleCallback$$(id, cb, timeout) {
    const start = getNow();
    setTimeout(() => {
        if (!activeIds.has(id))
            return;
        const elapsed = getNow() - start;
        if (elapsed < timeout && elapsed >= LONG_TASK_DURATION) {
            return _requestIdleCallback$$(id, cb, timeout - elapsed);
        }
        activeIds.delete(id);
        const remaining = elapsed >= timeout ? LONG_TASK_DURATION : LONG_TASK_DURATION - elapsed;
        const base = getNow();
        cb({
            didTimeout: elapsed >= timeout,
            timeRemaining() {
                return remaining - (getNow() - base);
            },
        });
    }, 0);
}
function cancelIdleCallback$$(id) {
    if (activeIds.has(id)) {
        activeIds.delete(id);
    }
}
const requestIdleCallback = window.requestIdleCallback || requestIdleCallback$$;
const cancelIdleCallback = window.cancelIdleCallback || cancelIdleCallback$$;

var MetricType;
(function (MetricType) {
    MetricType[MetricType["LayoutCost"] = 1] = "LayoutCost";
    MetricType[MetricType["EncryptCost"] = 2] = "EncryptCost";
    MetricType[MetricType["CompressCost"] = 3] = "CompressCost";
    MetricType[MetricType["UploadCosCost"] = 4] = "UploadCosCost";
    MetricType[MetricType["UploadWxCost"] = 5] = "UploadWxCost";
    MetricType[MetricType["TaskCost"] = 6] = "TaskCost";
    MetricType[MetricType["LongTaskCost"] = 7] = "LongTaskCost";
    MetricType[MetricType["WebCodeLoadCost"] = 8] = "WebCodeLoadCost";
    MetricType[MetricType["WebSetupCost"] = 9] = "WebSetupCost";
    MetricType[MetricType["FetchCosCost"] = 10] = "FetchCosCost";
    MetricType[MetricType["CompressV1Cost"] = 11] = "CompressV1Cost";
    MetricType[MetricType["CompressV2Cost"] = 12] = "CompressV2Cost";
    MetricType[MetricType["UploadCosCostWithWxData"] = 13] = "UploadCosCostWithWxData";
    MetricType[MetricType["UploadConsoleErrorTimeCost"] = 14] = "UploadConsoleErrorTimeCost";
    MetricType[MetricType["UploadRealtimeLogTimeCost"] = 15] = "UploadRealtimeLogTimeCost";
    MetricType[MetricType["WebviewEvent"] = 30] = "WebviewEvent";
    MetricType[MetricType["AppserviceEvent"] = 31] = "AppserviceEvent";
    MetricType[MetricType["Error"] = 32] = "Error";
    MetricType[MetricType["Unsupport"] = 33] = "Unsupport";
    MetricType[MetricType["Task"] = 34] = "Task";
    MetricType[MetricType["LongTask"] = 35] = "LongTask";
    MetricType[MetricType["CosInfoFetch"] = 37] = "CosInfoFetch";
    MetricType[MetricType["CosInfoRefetch"] = 38] = "CosInfoRefetch";
    MetricType[MetricType["UploadCosSucess"] = 39] = "UploadCosSucess";
    MetricType[MetricType["UploadCosFailure"] = 40] = "UploadCosFailure";
    MetricType[MetricType["UploadWxSucess"] = 41] = "UploadWxSucess";
    MetricType[MetricType["UploadWxFailure"] = 42] = "UploadWxFailure";
    MetricType[MetricType["AutoSetup"] = 43] = "AutoSetup";
    MetricType[MetricType["SdkSetup"] = 44] = "SdkSetup";
    MetricType[MetricType["MissSample"] = 45] = "MissSample";
    MetricType[MetricType["CosAppend"] = 46] = "CosAppend";
    MetricType[MetricType["CosPut"] = 47] = "CosPut";
    MetricType[MetricType["CosHead"] = 48] = "CosHead";
    MetricType[MetricType["CommonAssetMiss"] = 49] = "CommonAssetMiss";
    MetricType[MetricType["CommonAssetHit"] = 50] = "CommonAssetHit";
    MetricType[MetricType["DbClose"] = 51] = "DbClose";
    MetricType[MetricType["UploadCosExpired"] = 52] = "UploadCosExpired";
    MetricType[MetricType["Teardown"] = 53] = "Teardown";
    MetricType[MetricType["Resetup"] = 54] = "Resetup";
    MetricType[MetricType["CanvasCapture"] = 55] = "CanvasCapture";
    MetricType[MetricType["CosPost"] = 56] = "CosPost";
    MetricType[MetricType["CosPutWithWxData"] = 57] = "CosPutWithWxData";
    MetricType[MetricType["Status451"] = 58] = "Status451";
    MetricType[MetricType["ZstdCompressErr"] = 59] = "ZstdCompressErr";
    MetricType[MetricType["ZstdCompressExceedLoopQuota"] = 60] = "ZstdCompressExceedLoopQuota";
    MetricType[MetricType["CosHeadBackEnd"] = 61] = "CosHeadBackEnd";
    MetricType[MetricType["CosInfoMissing"] = 62] = "CosInfoMissing";
    MetricType[MetricType["GetAuxiliaryDomainInfo"] = 63] = "GetAuxiliaryDomainInfo";
    MetricType[MetricType["ParseAuxiliaryDomainInfo"] = 64] = "ParseAuxiliaryDomainInfo";
    MetricType[MetricType["CoslessMode"] = 65] = "CoslessMode";
    MetricType[MetricType["UploadCosSucessWithWxData"] = 66] = "UploadCosSucessWithWxData";
    MetricType[MetricType["UploadCosFailureWithWxData"] = 67] = "UploadCosFailureWithWxData";
    MetricType[MetricType["PublishDataToWebview"] = 68] = "PublishDataToWebview";
    MetricType[MetricType["ReceiveDataInWebview"] = 69] = "ReceiveDataInWebview";
    MetricType[MetricType["PackAppserviceDataIntoWebviewKvs"] = 70] = "PackAppserviceDataIntoWebviewKvs";
    MetricType[MetricType["WebviewHeartBeatTimeout"] = 71] = "WebviewHeartBeatTimeout";
    MetricType[MetricType["ReporterHeartBeatTimeout"] = 72] = "ReporterHeartBeatTimeout";
    MetricType[MetricType["ReporterChanged"] = 73] = "ReporterChanged";
    MetricType[MetricType["WebReporterSuspended"] = 74] = "WebReporterSuspended";
    MetricType[MetricType["WebReporterAliveButBeReplaced"] = 75] = "WebReporterAliveButBeReplaced";
    MetricType[MetricType["CustomizeBucketLifecycleListObjects"] = 76] = "CustomizeBucketLifecycleListObjects";
    MetricType[MetricType["CustomizeBucketLifecycleDeleteObjects"] = 77] = "CustomizeBucketLifecycleDeleteObjects";
    MetricType[MetricType["UnifiedReportSuccess"] = 78] = "UnifiedReportSuccess";
    MetricType[MetricType["UnifiedReportFailure"] = 79] = "UnifiedReportFailure";
    MetricType[MetricType["UnifiedReportWebviewSuccess"] = 1080] = "UnifiedReportWebviewSuccess";
    MetricType[MetricType["UnifiedReportWebviewFailure"] = 1081] = "UnifiedReportWebviewFailure";
    MetricType[MetricType["FetchCosInfoWithWXData"] = 1082] = "FetchCosInfoWithWXData";
    MetricType[MetricType["FetchCosInfoWithHTTPS"] = 1083] = "FetchCosInfoWithHTTPS";
    MetricType[MetricType["AutoSwitchToCosless"] = 1084] = "AutoSwitchToCosless";
    MetricType[MetricType["MaskSensitiveTextCount"] = 1090] = "MaskSensitiveTextCount";
    MetricType[MetricType["MaskSensitiveTextSlow"] = 1091] = "MaskSensitiveTextSlow";
    MetricType[MetricType["NetworkSuccess"] = 1100] = "NetworkSuccess";
    MetricType[MetricType["NetworkFail"] = 1101] = "NetworkFail";
    MetricType[MetricType["LegacySetupApi"] = 2099] = "LegacySetupApi";
    MetricType[MetricType["RealtimeLogSerializeError"] = 2100] = "RealtimeLogSerializeError";
    MetricType[MetricType["__DeprecatedUploadWxNetwork"] = 2101] = "__DeprecatedUploadWxNetwork";
    MetricType[MetricType["__DeprecatedUploadNetwork"] = 2101] = "__DeprecatedUploadNetwork";
    MetricType[MetricType["UploadWxCustomEvent"] = 2103] = "UploadWxCustomEvent";
    MetricType[MetricType["UploadCustomEvent"] = 2104] = "UploadCustomEvent";
    MetricType[MetricType["UploadWxRealtimeLog"] = 2105] = "UploadWxRealtimeLog";
    MetricType[MetricType["UploadRealtimeLog"] = 2106] = "UploadRealtimeLog";
    MetricType[MetricType["NetworkHandleError"] = 2107] = "NetworkHandleError";
    MetricType[MetricType["UploadWxReportEvent"] = 2108] = "UploadWxReportEvent";
    MetricType[MetricType["UploadReportEvent"] = 2109] = "UploadReportEvent";
    MetricType[MetricType["UploadWxNetwork"] = 2110] = "UploadWxNetwork";
    MetricType[MetricType["UploadNetwork"] = 2111] = "UploadNetwork";
    MetricType[MetricType["WebviewEventSaveFailed"] = 2112] = "WebviewEventSaveFailed";
    MetricType[MetricType["ConsoleErrorDrop"] = 2113] = "ConsoleErrorDrop";
    MetricType[MetricType["ConsoleErrorSerializeError"] = 2114] = "ConsoleErrorSerializeError";
    MetricType[MetricType["UploadWxSize"] = 80] = "UploadWxSize";
    MetricType[MetricType["UploadCosSize"] = 81] = "UploadCosSize";
    MetricType[MetricType["UploadCommonSize"] = 82] = "UploadCommonSize";
    MetricType[MetricType["HitCommonSize"] = 83] = "HitCommonSize";
    MetricType[MetricType["CanvasAllCaptureSize"] = 84] = "CanvasAllCaptureSize";
    MetricType[MetricType["CanvasUploadCaptureSize"] = 85] = "CanvasUploadCaptureSize";
    MetricType[MetricType["UploadCosSizeWithWxData"] = 86] = "UploadCosSizeWithWxData";
    MetricType[MetricType["PublishDataToWebviewSize"] = 87] = "PublishDataToWebviewSize";
    MetricType[MetricType["ReceiveDataInWebviewSize"] = 88] = "ReceiveDataInWebviewSize";
    MetricType[MetricType["ReportAppserviceDataInWebviewSize"] = 89] = "ReportAppserviceDataInWebviewSize";
    MetricType[MetricType["CustomizeBucketLifecycleDeleteObjectsSize"] = 90] = "CustomizeBucketLifecycleDeleteObjectsSize";
    MetricType[MetricType["UploadReportEventSize"] = 91] = "UploadReportEventSize";
    MetricType[MetricType["UploadRealtimeLogSize"] = 92] = "UploadRealtimeLogSize";
    MetricType[MetricType["UploadNetworkSize"] = 93] = "UploadNetworkSize";
    MetricType[MetricType["ServerClientTimeDiff"] = 94] = "ServerClientTimeDiff";
    MetricType[MetricType["UploadConsoleErrorSize"] = 95] = "UploadConsoleErrorSize";
    MetricType[MetricType["RegisterRefetchCosTokenFromExpire"] = 201] = "RegisterRefetchCosTokenFromExpire";
    MetricType[MetricType["TaskQueueDeadTaskDetected"] = 202] = "TaskQueueDeadTaskDetected";
    MetricType[MetricType["WebSnippetStart"] = 203] = "WebSnippetStart";
    MetricType[MetricType["WebSnippetEnd"] = 204] = "WebSnippetEnd";
    MetricType[MetricType["WebSnippetError"] = 205] = "WebSnippetError";
})(MetricType || (MetricType = {}));

function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
var root = freeGlobal || freeSelf || Function('return this')();

var now = function () {
  return root.Date.now();
};

var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index = string.length;
  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
}

var Symbol = root.Symbol;

var objectProto$1 = Object.prototype;
var hasOwnProperty = objectProto$1.hasOwnProperty;
var nativeObjectToString$1 = objectProto$1.toString;
var symToStringTag$1 = Symbol ? Symbol.toStringTag : undefined;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag$1),
    tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

var objectProto = Object.prototype;
var nativeObjectToString = objectProto.toString;
function objectToString(value) {
  return nativeObjectToString.call(value);
}

var nullTag = '[object Null]',
  undefinedTag = '[object Undefined]';
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

var symbolTag = '[object Symbol]';
function isSymbol(value) {
  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

var FUNC_ERROR_TEXT$1 = 'Expected a function';
var nativeMax = Math.max,
  nativeMin = Math.min;
function debounce(func, wait, options) {
  var lastArgs,
    lastThis,
    maxWait,
    result,
    timerId,
    lastCallTime,
    lastInvokeTime = 0,
    leading = false,
    maxing = false,
    trailing = true;
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs,
      thisArg = lastThis;
    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
      timeSinceLastInvoke = time - lastInvokeTime,
      timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
      timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = undefined;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }
  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }
  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }
  function debounced() {
    var time = now(),
      isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

var uaParser$1 = {exports: {}};

(function (module, exports) {
  (function (window, undefined$1) {
    var LIBVERSION = '1.0.40',
      EMPTY = '',
      UNKNOWN = '?',
      FUNC_TYPE = 'function',
      UNDEF_TYPE = 'undefined',
      OBJ_TYPE = 'object',
      STR_TYPE = 'string',
      MAJOR = 'major',
      MODEL = 'model',
      NAME = 'name',
      TYPE = 'type',
      VENDOR = 'vendor',
      VERSION = 'version',
      ARCHITECTURE = 'architecture',
      CONSOLE = 'console',
      MOBILE = 'mobile',
      TABLET = 'tablet',
      SMARTTV = 'smarttv',
      WEARABLE = 'wearable',
      EMBEDDED = 'embedded',
      UA_MAX_LENGTH = 500;
    var AMAZON = 'Amazon',
      APPLE = 'Apple',
      ASUS = 'ASUS',
      BLACKBERRY = 'BlackBerry',
      BROWSER = 'Browser',
      CHROME = 'Chrome',
      EDGE = 'Edge',
      FIREFOX = 'Firefox',
      GOOGLE = 'Google',
      HUAWEI = 'Huawei',
      LG = 'LG',
      MICROSOFT = 'Microsoft',
      MOTOROLA = 'Motorola',
      OPERA = 'Opera',
      SAMSUNG = 'Samsung',
      SHARP = 'Sharp',
      SONY = 'Sony',
      XIAOMI = 'Xiaomi',
      ZEBRA = 'Zebra',
      FACEBOOK = 'Facebook',
      CHROMIUM_OS = 'Chromium OS',
      MAC_OS = 'Mac OS',
      SUFFIX_BROWSER = ' Browser';
    var extend = function (regexes, extensions) {
        var mergedRegexes = {};
        for (var i in regexes) {
          if (extensions[i] && extensions[i].length % 2 === 0) {
            mergedRegexes[i] = extensions[i].concat(regexes[i]);
          } else {
            mergedRegexes[i] = regexes[i];
          }
        }
        return mergedRegexes;
      },
      enumerize = function (arr) {
        var enums = {};
        for (var i = 0; i < arr.length; i++) {
          enums[arr[i].toUpperCase()] = arr[i];
        }
        return enums;
      },
      has = function (str1, str2) {
        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;
      },
      lowerize = function (str) {
        return str.toLowerCase();
      },
      majorize = function (version) {
        return typeof version === STR_TYPE ? version.replace(/[^\d\.]/g, EMPTY).split('.')[0] : undefined$1;
      },
      trim = function (str, len) {
        if (typeof str === STR_TYPE) {
          str = str.replace(/^\s\s*/, EMPTY);
          return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);
        }
      };
    var rgxMapper = function (ua, arrays) {
        var i = 0,
          j,
          k,
          p,
          q,
          matches,
          match;
        while (i < arrays.length && !matches) {
          var regex = arrays[i],
            props = arrays[i + 1];
          j = k = 0;
          while (j < regex.length && !matches) {
            if (!regex[j]) {
              break;
            }
            matches = regex[j++].exec(ua);
            if (!!matches) {
              for (p = 0; p < props.length; p++) {
                match = matches[++k];
                q = props[p];
                if (typeof q === OBJ_TYPE && q.length > 0) {
                  if (q.length === 2) {
                    if (typeof q[1] == FUNC_TYPE) {
                      this[q[0]] = q[1].call(this, match);
                    } else {
                      this[q[0]] = q[1];
                    }
                  } else if (q.length === 3) {
                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {
                      this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined$1;
                    } else {
                      this[q[0]] = match ? match.replace(q[1], q[2]) : undefined$1;
                    }
                  } else if (q.length === 4) {
                    this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined$1;
                  }
                } else {
                  this[q] = match ? match : undefined$1;
                }
              }
            }
          }
          i += 2;
        }
      },
      strMapper = function (str, map) {
        for (var i in map) {
          if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {
            for (var j = 0; j < map[i].length; j++) {
              if (has(map[i][j], str)) {
                return i === UNKNOWN ? undefined$1 : i;
              }
            }
          } else if (has(map[i], str)) {
            return i === UNKNOWN ? undefined$1 : i;
          }
        }
        return map.hasOwnProperty('*') ? map['*'] : str;
      };
    var oldSafariMap = {
        '1.0': '/8',
        '1.2': '/1',
        '1.3': '/3',
        '2.0': '/412',
        '2.0.2': '/416',
        '2.0.3': '/417',
        '2.0.4': '/419',
        '?': '/'
      },
      windowsVersionMap = {
        'ME': '4.90',
        'NT 3.11': 'NT3.51',
        'NT 4.0': 'NT4.0',
        '2000': 'NT 5.0',
        'XP': ['NT 5.1', 'NT 5.2'],
        'Vista': 'NT 6.0',
        '7': 'NT 6.1',
        '8': 'NT 6.2',
        '8.1': 'NT 6.3',
        '10': ['NT 6.4', 'NT 10.0'],
        'RT': 'ARM'
      };
    var regexes = {
      browser: [[/\b(?:crmo|crios)\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Chrome']], [/edg(?:e|ios|a)?\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Edge']], [
      /(opera mini)\/([-\w\.]+)/i,
      /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
      /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
      ], [NAME, VERSION], [/opios[\/ ]+([\w\.]+)/i
      ], [VERSION, [NAME, OPERA + ' Mini']], [/\bop(?:rg)?x\/([\w\.]+)/i
      ], [VERSION, [NAME, OPERA + ' GX']], [/\bopr\/([\w\.]+)/i
      ], [VERSION, [NAME, OPERA]], [
      /\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i
      ], [VERSION, [NAME, 'Baidu']], [/\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i
      ], [VERSION, [NAME, 'Maxthon']], [/(kindle)\/([\w\.]+)/i,
      /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
      /(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,
      /(?:ms|\()(ie) ([\w\.]+)/i,
      /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\/([-\w\.]+)/i,
      /(heytap|ovi|115)browser\/([\d\.]+)/i,
      /(weibo)__([\d\.]+)/i
      ], [NAME, VERSION], [/quark(?:pc)?\/([-\w\.]+)/i
      ], [VERSION, [NAME, 'Quark']], [/\bddg\/([\w\.]+)/i
      ], [VERSION, [NAME, 'DuckDuckGo']], [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i
      ], [VERSION, [NAME, 'UC' + BROWSER]], [/microm.+\bqbcore\/([\w\.]+)/i,
      /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i
      ], [VERSION, [NAME, 'WeChat']], [/konqueror\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Konqueror']], [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i
      ], [VERSION, [NAME, 'IE']], [/ya(?:search)?browser\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Yandex']], [/slbrowser\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Smart Lenovo ' + BROWSER]], [/(avast|avg)\/([\w\.]+)/i
      ], [[NAME, /(.+)/, '$1 Secure ' + BROWSER], VERSION], [/\bfocus\/([\w\.]+)/i
      ], [VERSION, [NAME, FIREFOX + ' Focus']], [/\bopt\/([\w\.]+)/i
      ], [VERSION, [NAME, OPERA + ' Touch']], [/coc_coc\w+\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Coc Coc']], [/dolfin\/([\w\.]+)/i
      ], [VERSION, [NAME, 'Dolphin']], [/coast\/([\w\.]+)/i
      ], [VERSION, [NAME, OPERA + ' Coast']], [/miuibrowser\/([\w\.]+)/i
      ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [/fxios\/([\w\.-]+)/i
      ], [VERSION, [NAME, FIREFOX]], [/\bqihoobrowser\/?([\w\.]*)/i
      ], [VERSION, [NAME, '360']], [/\b(qq)\/([\w\.]+)/i
      ], [[NAME, /(.+)/, '$1Browser'], VERSION], [/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [
      /samsungbrowser\/([\w\.]+)/i
      ], [VERSION, [NAME, SAMSUNG + ' Internet']], [/metasr[\/ ]?([\d\.]+)/i
      ], [VERSION, [NAME, 'Sogou Explorer']], [/(sogou)mo\w+\/([\d\.]+)/i
      ], [[NAME, 'Sogou Mobile'], VERSION], [/(electron)\/([\w\.]+) safari/i,
      /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
      /m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i
      ], [NAME, VERSION], [/(lbbrowser|rekonq)/i,
      /\[(linkedin)app\]/i
      ], [NAME], [/ome\/([\w\.]+) \w* ?(iron) saf/i,
      /ome\/([\w\.]+).+qihu (360)[es]e/i
      ], [VERSION, NAME], [
      /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i
      ], [[NAME, FACEBOOK], VERSION], [/(Klarna)\/([\w\.]+)/i,
      /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
      /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
      /safari (line)\/([\w\.]+)/i,
      /\b(line)\/([\w\.]+)\/iab/i,
      /(alipay)client\/([\w\.]+)/i,
      /(twitter)(?:and| f.+e\/([\w\.]+))/i,
      /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i
      ], [NAME, VERSION], [/\bgsa\/([\w\.]+) .*safari\//i
      ], [VERSION, [NAME, 'GSA']], [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i
      ], [VERSION, [NAME, 'TikTok']], [/headlesschrome(?:\/([\w\.]+)| )/i
      ], [VERSION, [NAME, CHROME + ' Headless']], [/ wv\).+(chrome)\/([\w\.]+)/i
      ], [[NAME, CHROME + ' WebView'], VERSION], [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i
      ], [VERSION, [NAME, 'Android ' + BROWSER]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i
      ], [NAME, VERSION], [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i
      ], [VERSION, [NAME, 'Mobile Safari']], [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i
      ], [VERSION, NAME], [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i
      ], [NAME, [VERSION, strMapper, oldSafariMap]], [/(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [
      /(navigator|netscape\d?)\/([-\w\.]+)/i
      ], [[NAME, 'Netscape'], VERSION], [/(wolvic|librewolf)\/([\w\.]+)/i
      ], [NAME, VERSION], [/mobile vr; rv:([\w\.]+)\).+firefox/i
      ], [VERSION, [NAME, FIREFOX + ' Reality']], [/ekiohf.+(flow)\/([\w\.]+)/i,
      /(swiftfox)/i,
      /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
      /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
      /(firefox)\/([\w\.]+)/i,
      /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
      /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
      /(links) \(([\w\.]+)/i
      ], [NAME, [VERSION, /_/g, '.']], [/(cobalt)\/([\w\.]+)/i
      ], [NAME, [VERSION, /master.|lts./, ""]]],
      cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i
      ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i
      ], [[ARCHITECTURE, lowerize]], [/((?:i[346]|x)86)[;\)]/i
      ], [[ARCHITECTURE, 'ia32']], [/\b(aarch64|arm(v?8e?l?|_?64))\b/i
      ], [[ARCHITECTURE, 'arm64']], [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i
      ], [[ARCHITECTURE, 'armhf']], [
      /windows (ce|mobile); ppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i
      ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [/(sun4\w)[;\)]/i
      ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
      ], [[ARCHITECTURE, lowerize]]],
      device: [[
      /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [/\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]((?!sm-[lr])[-\w]+)/i, /sec-(sgh\w+)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [
      /(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i
      ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [/\((ipad);[-\w\),; ]+apple/i,
      /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [/(macintosh);/i], [MODEL, [VENDOR, APPLE]], [
      /\b(sh-?[altvz]?\d\d[a-ekm]?)/i], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [
      /(?:honor)([-\w ]+)[;\)]/i], [MODEL, [VENDOR, 'Honor'], [TYPE, MOBILE]], [
      /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [/(?:huawei)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [
      /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
      /\b; (\w+) build\/hm\1/i,
      /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
      /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
      /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
      /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i
      ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
      /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i
      ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [
      /; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [/\b(opd2\d{3}a?) bui/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [
      /vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [
      /\b(rmx[1-3]\d{3})(?: bui|;|\))/i], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [
      /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [/\b(mz60\d|xoom[2 ]{0,2}) build\//i], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [
      /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [
      /(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [
      /(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [
      /(pixel c)\b/i
      ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i
      ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [
      /droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [
      / (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [
      /(alexa)webm/i, /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
      /(kf[a-z]+)( bui|\)).+silk\//i
      ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i
      ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [
      /(playbook);[-\w\),; ]+(rim)/i
      ], [MODEL, VENDOR, [TYPE, TABLET]], [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i
      ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [
      /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [
      /(nexus 9)/i
      ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
      /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
      ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [
      /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [
      /(itel) ((\w+))/i], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, {
        'tablet': ['p10001l', 'w7001'],
        '*': 'mobile'
      }]], [
      /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [
      /droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [
      /; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [
      /; (energy ?\w+)(?: bui|\))/i, /; energizer ([\w ]+)(?: bui|\))/i], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [
      /; cat (b35);/i, /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [
      /((?:new )?andromax[\w- ]+)(?: bui|\))/i], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [
      /droid.+; (a(?:015|06[35]|142p?))/i], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [
      /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,
      /; (imo) ((?!tab)[\w ]+?)(?: bui|\))/i,
      /(hp) ([\w ]+\w)/i,
      /(asus)-?(\w+)/i,
      /(microsoft); (lumia[\w ]+)/i,
      /(lenovo)[-_ ]?([-\w]+)/i,
      /(jolla)/i,
      /(oppo) ?([\w ]+) bui/i
      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(imo) (tab \w+)/i,
      /(kobo)\s(ereader|touch)/i,
      /(archos) (gamepad2?)/i,
      /(hp).+(touchpad(?!.+tablet)|tablet)/i,
      /(kindle)\/([\w\.]+)/i,
      /(nook)[\w ]+build\/(\w+)/i,
      /(dell) (strea[kpr\d ]*[\dko])/i,
      /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
      /(trinity)[- ]*(t\d{3}) bui/i,
      /(gigaset)[- ]+(q\w{1,9}) bui/i,
      /(vodafone) ([\w ]+)(?:\)| bui)/i
      ], [VENDOR, MODEL, [TYPE, TABLET]], [/(surface duo)/i
      ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [/droid [\d\.]+; (fp\du?)(?: b|\))/i
      ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [/(u304aa)/i
      ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [/\bsie-(\w*)/i
      ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/\b(rct\w+) b/i
      ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/\b(venue[\d ]{2,7}) b/i
      ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/\b(q(?:mv|ta)\w+) b/i
      ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i
      ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [/\b(tm\d{3}\w+) b/i], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/\b(k88) b/i
      ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/\b(nx\d{3}j) b/i
      ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [/\b(gen\d{3}) b.+49h/i
      ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/\b(zur\d{3}) b/i
      ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/\b((zeki)?tb.*\b) b/i
      ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i
      ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/\b(ns-?\w{0,9}) b/i
      ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/\b((nxa|next)-?\w{0,9}) b/i
      ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i
      ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [/\b(lvtel\-)?(v1[12]) b/i
      ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/\b(ph-1) /i
      ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [/\b(v(100md|700na|7011|917g).*\b) b/i
      ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/\b(trio[-\w\. ]+) b/i
      ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/\btu_(1491) b/i
      ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/(shield[\w ]+) b/i
      ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [/(sprint) (\w+)/i
      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\.[onetw]{3})/i
      ], [[MODEL, /\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i
      ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [
      /smart-tv.+(samsung)/i
      ], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i
      ], [[VENDOR, LG], [TYPE, SMARTTV]], [/(apple) ?tv/i
      ], [VENDOR, [MODEL, APPLE + ' TV'], [TYPE, SMARTTV]], [/crkey/i
      ], [[MODEL, CHROME + 'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/droid.+aft(\w+)( bui|\))/i
      ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i
      ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]], [/(bravia[\w ]+)( bui|\))/i
      ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [/(mitv-\w{5}) bui/i
      ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [/Hbbtv.*(technisat) (.*);/i
      ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
      /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i
      ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i
      ], [[TYPE, SMARTTV]], [
      /(ouya)/i,
      /(nintendo) ([wids3utch]+)/i
      ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+; (shield) bui/i
      ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation [345portablevi]+)/i
      ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [/\b(xbox(?: one)?(?!; xbox))[\); ]/i
      ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [
      /\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i
      ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [/((pebble))app/i
      ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i
      ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [/droid.+; (glass) \d/i
      ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [/droid.+; (wt63?0{2,3})\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [
      /droid.+; (glass) \d/i
      ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [/(pico) (4|neo3(?: link|pro)?)/i
      ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/; (quest( \d| pro)?)/i
      ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [
      /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i
      ], [VENDOR, [TYPE, EMBEDDED]], [/(aeobc)\b/i
      ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [
      /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i
      ], [MODEL, [TYPE, MOBILE]], [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i
      ], [MODEL, [TYPE, TABLET]], [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i
      ], [[TYPE, TABLET]], [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i
      ], [[TYPE, MOBILE]], [/(android[-\w\. ]{0,9});.+buil/i
      ], [MODEL, [VENDOR, 'Generic']]],
      engine: [[/windows.+ edge\/([\w\.]+)/i
      ], [VERSION, [NAME, EDGE + 'HTML']], [/(arkweb)\/([\w\.]+)/i
      ], [NAME, VERSION], [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i
      ], [VERSION, [NAME, 'Blink']], [/(presto)\/([\w\.]+)/i,
      /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,
      /ekioh(flow)\/([\w\.]+)/i,
      /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
      /(icab)[\/ ]([23]\.[\d\.]+)/i,
      /\b(libweb)/i], [NAME, VERSION], [/rv\:([\w\.]{1,9})\b.+(gecko)/i
      ], [VERSION, NAME]],
      os: [[
      /microsoft (windows) (vista|xp)/i
      ], [NAME, VERSION], [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i
      ], [NAME, [VERSION, strMapper, windowsVersionMap]], [/windows nt 6\.2; (arm)/i,
      /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [
      /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
      /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i
      ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [
      /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i
      ], [VERSION, NAME], [
      /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i,
      /(tizen|kaios)[\/ ]([\w\.]+)/i,
      /\((series40);/i
      ], [NAME, VERSION], [/\(bb(10);/i
      ], [VERSION, [NAME, BLACKBERRY]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i
      ], [VERSION, [NAME, 'Symbian']], [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i
      ], [VERSION, [NAME, FIREFOX + ' OS']], [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i
      ], [VERSION, [NAME, 'webOS']], [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i
      ], [VERSION, [NAME, 'watchOS']], [
      /crkey\/([\d\.]+)/i
      ], [VERSION, [NAME, CHROME + 'cast']], [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i
      ], [[NAME, CHROMIUM_OS], VERSION], [
      /panasonic;(viera)/i,
      /(netrange)mmh/i,
      /(nettv)\/(\d+\.[\w\.]+)/i,
      /(nintendo|playstation) ([wids345portablevuch]+)/i,
      /(xbox); +xbox ([^\);]+)/i,
      /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
      /(mint)[\/\(\) ]?(\w*)/i,
      /(mageia|vectorlinux)[; ]/i,
      /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
      /(hurd|linux) ?([\w\.]*)/i,
      /(gnu) ?([\w\.]*)/i,
      /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
      /(haiku) (\w+)/i
      ], [NAME, VERSION], [/(sunos) ?([\w\.\d]*)/i
      ], [[NAME, 'Solaris'], VERSION], [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
      /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
      /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
      /(unix) ?([\w\.]*)/i
      ], [NAME, VERSION]]
    };
    var UAParser = function (ua, extensions) {
      if (typeof ua === OBJ_TYPE) {
        extensions = ua;
        ua = undefined$1;
      }
      if (!(this instanceof UAParser)) {
        return new UAParser(ua, extensions).getResult();
      }
      var _navigator = typeof window !== UNDEF_TYPE && window.navigator ? window.navigator : undefined$1;
      var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);
      var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined$1;
      var _rgxmap = extensions ? extend(regexes, extensions) : regexes;
      var _isSelfNav = _navigator && _navigator.userAgent == _ua;
      this.getBrowser = function () {
        var _browser = {};
        _browser[NAME] = undefined$1;
        _browser[VERSION] = undefined$1;
        rgxMapper.call(_browser, _ua, _rgxmap.browser);
        _browser[MAJOR] = majorize(_browser[VERSION]);
        if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {
          _browser[NAME] = 'Brave';
        }
        return _browser;
      };
      this.getCPU = function () {
        var _cpu = {};
        _cpu[ARCHITECTURE] = undefined$1;
        rgxMapper.call(_cpu, _ua, _rgxmap.cpu);
        return _cpu;
      };
      this.getDevice = function () {
        var _device = {};
        _device[VENDOR] = undefined$1;
        _device[MODEL] = undefined$1;
        _device[TYPE] = undefined$1;
        rgxMapper.call(_device, _ua, _rgxmap.device);
        if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {
          _device[TYPE] = MOBILE;
        }
        if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {
          _device[MODEL] = 'iPad';
          _device[TYPE] = TABLET;
        }
        return _device;
      };
      this.getEngine = function () {
        var _engine = {};
        _engine[NAME] = undefined$1;
        _engine[VERSION] = undefined$1;
        rgxMapper.call(_engine, _ua, _rgxmap.engine);
        return _engine;
      };
      this.getOS = function () {
        var _os = {};
        _os[NAME] = undefined$1;
        _os[VERSION] = undefined$1;
        rgxMapper.call(_os, _ua, _rgxmap.os);
        if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {
          _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS);
        }
        return _os;
      };
      this.getResult = function () {
        return {
          ua: this.getUA(),
          browser: this.getBrowser(),
          engine: this.getEngine(),
          os: this.getOS(),
          device: this.getDevice(),
          cpu: this.getCPU()
        };
      };
      this.getUA = function () {
        return _ua;
      };
      this.setUA = function (ua) {
        _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;
        return this;
      };
      this.setUA(_ua);
      return this;
    };
    UAParser.VERSION = LIBVERSION;
    UAParser.BROWSER = enumerize([NAME, VERSION, MAJOR]);
    UAParser.CPU = enumerize([ARCHITECTURE]);
    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);
    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);
    {
      if (module.exports) {
        exports = module.exports = UAParser;
      }
      exports.UAParser = UAParser;
    }
    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);
    if ($ && !$.ua) {
      var parser = new UAParser();
      $.ua = parser.getResult();
      $.ua.get = function () {
        return parser.getUA();
      };
      $.ua.set = function (ua) {
        parser.setUA(ua);
        var result = parser.getResult();
        for (var prop in result) {
          $.ua[prop] = result[prop];
        }
      };
    }
  })(typeof window === 'object' ? window : commonjsGlobal);
})(uaParser$1, uaParser$1.exports);
var UAParser = uaParser$1.exports;

const uaParser = new UAParser(navigator.userAgent);
const osInfo = uaParser.getOS();
async function uploadSubvisionToWx(data) {
    try {
        await fetch('https://servicewechat.com/ob/sdkmonitor', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-wx-ob-env': "miniprogram" === 'web' ? 'web' : 'webview',
                'x-wx-ob-sdkversion': config.sdkVersion || '',
                'x-wx-ob-pack-version': PACK_VERSION.Raw,
                'x-wx-ob-project-key': config.projectId,
            },
            body: data,
        });
    }
    catch (e) {
    }
}

const DEBOUNCE_INTERVAL$4 = 3000;
const DEBOUNCE_MAX_WAIT$3 = 5000;
const LowPriorityMetrics = new Set([MetricType.Task]);
const metrics = {};
let updates = {};
let dataPoints = [];
let logPoints = [];
let debouncedReport = debounce(report, DEBOUNCE_INTERVAL$4, { maxWait: DEBOUNCE_MAX_WAIT$3 });
function count(metric) {
    sum(metric, 1);
}
function log(metric, extra) {
    logPoints.push({ metric, extra });
}
function sum(metric, value) {
    if (!(metric in metrics))
        metrics[metric] = 0;
    if (!(metric in updates))
        updates[metric] = 0;
    metrics[metric] += value;
    updates[metric] += value;
    if (!LowPriorityMetrics.has(metric))
        debouncedReport();
}
function addDataPoint(metric, value) {
    dataPoints.push({ metric, value });
}
function report() {
    if (Object.keys(updates).length === 0)
        return;
    const { version, updateTime } = window.__libVersionInfo__ ?? {};
    const sdkVersion = version ? `${version} (${updateTime})` : config.sdkVersion;
    const items = Object.keys(updates).map(key => ({
        session_id: config.uuid,
        sdk_version: sdkVersion,
        metric_type: Number(key),
        metric_value: Math.round(updates[Number(key)]),
        os_name: osInfo.name,
        os_version: osInfo.version,
        extral_info: '',
    }));
    items.push(...dataPoints.map(({ metric, value }) => ({
        session_id: config.uuid,
        sdk_version: sdkVersion,
        metric_type: metric,
        metric_value: Math.round(value),
        os_name: osInfo.name,
        os_version: osInfo.version,
        extral_info: '',
    })));
    items.push(...logPoints.map(({ metric, extra }) => ({
        session_id: config.uuid,
        sdk_version: sdkVersion,
        metric_type: metric,
        metric_value: 1,
        os_name: osInfo.name,
        os_version: osInfo.version,
        extral_info: extra,
    })));
    uploadSubvisionToWx(JSON.stringify({
        report_items: items,
    }));
    updates = {};
    dataPoints = [];
    logPoints = [];
}

var TaskSignal;
(function (TaskSignal) {
    TaskSignal[TaskSignal["Yield"] = 0] = "Yield";
    TaskSignal[TaskSignal["Done"] = 1] = "Done";
})(TaskSignal || (TaskSignal = {}));
var Priority;
(function (Priority) {
    Priority[Priority["High"] = 0] = "High";
    Priority[Priority["Normal"] = 1] = "Normal";
})(Priority || (Priority = {}));
const FAKE_INFINITY = 1000;
const DEAD_TASK_THRESHOLD = 20 * 1000;
const DEAD_TASK_MONITOR_INTERVAL = 5 * 1000;
let deadTaskTimeoutId;
const taskIds = new Map();
let queues = [[], []];
let callStack = [];
let randomTaskIdNum = 1;
let runningTask;
let idleCallbackId;
function start$h() {
    setupDeadTaskMonitor();
}
function reset$i() {
    taskIds.clear();
    queues = [[], []];
    callStack = [];
    runningTask = undefined;
    clearTimeout(deadTaskTimeoutId);
}
function schedule(task) {
    if (task.id && taskIds.has(task.id)) {
        const t = taskIds.get(task.id);
        return t.public;
    }
    let resolve;
    let reject;
    const promise = new Promise((rs, rj) => {
        resolve = rs;
        reject = rj;
    });
    count(MetricType.Task);
    const innerTask = {
        ...task,
        id: task.id || `a:${randomTaskIdNum++}`,
        priority: task.priority ?? Priority.Normal,
        promise,
        resolve,
        reject,
        slices: 1,
        totalTime: 0,
        public: undefined,
        state: {
            startTs: 0,
            budget: LONG_TASK_DURATION,
        },
    };
    const publicTask = getPublicTask(innerTask.id, innerTask.promise);
    innerTask.public = publicTask;
    queues[innerTask.priority].push(innerTask);
    taskIds.set(innerTask.id, innerTask);
    if (callStack.length)
        return publicTask;
    if (queues[Priority.High].length) {
        runTaskLoop();
    }
    else {
        runTaskLoop(false);
    }
    return publicTask;
}
function runTaskLoop(now = true, budget = LONG_TASK_DURATION) {
    if (now) {
        if (idleCallbackId) {
            cancelIdleCallback(idleCallbackId);
            idleCallbackId = 0;
        }
        if (callStack.length) {
            const task = callStack[callStack.length - 1];
            runTask(task, budget);
        }
        else {
            for (const queue of queues) {
                if (queue.length > 0) {
                    const task = queue.shift();
                    callStack.push(task);
                    runTaskLoop(true, budget);
                    return;
                }
            }
        }
    }
    else if (config.sync) {
        runTaskLoop(true, FAKE_INFINITY);
    }
    else if (idleCallbackId) {
        return;
    }
    else {
        idleCallbackId = requestIdleCallback(deadline => {
            idleCallbackId = 0;
            runTaskLoop(true, deadline.timeRemaining());
        }, {
            timeout: 5000,
        });
    }
}
function runTask(task, budget) {
    runningTask = task;
    task.state.startTs = getNow();
    if (!task.onDone) {
        task.public.shouldYield = () => {
            const cost = getNow() - task.state.startTs;
            return task.state.budget - cost <= 0;
        };
        task.onYield = (taskId) => {
            runningTask = undefined;
            const cost = getNow() - task.state.startTs;
            task.totalTime += cost;
            const newBudget = task.state.budget - cost;
            const p = (task.paused = new Promise(r => (task.resume = r)));
            if (taskId) {
                const called = taskIds.get(taskId);
                if (!called)
                    throw new Error(`[tel] publicTask.call task not found`);
                queues[called.priority].splice(queues[called.priority].indexOf(called), 1);
                callStack.push(called);
                runTaskLoop(true, newBudget);
                return p.then(() => called.promise);
            }
            else {
                if (newBudget > 0) {
                    runTaskLoop(true, newBudget);
                    return p;
                }
                else {
                    task.slices++;
                    runTaskLoop(false);
                    return p;
                }
            }
        };
        const onEnd = (err, result) => {
            runningTask = undefined;
            const cost = getNow() - task.state.startTs;
            task.totalTime += cost;
            const newBudget = task.state.budget - cost;
            if (task.id) {
                taskIds.delete(task.id);
            }
            const poppedTask = callStack.pop();
            if (poppedTask !== task) {
                throw new Error('[tel] taskqueue: postRunTask popped task is not the finished task');
            }
            task.result = result;
            if (err) {
                task.reject(err);
            }
            else {
                task.resolve({
                    result,
                    totalTime: task.totalTime,
                    slices: task.slices,
                });
            }
            if (newBudget > 0) {
                runTaskLoop(true, newBudget);
            }
            else {
                runTaskLoop(false);
            }
        };
        task.onDone = result => {
            onEnd(null, result);
        };
        task.onCall = taskId => {
            return task.onYield(taskId);
        };
        try {
            const ret = task.fn(task.public);
            if (ret?.catch) {
                const p = ret;
                p.catch(err => {
                    wxConsole.warn(`[tel] runTask async err`, err);
                    onEnd(err, undefined);
                });
            }
        }
        catch (err) {
            wxConsole.warn(`[tel] runTask sync err`, err);
            onEnd(err, undefined);
        }
    }
    else if (task.resume) {
        task.state.budget = budget;
        task.resume();
        task.resume = undefined;
        task.paused = undefined;
    }
    else {
        wxConsole.error('[tel] runTask: inited and not paused');
    }
}
function getPublicTask(id, promise) {
    const publicTask = {
        id,
        promise,
        shouldYield() {
            return false;
        },
        yield() {
            return taskIds.get(id)?.onYield?.();
        },
        call(taskId) {
            return taskIds.get(id)?.onCall?.(taskId);
        },
        done(result) {
            return taskIds.get(id)?.onDone?.(result);
        },
    };
    return publicTask;
}
function removeDeadTask() {
    if (!config.enabledFeatures.removeDeadTask)
        return false;
    if (!runningTask)
        return false;
    if (runningTask.totalTime + getNow() - runningTask.state.startTs > DEAD_TASK_THRESHOLD) {
        const ind = callStack.indexOf(runningTask);
        if (ind > -1) {
            callStack.splice(ind, 1);
        }
        for (const queue of queues) {
            const ind = queue.indexOf(runningTask);
            if (ind > -1) {
                queue.splice(ind, 1);
                break;
            }
        }
        log(MetricType.TaskQueueDeadTaskDetected, `${runningTask.id};${runningTask.slices}`);
        wxConsole.error(`[tel] dead task detected ${runningTask.id} ${runningTask.slices}. task detail: `, runningTask);
        runningTask = undefined;
        return true;
    }
    return false;
}
function setupDeadTaskMonitor() {
    if (!config.enabledFeatures.removeDeadTask)
        return;
    deadTaskTimeoutId = setTimeout(() => {
        const hasDeadTask = removeDeadTask();
        if (hasDeadTask) {
            runTaskLoop();
        }
        setupDeadTaskMonitor();
    }, DEAD_TASK_MONITOR_INTERVAL);
}
window.__tel_inspect_task__ = {
    taskIds,
    queues,
    callStack,
    get runningTask() {
        return runningTask;
    },
    get idleCallbackId() {
        return idleCallbackId;
    },
};

var FUNC_ERROR_TEXT = 'Expected a function';
function throttle(func, wait, options) {
  var leading = true,
    trailing = true;
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

var ErrorType;
(function (ErrorType) {
    ErrorType[ErrorType["Setup"] = 1] = "Setup";
    ErrorType[ErrorType["AppserviceStart"] = 2] = "AppserviceStart";
    ErrorType[ErrorType["WebviewStart"] = 3] = "WebviewStart";
    ErrorType[ErrorType["AppserviceCollect"] = 4] = "AppserviceCollect";
    ErrorType[ErrorType["WebviewCollect"] = 5] = "WebviewCollect";
    ErrorType[ErrorType["AppserviceEncode"] = 6] = "AppserviceEncode";
    ErrorType[ErrorType["WebviewEncode"] = 7] = "WebviewEncode";
    ErrorType[ErrorType["AppserviceReport"] = 8] = "AppserviceReport";
    ErrorType[ErrorType["WebviewReportCos"] = 9] = "WebviewReportCos";
    ErrorType[ErrorType["WebviewClean"] = 10] = "WebviewClean";
    ErrorType[ErrorType["WebviewReportWx"] = 11] = "WebviewReportWx";
    ErrorType[ErrorType["WebviewReport"] = 12] = "WebviewReport";
    ErrorType[ErrorType["AppserviceReportCos"] = 13] = "AppserviceReportCos";
    ErrorType[ErrorType["AppserviceReportWx"] = 14] = "AppserviceReportWx";
    ErrorType[ErrorType["CommonUploadError"] = 15] = "CommonUploadError";
    ErrorType[ErrorType["AppserviceTeardown"] = 16] = "AppserviceTeardown";
    ErrorType[ErrorType["TeardownApi"] = 17] = "TeardownApi";
    ErrorType[ErrorType["WebviewTeardown"] = 18] = "WebviewTeardown";
    ErrorType[ErrorType["Resetup"] = 19] = "Resetup";
    ErrorType[ErrorType["CollectWxImage"] = 20] = "CollectWxImage";
    ErrorType[ErrorType["CollectImage"] = 21] = "CollectImage";
    ErrorType[ErrorType["RefreshCos"] = 22] = "RefreshCos";
    ErrorType[ErrorType["PruneEvents"] = 23] = "PruneEvents";
    ErrorType[ErrorType["CosFetch"] = 24] = "CosFetch";
    ErrorType[ErrorType["GetAuxiliaryDomainInfo"] = 25] = "GetAuxiliaryDomainInfo";
    ErrorType[ErrorType["AppserviceReportCosWithWxData"] = 26] = "AppserviceReportCosWithWxData";
    ErrorType[ErrorType["WebviewReportCosWithWxData"] = 27] = "WebviewReportCosWithWxData";
    ErrorType[ErrorType["ObjectStoreError"] = 28] = "ObjectStoreError";
    ErrorType[ErrorType["FetchCosByWxDataError"] = 29] = "FetchCosByWxDataError";
    ErrorType[ErrorType["InvalidCustomDomain"] = 30] = "InvalidCustomDomain";
    ErrorType[ErrorType["CompressError"] = 31] = "CompressError";
    ErrorType[ErrorType["SaveEventError"] = 32] = "SaveEventError";
    ErrorType[ErrorType["SaveIndividualEventError"] = 33] = "SaveIndividualEventError";
    ErrorType[ErrorType["Debug"] = 1000] = "Debug";
})(ErrorType || (ErrorType = {}));

const DATABASE_NAME_PREFIX = 'TEL';
const EVENT_OBJECT_STORAGE_NAME = 'EVENT';
const META_OBJECT_STORAGE_NAME = 'META';
const ASSET_OBJECT_STORAGE_NAME = 'ASSET';
const MEMO_OBJECT_STORAGE_NAME = 'MEMO';
const APPSERVICE_OBJECT_STORAGE_NAME = 'APPSERVICE';
var CommonAssetStatus;
(function (CommonAssetStatus) {
    CommonAssetStatus["Unknown"] = "0";
    CommonAssetStatus["Uploaded"] = "1";
})(CommonAssetStatus || (CommonAssetStatus = {}));
let memoryEvents = [];
class EventStorage {
    db = null;
    pendingEvents = [];
    pendingAppservicePacked = [];
    uuid;
    webviewId;
    path;
    sdkVersion;
    constructor(uuid, webviewId, path, sdkVersion) {
        this.uuid = uuid;
        this.webviewId = webviewId;
        this.path = path;
        this.sdkVersion = sdkVersion;
        const dbName = `${DATABASE_NAME_PREFIX}_${window.__appId__ || config.projectId}_${sdkVersion}`;
        const _theThis = this;
        async function setDb() {
            wxConsole.log(`[tel] ${dbName} set db`);
            const request = indexedDB.open(dbName, 9);
            request.onsuccess = e => {
                _theThis.db = request.result;
                wxConsole.log(`[tel] ${dbName} opened`);
                _theThis.saveEvents(_theThis.pendingEvents);
                _theThis.pendingEvents = [];
                _theThis.savePackedAppserviceData(_theThis.pendingAppservicePacked);
                _theThis.pendingAppservicePacked = [];
                _theThis.pruneEvents();
                _theThis.db.addEventListener('close', () => {
                    wxConsole.log(`[tel] ${dbName} closed`);
                    count(MetricType.DbClose);
                    _theThis.db = null;
                    setDb();
                });
            };
            request.onupgradeneeded = e => {
                const db = request.result;
                const transaction = e.target.transaction;
                if (!db.objectStoreNames.contains(EVENT_OBJECT_STORAGE_NAME)) {
                    const store = db.createObjectStore(EVENT_OBJECT_STORAGE_NAME, {
                        keyPath: 'id',
                        autoIncrement: true,
                    });
                    store.createIndex('uuid-webviewId', 'index', { unique: false });
                }
                if (!db.objectStoreNames.contains(META_OBJECT_STORAGE_NAME)) {
                    const store = db.createObjectStore(META_OBJECT_STORAGE_NAME);
                    store.createIndex('type', 'type', { unique: false });
                }
                let assetStore;
                if (!db.objectStoreNames.contains(ASSET_OBJECT_STORAGE_NAME)) {
                    assetStore = db.createObjectStore(ASSET_OBJECT_STORAGE_NAME);
                    assetStore.createIndex('name', 'name', { unique: true });
                    assetStore.createIndex('status', 'status', { unique: false });
                }
                else {
                    assetStore = transaction.objectStore(ASSET_OBJECT_STORAGE_NAME);
                }
                if (!assetStore.indexNames.contains('status')) {
                    assetStore.createIndex('status', 'status', { unique: false });
                }
                let memoStore;
                if (!db.objectStoreNames.contains(MEMO_OBJECT_STORAGE_NAME)) {
                    memoStore = db.createObjectStore(MEMO_OBJECT_STORAGE_NAME, {
                        keyPath: 'id',
                        autoIncrement: true,
                    });
                    memoStore.createIndex('uuid', 'uuid', { unique: false });
                }
                if (!db.objectStoreNames.contains(APPSERVICE_OBJECT_STORAGE_NAME)) {
                    const appserviceStore = db.createObjectStore(APPSERVICE_OBJECT_STORAGE_NAME, {
                        keyPath: 'id',
                        autoIncrement: true,
                    });
                    appserviceStore.createIndex('uuid', 'uuid', { unique: false });
                    appserviceStore.createIndex('packedUuid', 'packedUuid', { unique: true });
                }
                transaction.oncomplete = () => {
                    wxConsole.log(`[tel] store upgrade done`);
                };
            };
            request.onerror = e => {
                wxConsole.error(`[tel] open store failed: `, e);
            };
        }
        setDb();
    }
    saveEvents = (events) => {
        if (this.db === null) {
            this.pendingEvents = [...this.pendingEvents, ...events];
        }
        else {
            const dataToStore = {
                events,
                index: genUuidWebviewIdIndex(this.uuid, this.webviewId),
                webviewId: this.webviewId,
                uuid: this.uuid,
                path: this.path,
                query: config.query ?? {},
                weSessionId: config.weSessionId ?? '',
                sessionLifeTimeMeta: config.wesessionMeta,
                ts: getNow(),
            };
            memoryEvents.push(dataToStore);
            const request = this.objectStore(EVENT_OBJECT_STORAGE_NAME).add(dataToStore);
            request.onerror = function (event) {
                wxConsole.log('[tel] idb save fail', event);
            };
        }
    };
    savePackedAppserviceData = async (data) => {
        if (this.db === null) {
            this.pendingAppservicePacked = [...this.pendingAppservicePacked, ...data];
        }
        else {
            const transaction = this.db.transaction([APPSERVICE_OBJECT_STORAGE_NAME], 'readwrite');
            const objectStore = transaction.objectStore(APPSERVICE_OBJECT_STORAGE_NAME);
            for (const item of data) {
                const dataToStore = {
                    data: item.data,
                    metadata: item.metadata,
                    packedUuid: uuidv4(),
                    uuid: this.uuid,
                    ts: getNow(),
                    ack: item.ack,
                };
                wxConsole.log(`[tel] save appservice packed data`, dataToStore);
                const request = objectStore.add(dataToStore);
                await this.$(request);
            }
        }
    };
    getAllEvents = async () => {
        await this.dbInited();
        popMemoryEvents();
        return this.$(this.objectStore(EVENT_OBJECT_STORAGE_NAME).getAll());
    };
    getCurrentSessionPackedAppserviceData = async () => {
        await this.dbInited();
        return this.$(this.objectStore(APPSERVICE_OBJECT_STORAGE_NAME).index('uuid').getAll(IDBKeyRange.only(config.uuid)));
    };
    removePackedAppserviceDataByPackedUuids = async (ids) => {
        await this.dbInited();
        const objectStore = this.objectStore(APPSERVICE_OBJECT_STORAGE_NAME);
        for (const id of ids) {
            await this.$(objectStore.delete(id));
            wxConsole.log(`[tel] remove appservice packed data ${id}`);
        }
    };
    clearEventsUntil = async (id) => {
        await this.dbInited();
        const query = IDBKeyRange.upperBound(id);
        const p = this.$(this.objectStore(EVENT_OBJECT_STORAGE_NAME).delete(query));
        p.then(() => {
            wxConsole.log(`[tel] clear <= ${id} event in indexedDB`);
        });
        return p;
    };
    async getWebviewReportMeta() {
        await this.dbInited();
        return this.$(this.objectStore(META_OBJECT_STORAGE_NAME).index('type').get(IDBKeyRange.only('webview')));
    }
    async updateWebviewReportMeta(meta) {
        await this.dbInited();
        return this.$(this.objectStore(META_OBJECT_STORAGE_NAME).put(meta, 'webview'));
    }
    async getDictMeta() {
        await this.dbInited();
        return this.$(this.objectStore(META_OBJECT_STORAGE_NAME).index('type').get(IDBKeyRange.only('dict')));
    }
    async updateDictMeta(meta) {
        await this.dbInited();
        return this.$(this.objectStore(META_OBJECT_STORAGE_NAME).put(meta, 'dict'));
    }
    async existsCommonAsset(name) {
        await this.dbInited();
        return this.$(this.objectStore(ASSET_OBJECT_STORAGE_NAME).index('name').count(IDBKeyRange.only(name))).then(n => n > 0);
    }
    async saveCommonAsset(asset, check = false) {
        if (check) {
            const exists = await this.existsCommonAsset(asset.name);
            if (exists)
                return;
        }
        await this.dbInited();
        await this.$(this.objectStore(ASSET_OBJECT_STORAGE_NAME).put(asset, asset.name));
    }
    async getCommonAssetsByStatus(status) {
        await this.dbInited();
        return this.$(this.objectStore(ASSET_OBJECT_STORAGE_NAME).index('status').getAll(IDBKeyRange.only(status)));
    }
    async clearCommonAssets() {
        await this.dbInited();
        return this.$(this.objectStore(ASSET_OBJECT_STORAGE_NAME).clear());
    }
    async saveSessionReusableMemo(events) {
        await this.dbInited();
        const dataToStore = {
            events,
            index: '',
            webviewId: this.webviewId,
            uuid: this.uuid,
            path: this.path,
            query: config.query ?? {},
            weSessionId: config.weSessionId ?? '',
            sessionLifeTimeMeta: config.wesessionMeta,
            ts: getNow(),
        };
        return this.$(this.objectStore(MEMO_OBJECT_STORAGE_NAME).add(dataToStore));
    }
    async getCurrentSessionReusableMemos() {
        await this.dbInited();
        return this.$(this.objectStore(MEMO_OBJECT_STORAGE_NAME).index('uuid').getAll(IDBKeyRange.only(config.uuid)));
    }
    dbInited = () => new Promise(resolve => {
        let task;
        const checkDb = () => {
            if (this.db) {
                clearInterval(task);
                resolve(true);
            }
        };
        task = setInterval(checkDb, 100);
        checkDb();
    });
    async pruneEvents() {
        try {
            const dbNamePrefix = `${DATABASE_NAME_PREFIX}_${window.__appId__ || config.projectId}_`;
            const dbNames = (await indexedDB.databases?.()) ?? [`${dbNamePrefix}${this.sdkVersion}`];
            const dbNamesToDelete = dbNames.filter(dbName => dbName.name?.startsWith(dbNamePrefix) && dbName.name !== this.db?.name);
            for (const dbName of dbNamesToDelete) {
                if (!dbName.name)
                    continue;
                wxConsole.log(`[tel] prune db ${dbName.name}`);
                await this.$(indexedDB.deleteDatabase(dbName.name));
            }
            const uuid = config.uuid;
            const transaction = this.db?.transaction([EVENT_OBJECT_STORAGE_NAME], 'readwrite');
            const objectStore = transaction?.objectStore(EVENT_OBJECT_STORAGE_NAME);
            const request = objectStore?.openCursor();
            if (request) {
                request.onsuccess = e => {
                    const cursor = e.target.result;
                    if (cursor) {
                        const record = cursor.value;
                        if (record.uuid !== uuid) {
                            cursor.delete();
                        }
                        cursor.continue();
                    }
                };
            }
            const appserviceTransaction = this.db?.transaction([APPSERVICE_OBJECT_STORAGE_NAME], 'readwrite');
            const appserviceObjectStore = appserviceTransaction?.objectStore(APPSERVICE_OBJECT_STORAGE_NAME);
            const appserviceRequest = appserviceObjectStore?.openCursor();
            if (appserviceRequest) {
                appserviceRequest.onsuccess = e => {
                    const cursor = e.target.result;
                    if (cursor) {
                        const record = cursor.value;
                        if (record.uuid !== uuid) {
                            cursor.delete();
                        }
                        cursor.continue();
                    }
                };
            }
        }
        catch (e) {
            handleError({
                type: ErrorType.PruneEvents,
                e,
            });
        }
    }
    objectStore(name) {
        try {
            return this.db.transaction([name], 'readwrite').objectStore(name);
        }
        catch (e) {
            handleError({
                type: ErrorType.ObjectStoreError,
                extra: `name: ${name}`,
                e,
            });
            throw e;
        }
    }
    $(request) {
        return new Promise((resolve, reject) => {
            request.onsuccess = () => resolve(request.result);
            request.onerror = reject;
        });
    }
}
function genUuidWebviewIdIndex(uuid, webviewId) {
    return `${uuid}_${webviewId}`;
}
let storage;
function getStorage(uuid) {
    if (!uuid)
        throw new Error('uuid is required');
    if (!config.sdkVersion)
        throw new Error('sdkVersion is required');
    if (!storage) {
        storage = new EventStorage(uuid, window.__webviewId__, document.body.getAttribute('is') || '', config.sdkVersion);
    }
    return storage;
}
function clearStorage() {
    storage = null;
    memoryEvents = [];
}
function popMemoryEvents() {
    const events = memoryEvents;
    memoryEvents = [];
    return events;
}
function handleCosInfoChange(cosInfo) {
    if (!cosInfo)
        return;
    const localCache = localStorage.getItem(`wxobs_cos_key`);
    if (!localCache) {
        localStorage.setItem(`wxobs_cos_key`, `${cosInfo.region}/${cosInfo.bucket}`);
    }
    else if (localCache !== `${cosInfo.region}/${cosInfo.bucket}`) {
        wxConsole.log('[tel] cos info changed, clear local common assets');
        localStorage.setItem(`wxobs_cos_key`, `${cosInfo.region}/${cosInfo.bucket}`);
        getStorage(config.uuid).clearCommonAssets();
    }
}
window.__tel__s = {
    get storage() {
        return storage;
    },
};
window.__tel__s_clear = () => {
    storage?.clearCommonAssets();
};

var MutationType;
(function (MutationType) {
    MutationType[MutationType["ChildList"] = 1] = "ChildList";
    MutationType[MutationType["Attributes"] = 2] = "Attributes";
    MutationType[MutationType["CharacterData"] = 3] = "CharacterData";
    MutationType[MutationType["Properties"] = 4] = "Properties";
    MutationType[MutationType["Dimension"] = 5] = "Dimension";
    MutationType[MutationType["Canvas"] = 6] = "Canvas";
    MutationType[MutationType["Video"] = 7] = "Video";
    MutationType[MutationType["StyleSheets"] = 8] = "StyleSheets";
    MutationType[MutationType["ConstructedStyleSheets"] = 9] = "ConstructedStyleSheets";
})(MutationType || (MutationType = {}));
var VideoEventType;
(function (VideoEventType) {
    VideoEventType[VideoEventType["onVideoPlay"] = 0] = "onVideoPlay";
    VideoEventType[VideoEventType["onVideoPause"] = 1] = "onVideoPause";
    VideoEventType[VideoEventType["onVideoSeekCompelete"] = 2] = "onVideoSeekCompelete";
    VideoEventType[VideoEventType["onVideoTimeUpdate"] = 3] = "onVideoTimeUpdate";
})(VideoEventType || (VideoEventType = {}));
var UIEnv;
(function (UIEnv) {
    UIEnv[UIEnv["DOM"] = 1] = "DOM";
    UIEnv[UIEnv["Exparser"] = 2] = "Exparser";
})(UIEnv || (UIEnv = {}));
var ExparserNodeType;
(function (ExparserNodeType) {
    ExparserNodeType[ExparserNodeType["Element"] = 1] = "Element";
    ExparserNodeType[ExparserNodeType["Component"] = 2] = "Component";
    ExparserNodeType[ExparserNodeType["NativeNode"] = 3] = "NativeNode";
    ExparserNodeType[ExparserNodeType["VirtualNode"] = 4] = "VirtualNode";
    ExparserNodeType[ExparserNodeType["TextNode"] = 5] = "TextNode";
    ExparserNodeType[ExparserNodeType["Unknown"] = 6] = "Unknown";
})(ExparserNodeType || (ExparserNodeType = {}));
var ExparserCompPropType;
(function (ExparserCompPropType) {
    ExparserCompPropType[ExparserCompPropType["String"] = 1] = "String";
    ExparserCompPropType[ExparserCompPropType["Number"] = 2] = "Number";
    ExparserCompPropType[ExparserCompPropType["Boolean"] = 3] = "Boolean";
    ExparserCompPropType[ExparserCompPropType["JSON"] = 4] = "JSON";
    ExparserCompPropType[ExparserCompPropType["Null"] = 5] = "Null";
    ExparserCompPropType[ExparserCompPropType["Undefined"] = 6] = "Undefined";
})(ExparserCompPropType || (ExparserCompPropType = {}));

const CSSProps = {
    'align-content': 1,
    'align-items': 2,
    'align-self': 3,
    animation: 4,
    'animation-delay': 5,
    'animation-duration': 6,
    'animation-play-state': 7,
    background: 8,
    'background-color': 9,
    'background-image': 10,
    'background-position': 11,
    'background-repeat': 12,
    'background-size': 13,
    border: 14,
    'border-bottom': 15,
    'border-color': 16,
    'border-image': 17,
    'border-left': 18,
    'border-radius': 19,
    'border-right': 20,
    'border-spacing': 21,
    'border-style': 22,
    'border-top': 23,
    'border-width': 24,
    bottom: 25,
    'box-shadow': 26,
    'box-sizing': 27,
    clear: 28,
    clip: 29,
    color: 30,
    cursor: 31,
    direction: 32,
    display: 33,
    filter: 34,
    flex: 35,
    'flex-basis': 36,
    'flex-direction': 37,
    'flex-flow': 38,
    'flex-grow': 39,
    'flex-shrink': 40,
    'flex-wrap': 41,
    float: 42,
    font: 43,
    'font-family': 44,
    'font-size': 45,
    'font-style': 46,
    'font-weight': 47,
    grid: 48,
    'grid-area': 49,
    'grid-auto-columns': 50,
    'grid-auto-flow': 51,
    'grid-auto-rows': 52,
    'grid-column': 53,
    'grid-row': 54,
    'grid-template': 55,
    height: 56,
    'justify-content': 57,
    left: 58,
    'letter-spacing': 59,
    'line-height': 60,
    'list-style': 61,
    margin: 62,
    'margin-bottom': 63,
    'margin-left': 64,
    'margin-right': 65,
    'margin-top': 66,
    'max-height': 67,
    'max-width': 68,
    'min-height': 69,
    'min-width': 70,
    opacity: 71,
    order: 72,
    outline: 73,
    'outline-color': 74,
    'outline-offset': 75,
    'outline-style': 76,
    'outline-width': 77,
    overflow: 78,
    'overflow-x': 79,
    'overflow-y': 80,
    padding: 81,
    'padding-bottom': 82,
    'padding-left': 83,
    'padding-right': 84,
    'padding-top': 85,
    'pointer-events': 86,
    position: 87,
    right: 88,
    'table-layout': 89,
    'text-align': 90,
    'text-decoration': 91,
    'text-indent': 92,
    'text-overflow': 93,
    'text-shadow': 94,
    'text-transform': 95,
    top: 96,
    transform: 97,
    transition: 98,
    'transition-delay': 99,
    'transition-duration': 100,
    'transition-property': 101,
    'user-select': 102,
    'vertical-align': 103,
    visibility: 104,
    'white-space': 105,
    width: 106,
    'word-break': 107,
    'word-spacing': 108,
    'word-wrap': 109,
    'z-index': 110,
};
const CSSPropsReverse = [];
for (const key in CSSProps) {
    CSSPropsReverse[CSSProps[key]] = key;
}

var EventType;
(function (EventType) {
    EventType[EventType["TouchStart"] = 1] = "TouchStart";
    EventType[EventType["TouchMove"] = 2] = "TouchMove";
    EventType[EventType["TouchEnd"] = 3] = "TouchEnd";
    EventType[EventType["TouchCancel"] = 4] = "TouchCancel";
    EventType[EventType["MouseDown"] = 5] = "MouseDown";
    EventType[EventType["MouseMove"] = 6] = "MouseMove";
    EventType[EventType["MouseUp"] = 7] = "MouseUp";
    EventType[EventType["Tap"] = 8] = "Tap";
    EventType[EventType["LongTap"] = 9] = "LongTap";
    EventType[EventType["Click"] = 10] = "Click";
    EventType[EventType["DoubleClick"] = 11] = "DoubleClick";
    EventType[EventType["ContextMenu"] = 12] = "ContextMenu";
    EventType[EventType["Scroll"] = 13] = "Scroll";
    EventType[EventType["Selection"] = 14] = "Selection";
    EventType[EventType["Resize"] = 15] = "Resize";
    EventType[EventType["WxInput"] = 16] = "WxInput";
    EventType[EventType["VisibilityChange"] = 17] = "VisibilityChange";
    EventType[EventType["Routing"] = 18] = "Routing";
    EventType[EventType["InputChange"] = 19] = "InputChange";
    EventType[EventType["InitDOM"] = 20] = "InitDOM";
    EventType[EventType["Mutation"] = 21] = "Mutation";
    EventType[EventType["AppserviceCanvas"] = 22] = "AppserviceCanvas";
    EventType[EventType["DevCodeInfo"] = 23] = "DevCodeInfo";
    EventType[EventType["ComponentEvent"] = 24] = "ComponentEvent";
    EventType[EventType["Perf"] = 30] = "Perf";
    EventType[EventType["Error"] = 31] = "Error";
    EventType[EventType["Log"] = 32] = "Log";
    EventType[EventType["Env"] = 40] = "Env";
    EventType[EventType["WindowState"] = 41] = "WindowState";
    EventType[EventType["Config"] = 42] = "Config";
    EventType[EventType["CusttomAttr"] = 43] = "CusttomAttr";
    EventType[EventType["Memo"] = 44] = "Memo";
    EventType[EventType["StayTime"] = 50] = "StayTime";
    EventType[EventType["Copy"] = 80] = "Copy";
    EventType[EventType["Paste"] = 81] = "Paste";
    EventType[EventType["Cut"] = 82] = "Cut";
    EventType[EventType["Depth"] = 83] = "Depth";
    EventType[EventType["EleExposure"] = 84] = "EleExposure";
    EventType[EventType["EleUnExposure"] = 85] = "EleUnExposure";
    EventType[EventType["CommonDeps"] = 86] = "CommonDeps";
    EventType[EventType["CustomEvent"] = 88] = "CustomEvent";
    EventType[EventType["UiReaction"] = 89] = "UiReaction";
    EventType[EventType["PrivateConfig"] = 90] = "PrivateConfig";
    EventType[EventType["NetworkAPI"] = 110] = "NetworkAPI";
    EventType[EventType["ConsoleError"] = 111] = "ConsoleError";
    EventType[EventType["ConsoleWarn"] = 112] = "ConsoleWarn";
    EventType[EventType["RTLogError"] = 113] = "RTLogError";
    EventType[EventType["RTLogWarn"] = 114] = "RTLogWarn";
    EventType[EventType["PerfAPI"] = 115] = "PerfAPI";
    EventType[EventType["NetworkWeak"] = 116] = "NetworkWeak";
    EventType[EventType["NetworkStatus"] = 117] = "NetworkStatus";
    EventType[EventType["FirstExposure"] = 118] = "FirstExposure";
    EventType[EventType["WebNetwork"] = 119] = "WebNetwork";
    EventType[EventType["InformationAmount"] = 122] = "InformationAmount";
    EventType[EventType["SimpleRepetitiveEvent"] = 130] = "SimpleRepetitiveEvent";
    EventType[EventType["ConsecutiveRepetitiveEvent"] = 131] = "ConsecutiveRepetitiveEvent";
})(EventType || (EventType = {}));
var ReportEnvType;
(function (ReportEnvType) {
    ReportEnvType[ReportEnvType["Appservice"] = 1] = "Appservice";
    ReportEnvType[ReportEnvType["Webview"] = 2] = "Webview";
})(ReportEnvType || (ReportEnvType = {}));
var MemoDomain;
(function (MemoDomain) {
    MemoDomain[MemoDomain["Is"] = 1] = "Is";
    MemoDomain[MemoDomain["Tag"] = 2] = "Tag";
    MemoDomain[MemoDomain["Classname"] = 3] = "Classname";
    MemoDomain[MemoDomain["NodeAttrKey"] = 4] = "NodeAttrKey";
    MemoDomain[MemoDomain["NodeAttrValue"] = 5] = "NodeAttrValue";
    MemoDomain[MemoDomain["CSSProperty"] = 6] = "CSSProperty";
    MemoDomain[MemoDomain["CSSPropertyValue"] = 7] = "CSSPropertyValue";
    MemoDomain[MemoDomain["CompProperty"] = 8] = "CompProperty";
    MemoDomain[MemoDomain["NodeValue"] = 9] = "NodeValue";
    MemoDomain[MemoDomain["CompPropertyValue"] = 10] = "CompPropertyValue";
    MemoDomain[MemoDomain["ExpNodeValue"] = 11] = "ExpNodeValue";
    MemoDomain[MemoDomain["TapHandlerName"] = 12] = "TapHandlerName";
})(MemoDomain || (MemoDomain = {}));
var RouteType;
(function (RouteType) {
    RouteType[RouteType["Init"] = 0] = "Init";
    RouteType[RouteType["PushState"] = 1] = "PushState";
    RouteType[RouteType["ReplaceState"] = 2] = "ReplaceState";
    RouteType[RouteType["PopState"] = 3] = "PopState";
})(RouteType || (RouteType = {}));
var IWxInputType;
(function (IWxInputType) {
    IWxInputType[IWxInputType["Change"] = 0] = "Change";
    IWxInputType[IWxInputType["Focus"] = 1] = "Focus";
    IWxInputType[IWxInputType["Blur"] = 2] = "Blur";
})(IWxInputType || (IWxInputType = {}));
var WxComponentEventNumType;
(function (WxComponentEventNumType) {
    WxComponentEventNumType[WxComponentEventNumType["load"] = 1] = "load";
    WxComponentEventNumType[WxComponentEventNumType["error"] = 2] = "error";
})(WxComponentEventNumType || (WxComponentEventNumType = {}));

const VERSION_LENGTH$2 = 2;
const KEY_META_LENGTH$1 = 4;
const VALUE_META_LENGTH$2 = 4;
function decode$1(binary) {
    const dv = new DataView(binary.buffer);
    const version = dv.getInt16(0);
    if (version === 1) {
        return decodeV1$1(binary);
    }
    else {
        throw new Error(`unknown version`);
    }
}
function decodeV1$1(binary) {
    const kvs = [];
    let offset = VERSION_LENGTH$2;
    while (offset < binary.length) {
        const keyLen = new DataView(binary.buffer, offset, KEY_META_LENGTH$1).getInt32(0);
        offset += KEY_META_LENGTH$1;
        const key = Utf8ArrayToStr(binary.subarray(offset, offset + keyLen));
        offset += keyLen;
        const valueLen = new DataView(binary.buffer, offset, VALUE_META_LENGTH$2).getInt32(0);
        offset += VALUE_META_LENGTH$2;
        const value = binary.subarray(offset, offset + valueLen);
        offset += valueLen;
        kvs.push({
            key,
            value,
        });
    }
    return kvs;
}
const Utf8ArrayToStr = (function () {
    const charCache = new Array(128);
    const charFromCodePt = String.fromCodePoint || String.fromCharCode;
    const result = [];
    return function (array) {
        let codePt, byte1;
        const buffLen = array.length;
        result.length = 0;
        for (let i = 0; i < buffLen;) {
            byte1 = array[i++];
            if (byte1 <= 0x7f) {
                codePt = byte1;
            }
            else if (byte1 <= 0xdf) {
                codePt = ((byte1 & 0x1f) << 6) | (array[i++] & 0x3f);
            }
            else if (byte1 <= 0xef) {
                codePt = ((byte1 & 0x0f) << 12) | ((array[i++] & 0x3f) << 6) | (array[i++] & 0x3f);
            }
            else if (String.fromCodePoint) {
                codePt = ((byte1 & 0x07) << 18) | ((array[i++] & 0x3f) << 12) | ((array[i++] & 0x3f) << 6) | (array[i++] & 0x3f);
            }
            else {
                codePt = 63;
                i += 3;
            }
            result.push(charCache[codePt] || (charCache[codePt] = charFromCodePt(codePt)));
        }
        return result.join('');
    };
})();

const VERSION_LENGTH$1 = 1;
const VALUE_META_LENGTH$1 = 4;
function decode(binary) {
    const dv = new DataView(binary.buffer);
    const version = dv.getUint8(0);
    if (version === 1) {
        return decodeV1(binary);
    }
    else {
        throw new Error(`unknown version`);
    }
}
function decodeV1(binary) {
    const buffers = [];
    let offset = VERSION_LENGTH$1;
    while (offset < binary.length) {
        const itemLen = new DataView(binary.buffer, offset, VALUE_META_LENGTH$1).getInt32(0);
        offset += VALUE_META_LENGTH$1;
        const value = binary.subarray(offset, offset + itemLen);
        offset += itemLen;
        buffers.push(value);
    }
    return buffers;
}

var u8 = Uint8Array,
  u16 = Uint16Array,
  u32 = Uint32Array;
var fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]);
var fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]);
var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
var freb = function (eb, start) {
  var b = new u16(31);
  for (var i = 0; i < 31; ++i) {
    b[i] = start += 1 << eb[i - 1];
  }
  var r = new u32(b[30]);
  for (var i = 1; i < 30; ++i) {
    for (var j = b[i]; j < b[i + 1]; ++j) {
      r[j] = j - b[i] << 5 | i;
    }
  }
  return [b, r];
};
var _a = freb(fleb, 2),
  fl = _a[0],
  revfl = _a[1];
fl[28] = 258, revfl[258] = 28;
var _b = freb(fdeb, 0),
  fd = _b[0],
  revfd = _b[1];
var rev = new u16(32768);
for (var i$1 = 0; i$1 < 32768; ++i$1) {
  var x$1 = (i$1 & 0xAAAA) >>> 1 | (i$1 & 0x5555) << 1;
  x$1 = (x$1 & 0xCCCC) >>> 2 | (x$1 & 0x3333) << 2;
  x$1 = (x$1 & 0xF0F0) >>> 4 | (x$1 & 0x0F0F) << 4;
  rev[i$1] = ((x$1 & 0xFF00) >>> 8 | (x$1 & 0x00FF) << 8) >>> 1;
}
var hMap = function (cd, mb, r) {
  var s = cd.length;
  var i = 0;
  var l = new u16(mb);
  for (; i < s; ++i) {
    if (cd[i]) ++l[cd[i] - 1];
  }
  var le = new u16(mb);
  for (i = 0; i < mb; ++i) {
    le[i] = le[i - 1] + l[i - 1] << 1;
  }
  var co;
  if (r) {
    co = new u16(1 << mb);
    var rvb = 15 - mb;
    for (i = 0; i < s; ++i) {
      if (cd[i]) {
        var sv = i << 4 | cd[i];
        var r_1 = mb - cd[i];
        var v = le[cd[i] - 1]++ << r_1;
        for (var m = v | (1 << r_1) - 1; v <= m; ++v) {
          co[rev[v] >>> rvb] = sv;
        }
      }
    }
  } else {
    co = new u16(s);
    for (i = 0; i < s; ++i) {
      if (cd[i]) {
        co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];
      }
    }
  }
  return co;
};
var flt = new u8(288);
for (var i$1 = 0; i$1 < 144; ++i$1) flt[i$1] = 8;
for (var i$1 = 144; i$1 < 256; ++i$1) flt[i$1] = 9;
for (var i$1 = 256; i$1 < 280; ++i$1) flt[i$1] = 7;
for (var i$1 = 280; i$1 < 288; ++i$1) flt[i$1] = 8;
var fdt = new u8(32);
for (var i$1 = 0; i$1 < 32; ++i$1) fdt[i$1] = 5;
var flm = hMap(flt, 9, 0),
  flrm = hMap(flt, 9, 1);
var fdm = hMap(fdt, 5, 0),
  fdrm = hMap(fdt, 5, 1);
var max = function (a) {
  var m = a[0];
  for (var i = 1; i < a.length; ++i) {
    if (a[i] > m) m = a[i];
  }
  return m;
};
var bits = function (d, p, m) {
  var o = p / 8 | 0;
  return (d[o] | d[o + 1] << 8) >> (p & 7) & m;
};
var bits16 = function (d, p) {
  var o = p / 8 | 0;
  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);
};
var shft = function (p) {
  return (p + 7) / 8 | 0;
};
var slc = function (v, s, e) {
  if (s == null || s < 0) s = 0;
  if (e == null || e > v.length) e = v.length;
  var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);
  n.set(v.subarray(s, e));
  return n;
};
var ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',, 'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data'
];
var err = function (ind, msg, nt) {
  var e = new Error(msg || ec[ind]);
  e.code = ind;
  if (Error.captureStackTrace) Error.captureStackTrace(e, err);
  if (!nt) throw e;
  return e;
};
var inflt = function (dat, buf, st) {
  var sl = dat.length;
  if (!sl || st && st.f && !st.l) return buf || new u8(0);
  var noBuf = !buf || st;
  var noSt = !st || st.i;
  if (!st) st = {};
  if (!buf) buf = new u8(sl * 3);
  var cbuf = function (l) {
    var bl = buf.length;
    if (l > bl) {
      var nbuf = new u8(Math.max(bl * 2, l));
      nbuf.set(buf);
      buf = nbuf;
    }
  };
  var final = st.f || 0,
    pos = st.p || 0,
    bt = st.b || 0,
    lm = st.l,
    dm = st.d,
    lbt = st.m,
    dbt = st.n;
  var tbts = sl * 8;
  do {
    if (!lm) {
      final = bits(dat, pos, 1);
      var type = bits(dat, pos + 1, 3);
      pos += 3;
      if (!type) {
        var s = shft(pos) + 4,
          l = dat[s - 4] | dat[s - 3] << 8,
          t = s + l;
        if (t > sl) {
          if (noSt) err(0);
          break;
        }
        if (noBuf) cbuf(bt + l);
        buf.set(dat.subarray(s, t), bt);
        st.b = bt += l, st.p = pos = t * 8, st.f = final;
        continue;
      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {
        var hLit = bits(dat, pos, 31) + 257,
          hcLen = bits(dat, pos + 10, 15) + 4;
        var tl = hLit + bits(dat, pos + 5, 31) + 1;
        pos += 14;
        var ldt = new u8(tl);
        var clt = new u8(19);
        for (var i = 0; i < hcLen; ++i) {
          clt[clim[i]] = bits(dat, pos + i * 3, 7);
        }
        pos += hcLen * 3;
        var clb = max(clt),
          clbmsk = (1 << clb) - 1;
        var clm = hMap(clt, clb, 1);
        for (var i = 0; i < tl;) {
          var r = clm[bits(dat, pos, clbmsk)];
          pos += r & 15;
          var s = r >>> 4;
          if (s < 16) {
            ldt[i++] = s;
          } else {
            var c = 0,
              n = 0;
            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;
            while (n--) ldt[i++] = c;
          }
        }
        var lt = ldt.subarray(0, hLit),
          dt = ldt.subarray(hLit);
        lbt = max(lt);
        dbt = max(dt);
        lm = hMap(lt, lbt, 1);
        dm = hMap(dt, dbt, 1);
      } else err(1);
      if (pos > tbts) {
        if (noSt) err(0);
        break;
      }
    }
    if (noBuf) cbuf(bt + 131072);
    var lms = (1 << lbt) - 1,
      dms = (1 << dbt) - 1;
    var lpos = pos;
    for (;; lpos = pos) {
      var c = lm[bits16(dat, pos) & lms],
        sym = c >>> 4;
      pos += c & 15;
      if (pos > tbts) {
        if (noSt) err(0);
        break;
      }
      if (!c) err(2);
      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {
        lpos = pos, lm = null;
        break;
      } else {
        var add = sym - 254;
        if (sym > 264) {
          var i = sym - 257,
            b = fleb[i];
          add = bits(dat, pos, (1 << b) - 1) + fl[i];
          pos += b;
        }
        var d = dm[bits16(dat, pos) & dms],
          dsym = d >>> 4;
        if (!d) err(3);
        pos += d & 15;
        var dt = fd[dsym];
        if (dsym > 3) {
          var b = fdeb[dsym];
          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
        }
        if (pos > tbts) {
          if (noSt) err(0);
          break;
        }
        if (noBuf) cbuf(bt + 131072);
        var end = bt + add;
        for (; bt < end; bt += 4) {
          buf[bt] = buf[bt - dt];
          buf[bt + 1] = buf[bt + 1 - dt];
          buf[bt + 2] = buf[bt + 2 - dt];
          buf[bt + 3] = buf[bt + 3 - dt];
        }
        bt = end;
      }
    }
    st.l = lm, st.p = lpos, st.b = bt, st.f = final;
    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
  } while (!final);
  return bt == buf.length ? buf : slc(buf, 0, bt);
};
var wbits = function (d, p, v) {
  v <<= p & 7;
  var o = p / 8 | 0;
  d[o] |= v;
  d[o + 1] |= v >>> 8;
};
var wbits16 = function (d, p, v) {
  v <<= p & 7;
  var o = p / 8 | 0;
  d[o] |= v;
  d[o + 1] |= v >>> 8;
  d[o + 2] |= v >>> 16;
};
var hTree = function (d, mb) {
  var t = [];
  for (var i = 0; i < d.length; ++i) {
    if (d[i]) t.push({
      s: i,
      f: d[i]
    });
  }
  var s = t.length;
  var t2 = t.slice();
  if (!s) return [et$1, 0];
  if (s == 1) {
    var v = new u8(t[0].s + 1);
    v[t[0].s] = 1;
    return [v, 1];
  }
  t.sort(function (a, b) {
    return a.f - b.f;
  });
  t.push({
    s: -1,
    f: 25001
  });
  var l = t[0],
    r = t[1],
    i0 = 0,
    i1 = 1,
    i2 = 2;
  t[0] = {
    s: -1,
    f: l.f + r.f,
    l: l,
    r: r
  };
  while (i1 != s - 1) {
    l = t[t[i0].f < t[i2].f ? i0++ : i2++];
    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];
    t[i1++] = {
      s: -1,
      f: l.f + r.f,
      l: l,
      r: r
    };
  }
  var maxSym = t2[0].s;
  for (var i = 1; i < s; ++i) {
    if (t2[i].s > maxSym) maxSym = t2[i].s;
  }
  var tr = new u16(maxSym + 1);
  var mbt = ln(t[i1 - 1], tr, 0);
  if (mbt > mb) {
    var i = 0,
      dt = 0;
    var lft = mbt - mb,
      cst = 1 << lft;
    t2.sort(function (a, b) {
      return tr[b.s] - tr[a.s] || a.f - b.f;
    });
    for (; i < s; ++i) {
      var i2_1 = t2[i].s;
      if (tr[i2_1] > mb) {
        dt += cst - (1 << mbt - tr[i2_1]);
        tr[i2_1] = mb;
      } else break;
    }
    dt >>>= lft;
    while (dt > 0) {
      var i2_2 = t2[i].s;
      if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;else ++i;
    }
    for (; i >= 0 && dt; --i) {
      var i2_3 = t2[i].s;
      if (tr[i2_3] == mb) {
        --tr[i2_3];
        ++dt;
      }
    }
    mbt = mb;
  }
  return [new u8(tr), mbt];
};
var ln = function (n, l, d) {
  return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;
};
var lc = function (c) {
  var s = c.length;
  while (s && !c[--s]);
  var cl = new u16(++s);
  var cli = 0,
    cln = c[0],
    cls = 1;
  var w = function (v) {
    cl[cli++] = v;
  };
  for (var i = 1; i <= s; ++i) {
    if (c[i] == cln && i != s) ++cls;else {
      if (!cln && cls > 2) {
        for (; cls > 138; cls -= 138) w(32754);
        if (cls > 2) {
          w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);
          cls = 0;
        }
      } else if (cls > 3) {
        w(cln), --cls;
        for (; cls > 6; cls -= 6) w(8304);
        if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;
      }
      while (cls--) w(cln);
      cls = 1;
      cln = c[i];
    }
  }
  return [cl.subarray(0, cli), s];
};
var clen = function (cf, cl) {
  var l = 0;
  for (var i = 0; i < cl.length; ++i) l += cf[i] * cl[i];
  return l;
};
var wfblk = function (out, pos, dat) {
  var s = dat.length;
  var o = shft(pos + 2);
  out[o] = s & 255;
  out[o + 1] = s >>> 8;
  out[o + 2] = out[o] ^ 255;
  out[o + 3] = out[o + 1] ^ 255;
  for (var i = 0; i < s; ++i) out[o + i + 4] = dat[i];
  return (o + 4 + s) * 8;
};
var wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {
  wbits(out, p++, final);
  ++lf[256];
  var _a = hTree(lf, 15),
    dlt = _a[0],
    mlb = _a[1];
  var _b = hTree(df, 15),
    ddt = _b[0],
    mdb = _b[1];
  var _c = lc(dlt),
    lclt = _c[0],
    nlc = _c[1];
  var _d = lc(ddt),
    lcdt = _d[0],
    ndc = _d[1];
  var lcfreq = new u16(19);
  for (var i = 0; i < lclt.length; ++i) lcfreq[lclt[i] & 31]++;
  for (var i = 0; i < lcdt.length; ++i) lcfreq[lcdt[i] & 31]++;
  var _e = hTree(lcfreq, 7),
    lct = _e[0],
    mlcb = _e[1];
  var nlcc = 19;
  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);
  var flen = bl + 5 << 3;
  var ftlen = clen(lf, flt) + clen(df, fdt) + eb;
  var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);
  if (flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));
  var lm, ll, dm, dl;
  wbits(out, p, 1 + (dtlen < ftlen)), p += 2;
  if (dtlen < ftlen) {
    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;
    var llm = hMap(lct, mlcb, 0);
    wbits(out, p, nlc - 257);
    wbits(out, p + 5, ndc - 1);
    wbits(out, p + 10, nlcc - 4);
    p += 14;
    for (var i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);
    p += 3 * nlcc;
    var lcts = [lclt, lcdt];
    for (var it = 0; it < 2; ++it) {
      var clct = lcts[it];
      for (var i = 0; i < clct.length; ++i) {
        var len = clct[i] & 31;
        wbits(out, p, llm[len]), p += lct[len];
        if (len > 15) wbits(out, p, clct[i] >>> 5 & 127), p += clct[i] >>> 12;
      }
    }
  } else {
    lm = flm, ll = flt, dm = fdm, dl = fdt;
  }
  for (var i = 0; i < li; ++i) {
    if (syms[i] > 255) {
      var len = syms[i] >>> 18 & 31;
      wbits16(out, p, lm[len + 257]), p += ll[len + 257];
      if (len > 7) wbits(out, p, syms[i] >>> 23 & 31), p += fleb[len];
      var dst = syms[i] & 31;
      wbits16(out, p, dm[dst]), p += dl[dst];
      if (dst > 3) wbits16(out, p, syms[i] >>> 5 & 8191), p += fdeb[dst];
    } else {
      wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];
    }
  }
  wbits16(out, p, lm[256]);
  return p + ll[256];
};
var deo = new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);
var et$1 = new u8(0);
var dflt = function (dat, lvl, plvl, pre, post, lst) {
  var s = dat.length;
  var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);
  var w = o.subarray(pre, o.length - post);
  var pos = 0;
  if (!lvl || s < 8) {
    for (var i = 0; i <= s; i += 65535) {
      var e = i + 65535;
      if (e >= s) {
        w[pos >> 3] = lst;
      }
      pos = wfblk(w, pos + 1, dat.subarray(i, e));
    }
  } else {
    var opt = deo[lvl - 1];
    var n = opt >>> 13,
      c = opt & 8191;
    var msk_1 = (1 << plvl) - 1;
    var prev = new u16(32768),
      head = new u16(msk_1 + 1);
    var bs1_1 = Math.ceil(plvl / 3),
      bs2_1 = 2 * bs1_1;
    var hsh = function (i) {
      return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;
    };
    var syms = new u32(25000);
    var lf = new u16(288),
      df = new u16(32);
    var lc_1 = 0,
      eb = 0,
      i = 0,
      li = 0,
      wi = 0,
      bs = 0;
    for (; i < s; ++i) {
      var hv = hsh(i);
      var imod = i & 32767,
        pimod = head[hv];
      prev[imod] = pimod;
      head[hv] = imod;
      if (wi <= i) {
        var rem = s - i;
        if ((lc_1 > 7000 || li > 24576) && rem > 423) {
          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);
          li = lc_1 = eb = 0, bs = i;
          for (var j = 0; j < 286; ++j) lf[j] = 0;
          for (var j = 0; j < 30; ++j) df[j] = 0;
        }
        var l = 2,
          d = 0,
          ch_1 = c,
          dif = imod - pimod & 32767;
        if (rem > 2 && hv == hsh(i - dif)) {
          var maxn = Math.min(n, rem) - 1;
          var maxd = Math.min(32767, i);
          var ml = Math.min(258, rem);
          while (dif <= maxd && --ch_1 && imod != pimod) {
            if (dat[i + l] == dat[i + l - dif]) {
              var nl = 0;
              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);
              if (nl > l) {
                l = nl, d = dif;
                if (nl > maxn) break;
                var mmd = Math.min(dif, nl - 2);
                var md = 0;
                for (var j = 0; j < mmd; ++j) {
                  var ti = i - dif + j + 32768 & 32767;
                  var pti = prev[ti];
                  var cd = ti - pti + 32768 & 32767;
                  if (cd > md) md = cd, pimod = ti;
                }
              }
            }
            imod = pimod, pimod = prev[imod];
            dif += imod - pimod + 32768 & 32767;
          }
        }
        if (d) {
          syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];
          var lin = revfl[l] & 31,
            din = revfd[d] & 31;
          eb += fleb[lin] + fdeb[din];
          ++lf[257 + lin];
          ++df[din];
          wi = i + l;
          ++lc_1;
        } else {
          syms[li++] = dat[i];
          ++lf[dat[i]];
        }
      }
    }
    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);
    if (!lst && pos & 7) pos = wfblk(w, pos + 1, et$1);
  }
  return slc(o, 0, pre + shft(pos) + post);
};
(function () {
  var t = new Int32Array(256);
  for (var i = 0; i < 256; ++i) {
    var c = i,
      k = 9;
    while (--k) c = (c & 1 && -306674912) ^ c >>> 1;
    t[i] = c;
  }
  return t;
})();
var adler = function () {
  var a = 1,
    b = 0;
  return {
    p: function (d) {
      var n = a,
        m = b;
      var l = d.length | 0;
      for (var i = 0; i != l;) {
        var e = Math.min(i + 2655, l);
        for (; i < e; ++i) m += n += d[i];
        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);
      }
      a = n, b = m;
    },
    d: function () {
      a %= 65521, b %= 65521;
      return (a & 255) << 24 | a >>> 8 << 16 | (b & 255) << 8 | b >>> 8;
    }
  };
};
var dopt = function (dat, opt, pre, post, st) {
  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 12 + opt.mem, pre, post, !st);
};
var wbytes = function (d, b, v) {
  for (; v; ++b) d[b] = v, v >>>= 8;
};
var zlh = function (c, o) {
  var lv = o.level,
    fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;
  c[0] = 120, c[1] = fl << 6 | (fl ? 32 - 2 * fl : 1);
};
var zlv = function (d) {
  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');
  if (d[1] & 32) err(6, 'invalid zlib data: preset dictionaries not supported');
};
function zlibSync(data, opts) {
  if (!opts) opts = {};
  var a = adler();
  a.p(data);
  var d = dopt(data, opts, 2, 4);
  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;
}
function unzlibSync(data, out) {
  return inflt((zlv(data), data.subarray(2, -4)), out);
}
var te$1 = typeof TextEncoder != 'undefined' && new TextEncoder();
var td = typeof TextDecoder != 'undefined' && new TextDecoder();
var tds = 0;
try {
  td.decode(et$1, {
    stream: true
  });
  tds = 1;
} catch (e) {}
function strToU8(str, latin1) {
  if (latin1) {
    var ar_1 = new u8(str.length);
    for (var i = 0; i < str.length; ++i) ar_1[i] = str.charCodeAt(i);
    return ar_1;
  }
  if (te$1) return te$1.encode(str);
  var l = str.length;
  var ar = new u8(str.length + (str.length >> 1));
  var ai = 0;
  var w = function (v) {
    ar[ai++] = v;
  };
  for (var i = 0; i < l; ++i) {
    if (ai + 5 > ar.length) {
      var n = new u8(ai + 8 + (l - i << 1));
      n.set(ar);
      ar = n;
    }
    var c = str.charCodeAt(i);
    if (c < 128 || latin1) w(c);else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);
  }
  return slc(ar, 0, ai);
}

function t(t) {
  var e = t.length;
  for (; --e >= 0;) t[e] = 0;
}
var e = 256,
  a = 286,
  r = 30,
  s = 15,
  n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]),
  i = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]),
  _ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]),
  l = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
  h = new Array(576);
t(h);
var o = new Array(60);
t(o);
var d = new Array(512);
t(d);
var u = new Array(256);
t(u);
var f = new Array(29);
t(f);
var c = new Array(r);
function p(t, e, a, r, s) {
  this.static_tree = t, this.extra_bits = e, this.extra_base = a, this.elems = r, this.max_length = s, this.has_stree = t && t.length;
}
var g, w, m;
function b(t, e) {
  this.dyn_tree = t, this.max_code = 0, this.stat_desc = e;
}
t(c);
var y = t => t < 256 ? d[t] : d[256 + (t >>> 7)],
  v = (t, e) => {
    t.pending_buf[t.pending++] = 255 & e, t.pending_buf[t.pending++] = e >>> 8 & 255;
  },
  z = (t, e, a) => {
    t.bi_valid > 16 - a ? (t.bi_buf |= e << t.bi_valid & 65535, v(t, t.bi_buf), t.bi_buf = e >> 16 - t.bi_valid, t.bi_valid += a - 16) : (t.bi_buf |= e << t.bi_valid & 65535, t.bi_valid += a);
  },
  k = (t, e, a) => {
    z(t, a[2 * e], a[2 * e + 1]);
  },
  x = (t, e) => {
    var a = 0;
    do {
      a |= 1 & t, t >>>= 1, a <<= 1;
    } while (--e > 0);
    return a >>> 1;
  },
  A = (t, e, a) => {
    var r = new Array(16);
    var n,
      i,
      _ = 0;
    for (n = 1; n <= s; n++) _ = _ + a[n - 1] << 1, r[n] = _;
    for (i = 0; i <= e; i++) {
      var _e2 = t[2 * i + 1];
      0 !== _e2 && (t[2 * i] = x(r[_e2]++, _e2));
    }
  },
  E = t => {
    var e;
    for (e = 0; e < a; e++) t.dyn_ltree[2 * e] = 0;
    for (e = 0; e < r; e++) t.dyn_dtree[2 * e] = 0;
    for (e = 0; e < 19; e++) t.bl_tree[2 * e] = 0;
    t.dyn_ltree[512] = 1, t.opt_len = t.static_len = 0, t.sym_next = t.matches = 0;
  },
  Z = t => {
    t.bi_valid > 8 ? v(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf), t.bi_buf = 0, t.bi_valid = 0;
  },
  U = (t, e, a, r) => {
    var s = 2 * e,
      n = 2 * a;
    return t[s] < t[n] || t[s] === t[n] && r[e] <= r[a];
  },
  R = (t, e, a) => {
    var r = t.heap[a];
    var s = a << 1;
    for (; s <= t.heap_len && (s < t.heap_len && U(e, t.heap[s + 1], t.heap[s], t.depth) && s++, !U(e, r, t.heap[s], t.depth));) t.heap[a] = t.heap[s], a = s, s <<= 1;
    t.heap[a] = r;
  },
  S = (t, a, r) => {
    var s,
      _,
      l,
      h,
      o = 0;
    if (0 !== t.sym_next) do {
      s = 255 & t.pending_buf[t.sym_buf + o++], s += (255 & t.pending_buf[t.sym_buf + o++]) << 8, _ = t.pending_buf[t.sym_buf + o++], 0 === s ? k(t, _, a) : (l = u[_], k(t, l + e + 1, a), h = n[l], 0 !== h && (_ -= f[l], z(t, _, h)), s--, l = y(s), k(t, l, r), h = i[l], 0 !== h && (s -= c[l], z(t, s, h)));
    } while (o < t.sym_next);
    k(t, 256, a);
  },
  T = (t, e) => {
    var a = e.dyn_tree,
      r = e.stat_desc.static_tree,
      n = e.stat_desc.has_stree,
      i = e.stat_desc.elems;
    var _,
      l,
      h,
      o = -1;
    for (t.heap_len = 0, t.heap_max = 573, _ = 0; _ < i; _++) 0 !== a[2 * _] ? (t.heap[++t.heap_len] = o = _, t.depth[_] = 0) : a[2 * _ + 1] = 0;
    for (; t.heap_len < 2;) h = t.heap[++t.heap_len] = o < 2 ? ++o : 0, a[2 * h] = 1, t.depth[h] = 0, t.opt_len--, n && (t.static_len -= r[2 * h + 1]);
    for (e.max_code = o, _ = t.heap_len >> 1; _ >= 1; _--) R(t, a, _);
    h = i;
    do {
      _ = t.heap[1], t.heap[1] = t.heap[t.heap_len--], R(t, a, 1), l = t.heap[1], t.heap[--t.heap_max] = _, t.heap[--t.heap_max] = l, a[2 * h] = a[2 * _] + a[2 * l], t.depth[h] = (t.depth[_] >= t.depth[l] ? t.depth[_] : t.depth[l]) + 1, a[2 * _ + 1] = a[2 * l + 1] = h, t.heap[1] = h++, R(t, a, 1);
    } while (t.heap_len >= 2);
    t.heap[--t.heap_max] = t.heap[1], ((t, e) => {
      var a = e.dyn_tree,
        r = e.max_code,
        n = e.stat_desc.static_tree,
        i = e.stat_desc.has_stree,
        _ = e.stat_desc.extra_bits,
        l = e.stat_desc.extra_base,
        h = e.stat_desc.max_length;
      var o,
        d,
        u,
        f,
        c,
        p,
        g = 0;
      for (f = 0; f <= s; f++) t.bl_count[f] = 0;
      for (a[2 * t.heap[t.heap_max] + 1] = 0, o = t.heap_max + 1; o < 573; o++) d = t.heap[o], f = a[2 * a[2 * d + 1] + 1] + 1, f > h && (f = h, g++), a[2 * d + 1] = f, d > r || (t.bl_count[f]++, c = 0, d >= l && (c = _[d - l]), p = a[2 * d], t.opt_len += p * (f + c), i && (t.static_len += p * (n[2 * d + 1] + c)));
      if (0 !== g) {
        do {
          for (f = h - 1; 0 === t.bl_count[f];) f--;
          t.bl_count[f]--, t.bl_count[f + 1] += 2, t.bl_count[h]--, g -= 2;
        } while (g > 0);
        for (f = h; 0 !== f; f--) for (d = t.bl_count[f]; 0 !== d;) u = t.heap[--o], u > r || (a[2 * u + 1] !== f && (t.opt_len += (f - a[2 * u + 1]) * a[2 * u], a[2 * u + 1] = f), d--);
      }
    })(t, e), A(a, o, t.bl_count);
  },
  L = (t, e, a) => {
    var r,
      s,
      n = -1,
      i = e[1],
      _ = 0,
      l = 7,
      h = 4;
    for (0 === i && (l = 138, h = 3), e[2 * (a + 1) + 1] = 65535, r = 0; r <= a; r++) s = i, i = e[2 * (r + 1) + 1], ++_ < l && s === i || (_ < h ? t.bl_tree[2 * s] += _ : 0 !== s ? (s !== n && t.bl_tree[2 * s]++, t.bl_tree[32]++) : _ <= 10 ? t.bl_tree[34]++ : t.bl_tree[36]++, _ = 0, n = s, 0 === i ? (l = 138, h = 3) : s === i ? (l = 6, h = 3) : (l = 7, h = 4));
  },
  D = (t, e, a) => {
    var r,
      s,
      n = -1,
      i = e[1],
      _ = 0,
      l = 7,
      h = 4;
    for (0 === i && (l = 138, h = 3), r = 0; r <= a; r++) if (s = i, i = e[2 * (r + 1) + 1], !(++_ < l && s === i)) {
      if (_ < h) do {
        k(t, s, t.bl_tree);
      } while (0 != --_);else 0 !== s ? (s !== n && (k(t, s, t.bl_tree), _--), k(t, 16, t.bl_tree), z(t, _ - 3, 2)) : _ <= 10 ? (k(t, 17, t.bl_tree), z(t, _ - 3, 3)) : (k(t, 18, t.bl_tree), z(t, _ - 11, 7));
      _ = 0, n = s, 0 === i ? (l = 138, h = 3) : s === i ? (l = 6, h = 3) : (l = 7, h = 4);
    }
  };
var F = !1;
var O = (t, e, a, r) => {
  z(t, 0 + (r ? 1 : 0), 3), Z(t), v(t, a), v(t, ~a), a && t.pending_buf.set(t.window.subarray(e, e + a), t.pending), t.pending += a;
};
var N = (t, a, r, s) => {
    var n,
      i,
      _ = 0;
    t.level > 0 ? (2 === t.strm.data_type && (t.strm.data_type = (t => {
      var a,
        r = 4093624447;
      for (a = 0; a <= 31; a++, r >>>= 1) if (1 & r && 0 !== t.dyn_ltree[2 * a]) return 0;
      if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26]) return 1;
      for (a = 32; a < e; a++) if (0 !== t.dyn_ltree[2 * a]) return 1;
      return 0;
    })(t)), T(t, t.l_desc), T(t, t.d_desc), _ = (t => {
      var e;
      for (L(t, t.dyn_ltree, t.l_desc.max_code), L(t, t.dyn_dtree, t.d_desc.max_code), T(t, t.bl_desc), e = 18; e >= 3 && 0 === t.bl_tree[2 * l[e] + 1]; e--);
      return t.opt_len += 3 * (e + 1) + 5 + 5 + 4, e;
    })(t), n = t.opt_len + 3 + 7 >>> 3, i = t.static_len + 3 + 7 >>> 3, i <= n && (n = i)) : n = i = r + 5, r + 4 <= n && -1 !== a ? O(t, a, r, s) : 4 === t.strategy || i === n ? (z(t, 2 + (s ? 1 : 0), 3), S(t, h, o)) : (z(t, 4 + (s ? 1 : 0), 3), ((t, e, a, r) => {
      var s;
      for (z(t, e - 257, 5), z(t, a - 1, 5), z(t, r - 4, 4), s = 0; s < r; s++) z(t, t.bl_tree[2 * l[s] + 1], 3);
      D(t, t.dyn_ltree, e - 1), D(t, t.dyn_dtree, a - 1);
    })(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, _ + 1), S(t, t.dyn_ltree, t.dyn_dtree)), E(t), s && Z(t);
  },
  C = {
    _tr_init: t => {
      F || ((() => {
        var t, e, l, b, y;
        var v = new Array(16);
        for (l = 0, b = 0; b < 28; b++) for (f[b] = l, t = 0; t < 1 << n[b]; t++) u[l++] = b;
        for (u[l - 1] = b, y = 0, b = 0; b < 16; b++) for (c[b] = y, t = 0; t < 1 << i[b]; t++) d[y++] = b;
        for (y >>= 7; b < r; b++) for (c[b] = y << 7, t = 0; t < 1 << i[b] - 7; t++) d[256 + y++] = b;
        for (e = 0; e <= s; e++) v[e] = 0;
        for (t = 0; t <= 143;) h[2 * t + 1] = 8, t++, v[8]++;
        for (; t <= 255;) h[2 * t + 1] = 9, t++, v[9]++;
        for (; t <= 279;) h[2 * t + 1] = 7, t++, v[7]++;
        for (; t <= 287;) h[2 * t + 1] = 8, t++, v[8]++;
        for (A(h, 287, v), t = 0; t < r; t++) o[2 * t + 1] = 5, o[2 * t] = x(t, 5);
        g = new p(h, n, 257, a, s), w = new p(o, i, 0, r, s), m = new p(new Array(0), _, 0, 19, 7);
      })(), F = !0), t.l_desc = new b(t.dyn_ltree, g), t.d_desc = new b(t.dyn_dtree, w), t.bl_desc = new b(t.bl_tree, m), t.bi_buf = 0, t.bi_valid = 0, E(t);
    },
    _tr_stored_block: O,
    _tr_flush_block: N,
    _tr_tally: (t, a, r) => (t.pending_buf[t.sym_buf + t.sym_next++] = a, t.pending_buf[t.sym_buf + t.sym_next++] = a >> 8, t.pending_buf[t.sym_buf + t.sym_next++] = r, 0 === a ? t.dyn_ltree[2 * r]++ : (t.matches++, a--, t.dyn_ltree[2 * (u[r] + e + 1)]++, t.dyn_dtree[2 * y(a)]++), t.sym_next === t.sym_end),
    _tr_align: t => {
      z(t, 2, 3), k(t, 256, h), (t => {
        16 === t.bi_valid ? (v(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8);
      })(t);
    }
  };
var I = (t, e, a, r) => {
  var s = 65535 & t | 0,
    n = t >>> 16 & 65535 | 0,
    i = 0;
  for (; 0 !== a;) {
    i = a > 2e3 ? 2e3 : a, a -= i;
    do {
      s = s + e[r++] | 0, n = n + s | 0;
    } while (--i);
    s %= 65521, n %= 65521;
  }
  return s | n << 16 | 0;
};
var B = new Uint32Array((() => {
  var t,
    e = [];
  for (var a = 0; a < 256; a++) {
    t = a;
    for (var r = 0; r < 8; r++) t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
    e[a] = t;
  }
  return e;
})());
var H = (t, e, a, r) => {
    var s = B,
      n = r + a;
    t ^= -1;
    for (var _a = r; _a < n; _a++) t = t >>> 8 ^ s[255 & (t ^ e[_a])];
    return -1 ^ t;
  },
  M = {
    2: "need dictionary",
    1: "stream end",
    0: "",
    "-1": "file error",
    "-2": "stream error",
    "-3": "data error",
    "-4": "insufficient memory",
    "-5": "buffer error",
    "-6": "incompatible version"
  },
  P = {
    Z_NO_FLUSH: 0,
    Z_PARTIAL_FLUSH: 1,
    Z_SYNC_FLUSH: 2,
    Z_FULL_FLUSH: 3,
    Z_FINISH: 4,
    Z_BLOCK: 5,
    Z_TREES: 6,
    Z_OK: 0,
    Z_STREAM_END: 1,
    Z_NEED_DICT: 2,
    Z_ERRNO: -1,
    Z_STREAM_ERROR: -2,
    Z_DATA_ERROR: -3,
    Z_MEM_ERROR: -4,
    Z_BUF_ERROR: -5,
    Z_NO_COMPRESSION: 0,
    Z_BEST_SPEED: 1,
    Z_BEST_COMPRESSION: 9,
    Z_DEFAULT_COMPRESSION: -1,
    Z_FILTERED: 1,
    Z_HUFFMAN_ONLY: 2,
    Z_RLE: 3,
    Z_FIXED: 4,
    Z_DEFAULT_STRATEGY: 0,
    Z_BINARY: 0,
    Z_TEXT: 1,
    Z_UNKNOWN: 2,
    Z_DEFLATED: 8
  };
var {
    _tr_init: K,
    _tr_stored_block: Y,
    _tr_flush_block: j,
    _tr_tally: G,
    _tr_align: X
  } = C,
  {
    Z_NO_FLUSH: W,
    Z_PARTIAL_FLUSH: q,
    Z_FULL_FLUSH: J,
    Z_FINISH: Q,
    Z_BLOCK: V,
    Z_OK: $,
    Z_STREAM_END: tt,
    Z_STREAM_ERROR: et,
    Z_DATA_ERROR: at,
    Z_BUF_ERROR: rt,
    Z_DEFAULT_COMPRESSION: st,
    Z_FILTERED: nt,
    Z_HUFFMAN_ONLY: it,
    Z_RLE: _t,
    Z_FIXED: lt,
    Z_DEFAULT_STRATEGY: ht,
    Z_UNKNOWN: ot,
    Z_DEFLATED: dt
  } = P,
  ut = 258,
  ft = 262,
  ct = 42,
  pt = 113,
  gt = 666,
  wt = (t, e) => (t.msg = M[e], e),
  mt = t => 2 * t - (t > 4 ? 9 : 0),
  bt = t => {
    var e = t.length;
    for (; --e >= 0;) t[e] = 0;
  },
  yt = t => {
    var e,
      a,
      r,
      s = t.w_size;
    e = t.hash_size, r = e;
    do {
      a = t.head[--r], t.head[r] = a >= s ? a - s : 0;
    } while (--e);
    e = s, r = e;
    do {
      a = t.prev[--r], t.prev[r] = a >= s ? a - s : 0;
    } while (--e);
  };
var vt = (t, e, a) => (e << t.hash_shift ^ a) & t.hash_mask;
var zt = t => {
    var e = t.state;
    var a = e.pending;
    a > t.avail_out && (a = t.avail_out), 0 !== a && (t.output.set(e.pending_buf.subarray(e.pending_out, e.pending_out + a), t.next_out), t.next_out += a, e.pending_out += a, t.total_out += a, t.avail_out -= a, e.pending -= a, 0 === e.pending && (e.pending_out = 0));
  },
  kt = (t, e) => {
    j(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e), t.block_start = t.strstart, zt(t.strm);
  },
  xt = (t, e) => {
    t.pending_buf[t.pending++] = e;
  },
  At = (t, e) => {
    t.pending_buf[t.pending++] = e >>> 8 & 255, t.pending_buf[t.pending++] = 255 & e;
  },
  Et = (t, e, a, r) => {
    var s = t.avail_in;
    return s > r && (s = r), 0 === s ? 0 : (t.avail_in -= s, e.set(t.input.subarray(t.next_in, t.next_in + s), a), 1 === t.state.wrap ? t.adler = I(t.adler, e, s, a) : 2 === t.state.wrap && (t.adler = H(t.adler, e, s, a)), t.next_in += s, t.total_in += s, s);
  },
  Zt = (t, e) => {
    var a,
      r,
      s = t.max_chain_length,
      n = t.strstart,
      i = t.prev_length,
      _ = t.nice_match;
    var l = t.strstart > t.w_size - ft ? t.strstart - (t.w_size - ft) : 0,
      h = t.window,
      o = t.w_mask,
      d = t.prev,
      u = t.strstart + ut;
    var f = h[n + i - 1],
      c = h[n + i];
    t.prev_length >= t.good_match && (s >>= 2), _ > t.lookahead && (_ = t.lookahead);
    do {
      if (a = e, h[a + i] === c && h[a + i - 1] === f && h[a] === h[n] && h[++a] === h[n + 1]) {
        n += 2, a++;
        do {} while (h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && h[++n] === h[++a] && n < u);
        if (r = ut - (u - n), n = u - ut, r > i) {
          if (t.match_start = e, i = r, r >= _) break;
          f = h[n + i - 1], c = h[n + i];
        }
      }
    } while ((e = d[e & o]) > l && 0 != --s);
    return i <= t.lookahead ? i : t.lookahead;
  },
  Ut = t => {
    var e = t.w_size;
    var a, r, s;
    do {
      if (r = t.window_size - t.lookahead - t.strstart, t.strstart >= e + (e - ft) && (t.window.set(t.window.subarray(e, e + e - r), 0), t.match_start -= e, t.strstart -= e, t.block_start -= e, t.insert > t.strstart && (t.insert = t.strstart), yt(t), r += e), 0 === t.strm.avail_in) break;
      if (a = Et(t.strm, t.window, t.strstart + t.lookahead, r), t.lookahead += a, t.lookahead + t.insert >= 3) for (s = t.strstart - t.insert, t.ins_h = t.window[s], t.ins_h = vt(t, t.ins_h, t.window[s + 1]); t.insert && (t.ins_h = vt(t, t.ins_h, t.window[s + 3 - 1]), t.prev[s & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = s, s++, t.insert--, !(t.lookahead + t.insert < 3)););
    } while (t.lookahead < ft && 0 !== t.strm.avail_in);
  },
  Rt = (t, e) => {
    var a,
      r,
      s,
      n = t.pending_buf_size - 5 > t.w_size ? t.w_size : t.pending_buf_size - 5,
      i = 0,
      _ = t.strm.avail_in;
    do {
      if (a = 65535, s = t.bi_valid + 42 >> 3, t.strm.avail_out < s) break;
      if (s = t.strm.avail_out - s, r = t.strstart - t.block_start, a > r + t.strm.avail_in && (a = r + t.strm.avail_in), a > s && (a = s), a < n && (0 === a && e !== Q || e === W || a !== r + t.strm.avail_in)) break;
      i = e === Q && a === r + t.strm.avail_in ? 1 : 0, Y(t, 0, 0, i), t.pending_buf[t.pending - 4] = a, t.pending_buf[t.pending - 3] = a >> 8, t.pending_buf[t.pending - 2] = ~a, t.pending_buf[t.pending - 1] = ~a >> 8, zt(t.strm), r && (r > a && (r = a), t.strm.output.set(t.window.subarray(t.block_start, t.block_start + r), t.strm.next_out), t.strm.next_out += r, t.strm.avail_out -= r, t.strm.total_out += r, t.block_start += r, a -= r), a && (Et(t.strm, t.strm.output, t.strm.next_out, a), t.strm.next_out += a, t.strm.avail_out -= a, t.strm.total_out += a);
    } while (0 === i);
    return _ -= t.strm.avail_in, _ && (_ >= t.w_size ? (t.matches = 2, t.window.set(t.strm.input.subarray(t.strm.next_in - t.w_size, t.strm.next_in), 0), t.strstart = t.w_size, t.insert = t.strstart) : (t.window_size - t.strstart <= _ && (t.strstart -= t.w_size, t.window.set(t.window.subarray(t.w_size, t.w_size + t.strstart), 0), t.matches < 2 && t.matches++, t.insert > t.strstart && (t.insert = t.strstart)), t.window.set(t.strm.input.subarray(t.strm.next_in - _, t.strm.next_in), t.strstart), t.strstart += _, t.insert += _ > t.w_size - t.insert ? t.w_size - t.insert : _), t.block_start = t.strstart), t.high_water < t.strstart && (t.high_water = t.strstart), i ? 4 : e !== W && e !== Q && 0 === t.strm.avail_in && t.strstart === t.block_start ? 2 : (s = t.window_size - t.strstart, t.strm.avail_in > s && t.block_start >= t.w_size && (t.block_start -= t.w_size, t.strstart -= t.w_size, t.window.set(t.window.subarray(t.w_size, t.w_size + t.strstart), 0), t.matches < 2 && t.matches++, s += t.w_size, t.insert > t.strstart && (t.insert = t.strstart)), s > t.strm.avail_in && (s = t.strm.avail_in), s && (Et(t.strm, t.window, t.strstart, s), t.strstart += s, t.insert += s > t.w_size - t.insert ? t.w_size - t.insert : s), t.high_water < t.strstart && (t.high_water = t.strstart), s = t.bi_valid + 42 >> 3, s = t.pending_buf_size - s > 65535 ? 65535 : t.pending_buf_size - s, n = s > t.w_size ? t.w_size : s, r = t.strstart - t.block_start, (r >= n || (r || e === Q) && e !== W && 0 === t.strm.avail_in && r <= s) && (a = r > s ? s : r, i = e === Q && 0 === t.strm.avail_in && a === r ? 1 : 0, Y(t, t.block_start, a, i), t.block_start += a, zt(t.strm)), i ? 3 : 1);
  },
  St = (t, e) => {
    var a, r;
    for (;;) {
      if (t.lookahead < ft) {
        if (Ut(t), t.lookahead < ft && e === W) return 1;
        if (0 === t.lookahead) break;
      }
      if (a = 0, t.lookahead >= 3 && (t.ins_h = vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), 0 !== a && t.strstart - a <= t.w_size - ft && (t.match_length = Zt(t, a)), t.match_length >= 3) {
        if (r = G(t, t.strstart - t.match_start, t.match_length - 3), t.lookahead -= t.match_length, t.match_length <= t.max_lazy_match && t.lookahead >= 3) {
          t.match_length--;
          do {
            t.strstart++, t.ins_h = vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart;
          } while (0 != --t.match_length);
          t.strstart++;
        } else t.strstart += t.match_length, t.match_length = 0, t.ins_h = t.window[t.strstart], t.ins_h = vt(t, t.ins_h, t.window[t.strstart + 1]);
      } else r = G(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++;
      if (r && (kt(t, !1), 0 === t.strm.avail_out)) return 1;
    }
    return t.insert = t.strstart < 2 ? t.strstart : 2, e === Q ? (kt(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && (kt(t, !1), 0 === t.strm.avail_out) ? 1 : 2;
  },
  Tt = (t, e) => {
    var a, r, s;
    for (;;) {
      if (t.lookahead < ft) {
        if (Ut(t), t.lookahead < ft && e === W) return 1;
        if (0 === t.lookahead) break;
      }
      if (a = 0, t.lookahead >= 3 && (t.ins_h = vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), t.prev_length = t.match_length, t.prev_match = t.match_start, t.match_length = 2, 0 !== a && t.prev_length < t.max_lazy_match && t.strstart - a <= t.w_size - ft && (t.match_length = Zt(t, a), t.match_length <= 5 && (t.strategy === nt || 3 === t.match_length && t.strstart - t.match_start > 4096) && (t.match_length = 2)), t.prev_length >= 3 && t.match_length <= t.prev_length) {
        s = t.strstart + t.lookahead - 3, r = G(t, t.strstart - 1 - t.prev_match, t.prev_length - 3), t.lookahead -= t.prev_length - 1, t.prev_length -= 2;
        do {
          ++t.strstart <= s && (t.ins_h = vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart);
        } while (0 != --t.prev_length);
        if (t.match_available = 0, t.match_length = 2, t.strstart++, r && (kt(t, !1), 0 === t.strm.avail_out)) return 1;
      } else if (t.match_available) {
        if (r = G(t, 0, t.window[t.strstart - 1]), r && kt(t, !1), t.strstart++, t.lookahead--, 0 === t.strm.avail_out) return 1;
      } else t.match_available = 1, t.strstart++, t.lookahead--;
    }
    return t.match_available && (r = G(t, 0, t.window[t.strstart - 1]), t.match_available = 0), t.insert = t.strstart < 2 ? t.strstart : 2, e === Q ? (kt(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && (kt(t, !1), 0 === t.strm.avail_out) ? 1 : 2;
  };
function Lt(t, e, a, r, s) {
  this.good_length = t, this.max_lazy = e, this.nice_length = a, this.max_chain = r, this.func = s;
}
var Dt = [new Lt(0, 0, 0, 0, Rt), new Lt(4, 4, 8, 4, St), new Lt(4, 5, 16, 8, St), new Lt(4, 6, 32, 32, St), new Lt(4, 4, 16, 16, Tt), new Lt(8, 16, 32, 32, Tt), new Lt(8, 16, 128, 128, Tt), new Lt(8, 32, 128, 256, Tt), new Lt(32, 128, 258, 1024, Tt), new Lt(32, 258, 258, 4096, Tt)];
function Ft() {
  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = dt, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Uint16Array(1146), this.dyn_dtree = new Uint16Array(122), this.bl_tree = new Uint16Array(78), bt(this.dyn_ltree), bt(this.dyn_dtree), bt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Uint16Array(16), this.heap = new Uint16Array(573), bt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Uint16Array(573), bt(this.depth), this.sym_buf = 0, this.lit_bufsize = 0, this.sym_next = 0, this.sym_end = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
}
var Ot = t => {
    if (!t) return 1;
    var e = t.state;
    return !e || e.strm !== t || e.status !== ct && 57 !== e.status && 69 !== e.status && 73 !== e.status && 91 !== e.status && 103 !== e.status && e.status !== pt && e.status !== gt ? 1 : 0;
  },
  Nt = t => {
    if (Ot(t)) return wt(t, et);
    t.total_in = t.total_out = 0, t.data_type = ot;
    var e = t.state;
    return e.pending = 0, e.pending_out = 0, e.wrap < 0 && (e.wrap = -e.wrap), e.status = 2 === e.wrap ? 57 : e.wrap ? ct : pt, t.adler = 2 === e.wrap ? 0 : 1, e.last_flush = -2, K(e), $;
  },
  Ct = t => {
    var e = Nt(t);
    var a;
    return e === $ && ((a = t.state).window_size = 2 * a.w_size, bt(a.head), a.max_lazy_match = Dt[a.level].max_lazy, a.good_match = Dt[a.level].good_length, a.nice_match = Dt[a.level].nice_length, a.max_chain_length = Dt[a.level].max_chain, a.strstart = 0, a.block_start = 0, a.lookahead = 0, a.insert = 0, a.match_length = a.prev_length = 2, a.match_available = 0, a.ins_h = 0), e;
  },
  It = (t, e, a, r, s, n) => {
    if (!t) return et;
    var i = 1;
    if (e === st && (e = 6), r < 0 ? (i = 0, r = -r) : r > 15 && (i = 2, r -= 16), s < 1 || s > 9 || a !== dt || r < 8 || r > 15 || e < 0 || e > 9 || n < 0 || n > lt || 8 === r && 1 !== i) return wt(t, et);
    8 === r && (r = 9);
    var _ = new Ft();
    return t.state = _, _.strm = t, _.status = ct, _.wrap = i, _.gzhead = null, _.w_bits = r, _.w_size = 1 << _.w_bits, _.w_mask = _.w_size - 1, _.hash_bits = s + 7, _.hash_size = 1 << _.hash_bits, _.hash_mask = _.hash_size - 1, _.hash_shift = ~~((_.hash_bits + 3 - 1) / 3), _.window = new Uint8Array(2 * _.w_size), _.head = new Uint16Array(_.hash_size), _.prev = new Uint16Array(_.w_size), _.lit_bufsize = 1 << s + 6, _.pending_buf_size = 4 * _.lit_bufsize, _.pending_buf = new Uint8Array(_.pending_buf_size), _.sym_buf = _.lit_bufsize, _.sym_end = 3 * (_.lit_bufsize - 1), _.level = e, _.strategy = n, _.method = a, Ct(t);
  };
var Bt = {
  deflateInit: (t, e) => It(t, e, dt, 15, 8, ht),
  deflateInit2: It,
  deflateReset: Ct,
  deflateResetKeep: Nt,
  deflateSetHeader: (t, e) => Ot(t) || 2 !== t.state.wrap ? et : (t.state.gzhead = e, $),
  deflate: (t, e) => {
    if (Ot(t) || e > V || e < 0) return t ? wt(t, et) : et;
    var a = t.state;
    if (!t.output || 0 !== t.avail_in && !t.input || a.status === gt && e !== Q) return wt(t, 0 === t.avail_out ? rt : et);
    var r = a.last_flush;
    if (a.last_flush = e, 0 !== a.pending) {
      if (zt(t), 0 === t.avail_out) return a.last_flush = -1, $;
    } else if (0 === t.avail_in && mt(e) <= mt(r) && e !== Q) return wt(t, rt);
    if (a.status === gt && 0 !== t.avail_in) return wt(t, rt);
    if (a.status === ct && 0 === a.wrap && (a.status = pt), a.status === ct) {
      var _e3 = dt + (a.w_bits - 8 << 4) << 8,
        _r = -1;
      if (_r = a.strategy >= it || a.level < 2 ? 0 : a.level < 6 ? 1 : 6 === a.level ? 2 : 3, _e3 |= _r << 6, 0 !== a.strstart && (_e3 |= 32), _e3 += 31 - _e3 % 31, At(a, _e3), 0 !== a.strstart && (At(a, t.adler >>> 16), At(a, 65535 & t.adler)), t.adler = 1, a.status = pt, zt(t), 0 !== a.pending) return a.last_flush = -1, $;
    }
    if (57 === a.status) if (t.adler = 0, xt(a, 31), xt(a, 139), xt(a, 8), a.gzhead) xt(a, (a.gzhead.text ? 1 : 0) + (a.gzhead.hcrc ? 2 : 0) + (a.gzhead.extra ? 4 : 0) + (a.gzhead.name ? 8 : 0) + (a.gzhead.comment ? 16 : 0)), xt(a, 255 & a.gzhead.time), xt(a, a.gzhead.time >> 8 & 255), xt(a, a.gzhead.time >> 16 & 255), xt(a, a.gzhead.time >> 24 & 255), xt(a, 9 === a.level ? 2 : a.strategy >= it || a.level < 2 ? 4 : 0), xt(a, 255 & a.gzhead.os), a.gzhead.extra && a.gzhead.extra.length && (xt(a, 255 & a.gzhead.extra.length), xt(a, a.gzhead.extra.length >> 8 & 255)), a.gzhead.hcrc && (t.adler = H(t.adler, a.pending_buf, a.pending, 0)), a.gzindex = 0, a.status = 69;else if (xt(a, 0), xt(a, 0), xt(a, 0), xt(a, 0), xt(a, 0), xt(a, 9 === a.level ? 2 : a.strategy >= it || a.level < 2 ? 4 : 0), xt(a, 3), a.status = pt, zt(t), 0 !== a.pending) return a.last_flush = -1, $;
    if (69 === a.status) {
      if (a.gzhead.extra) {
        var _e4 = a.pending,
          _r2 = (65535 & a.gzhead.extra.length) - a.gzindex;
        for (; a.pending + _r2 > a.pending_buf_size;) {
          var _s = a.pending_buf_size - a.pending;
          if (a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex, a.gzindex + _s), a.pending), a.pending = a.pending_buf_size, a.gzhead.hcrc && a.pending > _e4 && (t.adler = H(t.adler, a.pending_buf, a.pending - _e4, _e4)), a.gzindex += _s, zt(t), 0 !== a.pending) return a.last_flush = -1, $;
          _e4 = 0, _r2 -= _s;
        }
        var _s2 = new Uint8Array(a.gzhead.extra);
        a.pending_buf.set(_s2.subarray(a.gzindex, a.gzindex + _r2), a.pending), a.pending += _r2, a.gzhead.hcrc && a.pending > _e4 && (t.adler = H(t.adler, a.pending_buf, a.pending - _e4, _e4)), a.gzindex = 0;
      }
      a.status = 73;
    }
    if (73 === a.status) {
      if (a.gzhead.name) {
        var _e5,
          _r3 = a.pending;
        do {
          if (a.pending === a.pending_buf_size) {
            if (a.gzhead.hcrc && a.pending > _r3 && (t.adler = H(t.adler, a.pending_buf, a.pending - _r3, _r3)), zt(t), 0 !== a.pending) return a.last_flush = -1, $;
            _r3 = 0;
          }
          _e5 = a.gzindex < a.gzhead.name.length ? 255 & a.gzhead.name.charCodeAt(a.gzindex++) : 0, xt(a, _e5);
        } while (0 !== _e5);
        a.gzhead.hcrc && a.pending > _r3 && (t.adler = H(t.adler, a.pending_buf, a.pending - _r3, _r3)), a.gzindex = 0;
      }
      a.status = 91;
    }
    if (91 === a.status) {
      if (a.gzhead.comment) {
        var _e6,
          _r4 = a.pending;
        do {
          if (a.pending === a.pending_buf_size) {
            if (a.gzhead.hcrc && a.pending > _r4 && (t.adler = H(t.adler, a.pending_buf, a.pending - _r4, _r4)), zt(t), 0 !== a.pending) return a.last_flush = -1, $;
            _r4 = 0;
          }
          _e6 = a.gzindex < a.gzhead.comment.length ? 255 & a.gzhead.comment.charCodeAt(a.gzindex++) : 0, xt(a, _e6);
        } while (0 !== _e6);
        a.gzhead.hcrc && a.pending > _r4 && (t.adler = H(t.adler, a.pending_buf, a.pending - _r4, _r4));
      }
      a.status = 103;
    }
    if (103 === a.status) {
      if (a.gzhead.hcrc) {
        if (a.pending + 2 > a.pending_buf_size && (zt(t), 0 !== a.pending)) return a.last_flush = -1, $;
        xt(a, 255 & t.adler), xt(a, t.adler >> 8 & 255), t.adler = 0;
      }
      if (a.status = pt, zt(t), 0 !== a.pending) return a.last_flush = -1, $;
    }
    if (0 !== t.avail_in || 0 !== a.lookahead || e !== W && a.status !== gt) {
      var _r5 = 0 === a.level ? Rt(a, e) : a.strategy === it ? ((t, e) => {
        var a;
        for (;;) {
          if (0 === t.lookahead && (Ut(t), 0 === t.lookahead)) {
            if (e === W) return 1;
            break;
          }
          if (t.match_length = 0, a = G(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++, a && (kt(t, !1), 0 === t.strm.avail_out)) return 1;
        }
        return t.insert = 0, e === Q ? (kt(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && (kt(t, !1), 0 === t.strm.avail_out) ? 1 : 2;
      })(a, e) : a.strategy === _t ? ((t, e) => {
        var a, r, s, n;
        var i = t.window;
        for (;;) {
          if (t.lookahead <= ut) {
            if (Ut(t), t.lookahead <= ut && e === W) return 1;
            if (0 === t.lookahead) break;
          }
          if (t.match_length = 0, t.lookahead >= 3 && t.strstart > 0 && (s = t.strstart - 1, r = i[s], r === i[++s] && r === i[++s] && r === i[++s])) {
            n = t.strstart + ut;
            do {} while (r === i[++s] && r === i[++s] && r === i[++s] && r === i[++s] && r === i[++s] && r === i[++s] && r === i[++s] && r === i[++s] && s < n);
            t.match_length = ut - (n - s), t.match_length > t.lookahead && (t.match_length = t.lookahead);
          }
          if (t.match_length >= 3 ? (a = G(t, 1, t.match_length - 3), t.lookahead -= t.match_length, t.strstart += t.match_length, t.match_length = 0) : (a = G(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++), a && (kt(t, !1), 0 === t.strm.avail_out)) return 1;
        }
        return t.insert = 0, e === Q ? (kt(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && (kt(t, !1), 0 === t.strm.avail_out) ? 1 : 2;
      })(a, e) : Dt[a.level].func(a, e);
      if (3 !== _r5 && 4 !== _r5 || (a.status = gt), 1 === _r5 || 3 === _r5) return 0 === t.avail_out && (a.last_flush = -1), $;
      if (2 === _r5 && (e === q ? X(a) : e !== V && (Y(a, 0, 0, !1), e === J && (bt(a.head), 0 === a.lookahead && (a.strstart = 0, a.block_start = 0, a.insert = 0))), zt(t), 0 === t.avail_out)) return a.last_flush = -1, $;
    }
    return e !== Q ? $ : a.wrap <= 0 ? tt : (2 === a.wrap ? (xt(a, 255 & t.adler), xt(a, t.adler >> 8 & 255), xt(a, t.adler >> 16 & 255), xt(a, t.adler >> 24 & 255), xt(a, 255 & t.total_in), xt(a, t.total_in >> 8 & 255), xt(a, t.total_in >> 16 & 255), xt(a, t.total_in >> 24 & 255)) : (At(a, t.adler >>> 16), At(a, 65535 & t.adler)), zt(t), a.wrap > 0 && (a.wrap = -a.wrap), 0 !== a.pending ? $ : tt);
  },
  deflateEnd: t => {
    if (Ot(t)) return et;
    var e = t.state.status;
    return t.state = null, e === pt ? wt(t, at) : $;
  },
  deflateSetDictionary: (t, e) => {
    var a = e.length;
    if (Ot(t)) return et;
    var r = t.state,
      s = r.wrap;
    if (2 === s || 1 === s && r.status !== ct || r.lookahead) return et;
    if (1 === s && (t.adler = I(t.adler, e, a, 0)), r.wrap = 0, a >= r.w_size) {
      0 === s && (bt(r.head), r.strstart = 0, r.block_start = 0, r.insert = 0);
      var _t2 = new Uint8Array(r.w_size);
      _t2.set(e.subarray(a - r.w_size, a), 0), e = _t2, a = r.w_size;
    }
    var n = t.avail_in,
      i = t.next_in,
      _ = t.input;
    for (t.avail_in = a, t.next_in = 0, t.input = e, Ut(r); r.lookahead >= 3;) {
      var _t3 = r.strstart,
        _e7 = r.lookahead - 2;
      do {
        r.ins_h = vt(r, r.ins_h, r.window[_t3 + 3 - 1]), r.prev[_t3 & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = _t3, _t3++;
      } while (--_e7);
      r.strstart = _t3, r.lookahead = 2, Ut(r);
    }
    return r.strstart += r.lookahead, r.block_start = r.strstart, r.insert = r.lookahead, r.lookahead = 0, r.match_length = r.prev_length = 2, r.match_available = 0, t.next_in = i, t.input = _, t.avail_in = n, r.wrap = s, $;
  },
  deflateInfo: "pako deflate (from Nodeca project)"
};
var Ht = (t, e) => Object.prototype.hasOwnProperty.call(t, e);
var Mt = {
  assign: function (t) {
    var e = Array.prototype.slice.call(arguments, 1);
    for (; e.length;) {
      var _a2 = e.shift();
      if (_a2) {
        if ("object" != typeof _a2) throw new TypeError(_a2 + "must be non-object");
        for (var _e8 in _a2) Ht(_a2, _e8) && (t[_e8] = _a2[_e8]);
      }
    }
    return t;
  },
  flattenChunks: t => {
    var e = 0;
    for (var _a3 = 0, _r6 = t.length; _a3 < _r6; _a3++) e += t[_a3].length;
    var a = new Uint8Array(e);
    for (var _e9 = 0, _r7 = 0, _s3 = t.length; _e9 < _s3; _e9++) {
      var _s4 = t[_e9];
      a.set(_s4, _r7), _r7 += _s4.length;
    }
    return a;
  }
};
var Pt = !0;
try {
  String.fromCharCode.apply(null, new Uint8Array(1));
} catch (t) {
  Pt = !1;
}
var Kt = new Uint8Array(256);
for (var _t4 = 0; _t4 < 256; _t4++) Kt[_t4] = _t4 >= 252 ? 6 : _t4 >= 248 ? 5 : _t4 >= 240 ? 4 : _t4 >= 224 ? 3 : _t4 >= 192 ? 2 : 1;
Kt[254] = Kt[254] = 1;
var Yt = {
  string2buf: t => {
    if ("function" == typeof TextEncoder && TextEncoder.prototype.encode) return new TextEncoder().encode(t);
    var e,
      a,
      r,
      s,
      n,
      i = t.length,
      _ = 0;
    for (s = 0; s < i; s++) a = t.charCodeAt(s), 55296 == (64512 & a) && s + 1 < i && (r = t.charCodeAt(s + 1), 56320 == (64512 & r) && (a = 65536 + (a - 55296 << 10) + (r - 56320), s++)), _ += a < 128 ? 1 : a < 2048 ? 2 : a < 65536 ? 3 : 4;
    for (e = new Uint8Array(_), n = 0, s = 0; n < _; s++) a = t.charCodeAt(s), 55296 == (64512 & a) && s + 1 < i && (r = t.charCodeAt(s + 1), 56320 == (64512 & r) && (a = 65536 + (a - 55296 << 10) + (r - 56320), s++)), a < 128 ? e[n++] = a : a < 2048 ? (e[n++] = 192 | a >>> 6, e[n++] = 128 | 63 & a) : a < 65536 ? (e[n++] = 224 | a >>> 12, e[n++] = 128 | a >>> 6 & 63, e[n++] = 128 | 63 & a) : (e[n++] = 240 | a >>> 18, e[n++] = 128 | a >>> 12 & 63, e[n++] = 128 | a >>> 6 & 63, e[n++] = 128 | 63 & a);
    return e;
  },
  buf2string: (t, e) => {
    var a = e || t.length;
    if ("function" == typeof TextDecoder && TextDecoder.prototype.decode) return new TextDecoder().decode(t.subarray(0, e));
    var r, s;
    var n = new Array(2 * a);
    for (s = 0, r = 0; r < a;) {
      var _e10 = t[r++];
      if (_e10 < 128) {
        n[s++] = _e10;
        continue;
      }
      var _i = Kt[_e10];
      if (_i > 4) n[s++] = 65533, r += _i - 1;else {
        for (_e10 &= 2 === _i ? 31 : 3 === _i ? 15 : 7; _i > 1 && r < a;) _e10 = _e10 << 6 | 63 & t[r++], _i--;
        _i > 1 ? n[s++] = 65533 : _e10 < 65536 ? n[s++] = _e10 : (_e10 -= 65536, n[s++] = 55296 | _e10 >> 10 & 1023, n[s++] = 56320 | 1023 & _e10);
      }
    }
    return ((t, e) => {
      if (e < 65534 && t.subarray && Pt) return String.fromCharCode.apply(null, t.length === e ? t : t.subarray(0, e));
      var a = "";
      for (var _r8 = 0; _r8 < e; _r8++) a += String.fromCharCode(t[_r8]);
      return a;
    })(n, s);
  },
  utf8border: (t, e) => {
    (e = e || t.length) > t.length && (e = t.length);
    var a = e - 1;
    for (; a >= 0 && 128 == (192 & t[a]);) a--;
    return a < 0 || 0 === a ? e : a + Kt[t[a]] > e ? a : e;
  }
};
var jt = function () {
  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
};
var Gt = Object.prototype.toString,
  {
    Z_NO_FLUSH: Xt,
    Z_SYNC_FLUSH: Wt,
    Z_FULL_FLUSH: qt,
    Z_FINISH: Jt,
    Z_OK: Qt,
    Z_STREAM_END: Vt,
    Z_DEFAULT_COMPRESSION: $t,
    Z_DEFAULT_STRATEGY: te,
    Z_DEFLATED: ee
  } = P;
function ae(t) {
  this.options = Mt.assign({
    level: $t,
    method: ee,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: te
  }, t || {});
  var e = this.options;
  e.raw && e.windowBits > 0 ? e.windowBits = -e.windowBits : e.gzip && e.windowBits > 0 && e.windowBits < 16 && (e.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new jt(), this.strm.avail_out = 0;
  var a = Bt.deflateInit2(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy);
  if (a !== Qt) throw new Error(M[a]);
  if (e.header && Bt.deflateSetHeader(this.strm, e.header), e.dictionary) {
    var _t5;
    if (_t5 = "string" == typeof e.dictionary ? Yt.string2buf(e.dictionary) : "[object ArrayBuffer]" === Gt.call(e.dictionary) ? new Uint8Array(e.dictionary) : e.dictionary, a = Bt.deflateSetDictionary(this.strm, _t5), a !== Qt) throw new Error(M[a]);
    this._dict_set = !0;
  }
}
function re(t, e) {
  var a = new ae(e);
  if (a.push(t, !0), a.err) throw a.msg || M[a.err];
  return a.result;
}
ae.prototype.push = function (t, e) {
  var a = this.strm,
    r = this.options.chunkSize;
  var s, n;
  if (this.ended) return !1;
  for (n = e === ~~e ? e : !0 === e ? Jt : Xt, "string" == typeof t ? a.input = Yt.string2buf(t) : "[object ArrayBuffer]" === Gt.call(t) ? a.input = new Uint8Array(t) : a.input = t, a.next_in = 0, a.avail_in = a.input.length;;) if (0 === a.avail_out && (a.output = new Uint8Array(r), a.next_out = 0, a.avail_out = r), (n === Wt || n === qt) && a.avail_out <= 6) this.onData(a.output.subarray(0, a.next_out)), a.avail_out = 0;else {
    if (s = Bt.deflate(a, n), s === Vt) return a.next_out > 0 && this.onData(a.output.subarray(0, a.next_out)), s = Bt.deflateEnd(this.strm), this.onEnd(s), this.ended = !0, s === Qt;
    if (0 !== a.avail_out) {
      if (n > 0 && a.next_out > 0) this.onData(a.output.subarray(0, a.next_out)), a.avail_out = 0;else if (0 === a.avail_in) break;
    } else this.onData(a.output);
  }
  return !0;
}, ae.prototype.onData = function (t) {
  this.chunks.push(t);
}, ae.prototype.onEnd = function (t) {
  t === Qt && (this.result = Mt.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg;
};
var se = ae,
  ne = re,
  ie = function (t, e) {
    return (e = e || {}).raw = !0, re(t, e);
  },
  _e = function (t, e) {
    return (e = e || {}).gzip = !0, re(t, e);
  },
  le = P,
  he = {
    Deflate: se,
    deflate: ne,
    deflateRaw: ie,
    gzip: _e,
    constants: le
  };

var initZstd = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  return function () {
    var moduleArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var Module = moduleArg;
    var readyPromiseResolve, readyPromiseReject;
    Module["ready"] = new Promise((resolve, reject) => {
      readyPromiseResolve = resolve;
      readyPromiseReject = reject;
    });
    ["_ZSTD_createCStream", "_ZSTD_freeCStream", "_ZSTD_CStreamInSize", "_ZSTD_CStreamOutSize", "_ZSTD_initCStream", "_ZSTD_compressStream2_simpleArgs", "_ZSTD_createCDict", "_ZSTD_freeCDict", "_ZSTD_CCtx_refCDict", "_malloc", "_free", "_memory", "_fflush", "___indirect_function_table", "onRuntimeInitialized"].forEach(prop => {
      if (!Object.getOwnPropertyDescriptor(Module["ready"], prop)) {
        Object.defineProperty(Module["ready"], prop, {
          get: () => abort("You are getting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),
          set: () => abort("You are setting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")
        });
      }
    });
    var moduleOverrides = Object.assign({}, Module);
    var ENVIRONMENT_IS_WORKER = false;
    var ENVIRONMENT_IS_NODE = false;
    var ENVIRONMENT_IS_SHELL = false;
    if (Module["ENVIRONMENT"]) {
      throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");
    }
    var scriptDirectory = "";
    function locateFile(path) {
      if (Module["locateFile"]) {
        return Module["locateFile"](path, scriptDirectory);
      }
      return scriptDirectory + path;
    }
    {
      if (typeof document != "undefined" && document.currentScript) {
        scriptDirectory = document.currentScript.src;
      }
      if (_scriptDir) {
        scriptDirectory = _scriptDir;
      }
      if (scriptDirectory.indexOf("blob:") !== 0) {
        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
      } else {
        scriptDirectory = "";
      }
      if (!(typeof window == "object" || typeof importScripts == "function")) throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
    }
    var out = Module["print"] || console.log.bind(console);
    var err = Module["printErr"] || console.error.bind(console);
    Object.assign(Module, moduleOverrides);
    moduleOverrides = null;
    checkIncomingModuleAPI();
    if (Module["arguments"]) Module["arguments"];
    legacyModuleProp("arguments", "arguments_");
    if (Module["thisProgram"]) Module["thisProgram"];
    legacyModuleProp("thisProgram", "thisProgram");
    if (Module["quit"]) Module["quit"];
    legacyModuleProp("quit", "quit_");
    assert(typeof Module["memoryInitializerPrefixURL"] == "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module["pthreadMainPrefixURL"] == "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module["cdInitializerPrefixURL"] == "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module["filePackagePrefixURL"] == "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");
    assert(typeof Module["read"] == "undefined", "Module.read option was removed (modify read_ in JS)");
    assert(typeof Module["readAsync"] == "undefined", "Module.readAsync option was removed (modify readAsync in JS)");
    assert(typeof Module["readBinary"] == "undefined", "Module.readBinary option was removed (modify readBinary in JS)");
    assert(typeof Module["setWindowTitle"] == "undefined", "Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)");
    assert(typeof Module["TOTAL_MEMORY"] == "undefined", "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");
    legacyModuleProp("asm", "wasmExports");
    legacyModuleProp("read", "read_");
    legacyModuleProp("readAsync", "readAsync");
    legacyModuleProp("readBinary", "readBinary");
    legacyModuleProp("setWindowTitle", "setWindowTitle");
    assert(!ENVIRONMENT_IS_WORKER, "worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.");
    assert(!ENVIRONMENT_IS_NODE, "node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.");
    assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");
    var wasmBinary;
    if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];
    legacyModuleProp("wasmBinary", "wasmBinary");
    Module["noExitRuntime"] || true;
    legacyModuleProp("noExitRuntime", "noExitRuntime");
    if (typeof WebAssembly != "object") {
      abort("no native wasm support detected");
    }
    var wasmMemory;
    var ABORT = false;
    function assert(condition, text) {
      if (!condition) {
        abort("Assertion failed" + (text ? ": " + text : ""));
      }
    }
    var HEAPU8, HEAPU32;
    function updateMemoryViews() {
      var b = wasmMemory.buffer;
      Module["HEAP8"] = new Int8Array(b);
      Module["HEAP16"] = new Int16Array(b);
      Module["HEAPU8"] = HEAPU8 = new Uint8Array(b);
      Module["HEAPU16"] = new Uint16Array(b);
      Module["HEAP32"] = new Int32Array(b);
      Module["HEAPU32"] = HEAPU32 = new Uint32Array(b);
      Module["HEAPF32"] = new Float32Array(b);
      Module["HEAPF64"] = new Float64Array(b);
    }
    assert(!Module["STACK_SIZE"], "STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time");
    assert(typeof Int32Array != "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, "JS engine does not provide full typed array support");
    assert(!Module["wasmMemory"], "Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally");
    assert(!Module["INITIAL_MEMORY"], "Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");
    function writeStackCookie() {
      var max = _emscripten_stack_get_end();
      assert((max & 3) == 0);
      if (max == 0) {
        max += 4;
      }
      HEAPU32[max >> 2] = 34821223;
      HEAPU32[max + 4 >> 2] = 2310721022;
      HEAPU32[0 >> 2] = 1668509029;
    }
    function checkStackCookie() {
      if (ABORT) return;
      var max = _emscripten_stack_get_end();
      if (max == 0) {
        max += 4;
      }
      var cookie1 = HEAPU32[max >> 2];
      var cookie2 = HEAPU32[max + 4 >> 2];
      if (cookie1 != 34821223 || cookie2 != 2310721022) {
        abort("Stack overflow! Stack cookie has been overwritten at ".concat(ptrToString(max), ", expected hex dwords 0x89BACDFE and 0x2135467, but received ").concat(ptrToString(cookie2), " ").concat(ptrToString(cookie1)));
      }
      if (HEAPU32[0 >> 2] != 1668509029) {
          abort("Runtime error: The application has corrupted its heap memory area (address zero)!");
        }
    }
    (function () {
      var h16 = new Int16Array(1);
      var h8 = new Int8Array(h16.buffer);
      h16[0] = 25459;
      if (h8[0] !== 115 || h8[1] !== 99) throw "Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)";
    })();
    var __ATPRERUN__ = [];
    var __ATINIT__ = [];
    var __ATPOSTRUN__ = [];
    var runtimeInitialized = false;
    function preRun() {
      if (Module["preRun"]) {
        if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];
        while (Module["preRun"].length) {
          addOnPreRun(Module["preRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPRERUN__);
    }
    function initRuntime() {
      assert(!runtimeInitialized);
      runtimeInitialized = true;
      checkStackCookie();
      callRuntimeCallbacks(__ATINIT__);
    }
    function postRun() {
      checkStackCookie();
      if (Module["postRun"]) {
        if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];
        while (Module["postRun"].length) {
          addOnPostRun(Module["postRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPOSTRUN__);
    }
    function addOnPreRun(cb) {
      __ATPRERUN__.unshift(cb);
    }
    function addOnInit(cb) {
      __ATINIT__.unshift(cb);
    }
    function addOnPostRun(cb) {
      __ATPOSTRUN__.unshift(cb);
    }
    assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");
    var runDependencies = 0;
    var runDependencyWatcher = null;
    var dependenciesFulfilled = null;
    var runDependencyTracking = {};
    function addRunDependency(id) {
      runDependencies++;
      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }
      if (id) {
        assert(!runDependencyTracking[id]);
        runDependencyTracking[id] = 1;
        if (runDependencyWatcher === null && typeof setInterval != "undefined") {
          runDependencyWatcher = setInterval(() => {
            if (ABORT) {
              clearInterval(runDependencyWatcher);
              runDependencyWatcher = null;
              return;
            }
            var shown = false;
            for (var dep in runDependencyTracking) {
              if (!shown) {
                shown = true;
                err("still waiting on run dependencies:");
              }
              err("dependency: ".concat(dep));
            }
            if (shown) {
              err("(end of list)");
            }
          }, 1e4);
        }
      } else {
        err("warning: run dependency added without ID");
      }
    }
    function removeRunDependency(id) {
      runDependencies--;
      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }
      if (id) {
        assert(runDependencyTracking[id]);
        delete runDependencyTracking[id];
      } else {
        err("warning: run dependency removed without ID");
      }
      if (runDependencies == 0) {
        if (runDependencyWatcher !== null) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
        }
        if (dependenciesFulfilled) {
          var callback = dependenciesFulfilled;
          dependenciesFulfilled = null;
          callback();
        }
      }
    }
    function abort(what) {
      if (Module["onAbort"]) {
        Module["onAbort"](what);
      }
      what = "Aborted(" + what + ")";
      err(what);
      ABORT = true;
      var e = new WebAssembly.RuntimeError(what);
      readyPromiseReject(e);
      throw e;
    }
    var FS = {
      error() {
        abort("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM");
      },
      init() {
        FS.error();
      },
      createDataFile() {
        FS.error();
      },
      createPreloadedFile() {
        FS.error();
      },
      createLazyFile() {
        FS.error();
      },
      open() {
        FS.error();
      },
      mkdev() {
        FS.error();
      },
      registerDevice() {
        FS.error();
      },
      analyzePath() {
        FS.error();
      },
      ErrnoError() {
        FS.error();
      }
    };
    Module["FS_createDataFile"] = FS.createDataFile;
    Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
    var dataURIPrefix = "data:application/octet-stream;base64,";
    function isDataURI(filename) {
      return filename.startsWith(dataURIPrefix);
    }
    function isFileURI(filename) {
      return filename.startsWith("file://");
    }
    function createExportWrapper(name) {
      return function () {
        assert(runtimeInitialized, "native function `".concat(name, "` called before runtime initialization"));
        var f = wasmExports[name];
        assert(f, "exported native function `".concat(name, "` not found"));
        return f.apply(null, arguments);
      };
    }
    var wasmBinaryFile;
    wasmBinaryFile = "data:application/octet-stream;base64,";
    if (!isDataURI(wasmBinaryFile)) {
      wasmBinaryFile = locateFile(wasmBinaryFile);
    }
    function getBinarySync(file) {
      if (file == wasmBinaryFile && wasmBinary) {
        return new Uint8Array(wasmBinary);
      }
      var binary = tryParseAsDataURI(file);
      if (binary) {
        return binary;
      }
      throw "both async and sync fetching of the wasm failed";
    }
    function getBinaryPromise(binaryFile) {
      return Promise.resolve().then(() => getBinarySync(binaryFile));
    }
    function instantiateArrayBuffer(binaryFile, imports, receiver) {
      return getBinaryPromise(binaryFile).then(binary => WebAssembly.instantiate(binary, imports)).then(instance => instance).then(receiver, reason => {
        err("failed to asynchronously prepare wasm: ".concat(reason));
        if (isFileURI(wasmBinaryFile)) {
          err("warning: Loading from a file URI (".concat(wasmBinaryFile, ") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing"));
        }
        abort(reason);
      });
    }
    function instantiateAsync(binary, binaryFile, imports, callback) {
      return instantiateArrayBuffer(binaryFile, imports, callback);
    }
    function createWasm() {
      var info = {
        "env": wasmImports,
        "wasi_snapshot_preview1": wasmImports
      };
      function receiveInstance(instance, module) {
        wasmExports = instance.exports;
        wasmMemory = wasmExports["memory"];
        assert(wasmMemory, "memory not found in wasm exports");
        updateMemoryViews();
        addOnInit(wasmExports["__wasm_call_ctors"]);
        removeRunDependency("wasm-instantiate");
        return wasmExports;
      }
      addRunDependency("wasm-instantiate");
      var trueModule = Module;
      function receiveInstantiationResult(result) {
        assert(Module === trueModule, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");
        trueModule = null;
        receiveInstance(result["instance"]);
      }
      if (Module["instantiateWasm"]) {
        try {
          return Module["instantiateWasm"](info, receiveInstance);
        } catch (e) {
          err("Module.instantiateWasm callback failed with error: ".concat(e));
          readyPromiseReject(e);
        }
      }
      instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);
      return {};
    }
    function legacyModuleProp(prop, newName) {
      var incomming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      if (!Object.getOwnPropertyDescriptor(Module, prop)) {
        Object.defineProperty(Module, prop, {
          configurable: true,
          get() {
            var extra = incomming ? " (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)" : "";
            abort("`Module.".concat(prop, "` has been replaced by `").concat(newName, "`") + extra);
          }
        });
      }
    }
    function ignoredModuleProp(prop) {
      if (Object.getOwnPropertyDescriptor(Module, prop)) {
        abort("`Module.".concat(prop, "` was supplied but `").concat(prop, "` not included in INCOMING_MODULE_JS_API"));
      }
    }
    function isExportedByForceFilesystem(name) {
      return name === "FS_createPath" || name === "FS_createDataFile" || name === "FS_createPreloadedFile" || name === "FS_unlink" || name === "addRunDependency" || name === "FS_createLazyFile" || name === "FS_createDevice" || name === "removeRunDependency";
    }
    function missingGlobal(sym, msg) {
      if (typeof globalThis !== "undefined") {
        Object.defineProperty(globalThis, sym, {
          configurable: true,
          get() {
            warnOnce("`" + sym + "` is not longer defined by emscripten. " + msg);
            return undefined;
          }
        });
      }
    }
    missingGlobal("buffer", "Please use HEAP8.buffer or wasmMemory.buffer");
    missingGlobal("asm", "Please use wasmExports instead");
    function missingLibrarySymbol(sym) {
      if (typeof globalThis !== "undefined" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {
        Object.defineProperty(globalThis, sym, {
          configurable: true,
          get() {
            var msg = "`" + sym + "` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line";
            var librarySymbol = sym;
            if (!librarySymbol.startsWith("_")) {
              librarySymbol = "$" + sym;
            }
            msg += " (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='" + librarySymbol + "')";
            if (isExportedByForceFilesystem(sym)) {
              msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
            }
            warnOnce(msg);
            return undefined;
          }
        });
      }
      unexportedRuntimeSymbol(sym);
    }
    function unexportedRuntimeSymbol(sym) {
      if (!Object.getOwnPropertyDescriptor(Module, sym)) {
        Object.defineProperty(Module, sym, {
          configurable: true,
          get() {
            var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)";
            if (isExportedByForceFilesystem(sym)) {
              msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
            }
            abort(msg);
          }
        });
      }
    }
    var callRuntimeCallbacks = callbacks => {
      while (callbacks.length > 0) {
        callbacks.shift()(Module);
      }
    };
    var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : undefined;
    var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {
      var endIdx = idx + maxBytesToRead;
      var endPtr = idx;
      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
      }
      var str = "";
      while (idx < endPtr) {
        var u0 = heapOrArray[idx++];
        if (!(u0 & 128)) {
          str += String.fromCharCode(u0);
          continue;
        }
        var u1 = heapOrArray[idx++] & 63;
        if ((u0 & 224) == 192) {
          str += String.fromCharCode((u0 & 31) << 6 | u1);
          continue;
        }
        var u2 = heapOrArray[idx++] & 63;
        if ((u0 & 240) == 224) {
          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
        } else {
          if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte " + ptrToString(u0) + " encountered when deserializing a UTF-8 string in wasm memory to a JS string!");
          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
        }
        if (u0 < 65536) {
          str += String.fromCharCode(u0);
        } else {
          var ch = u0 - 65536;
          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
        }
      }
      return str;
    };
    var UTF8ToString = (ptr, maxBytesToRead) => {
      assert(typeof ptr == "number");
      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
    };
    var ptrToString = ptr => {
      assert(typeof ptr === "number");
      ptr >>>= 0;
      return "0x" + ptr.toString(16).padStart(8, "0");
    };
    var warnOnce = text => {
      if (!warnOnce.shown) warnOnce.shown = {};
      if (!warnOnce.shown[text]) {
        warnOnce.shown[text] = 1;
        err(text);
      }
    };
    var ___assert_fail = (condition, filename, line, func) => {
      abort("Assertion failed: ".concat(UTF8ToString(condition), ", at: ") + [filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function"]);
    };
    var _abort = () => {
      abort("native code called abort()");
    };
    var getHeapMax = () => 2147483648;
    var growMemory = size => {
      var b = wasmMemory.buffer;
      var pages = (size - b.byteLength + 65535) / 65536;
      try {
        wasmMemory.grow(pages);
        updateMemoryViews();
        return 1;
      }  catch (e) {
        err("growMemory: Attempted to grow heap from ".concat(b.byteLength, " bytes to ").concat(size, " bytes, but got error: ").concat(e));
      }
    };
    var _emscripten_resize_heap = requestedSize => {
      var oldSize = HEAPU8.length;
      requestedSize >>>= 0;
      assert(requestedSize > oldSize);
      var maxHeapSize = getHeapMax();
      if (requestedSize > maxHeapSize) {
        err("Cannot enlarge memory, requested ".concat(requestedSize, " bytes, but the limit is ").concat(maxHeapSize, " bytes!"));
        return false;
      }
      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;
      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
        var replacement = growMemory(newSize);
        if (replacement) {
          return true;
        }
      }
      err("Failed to grow the heap from ".concat(oldSize, " bytes to ").concat(newSize, " bytes, not enough memory!"));
      return false;
    };
    var _fd_close = fd => {
      abort("fd_close called without SYSCALLS_REQUIRE_FILESYSTEM");
    };
    var convertI32PairToI53Checked = (lo, hi) => {
      assert(lo == lo >>> 0 || lo == (lo | 0));
      assert(hi === (hi | 0));
      return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;
    };
    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
      convertI32PairToI53Checked(offset_low, offset_high);
      return 70;
    }
    var printCharBuffers = [null, [], []];
    var printChar = (stream, curr) => {
      var buffer = printCharBuffers[stream];
      assert(buffer);
      if (curr === 0 || curr === 10) {
        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
        buffer.length = 0;
      } else {
        buffer.push(curr);
      }
    };
    var _fd_write = (fd, iov, iovcnt, pnum) => {
      var num = 0;
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAPU32[iov >> 2];
        var len = HEAPU32[iov + 4 >> 2];
        iov += 8;
        for (var j = 0; j < len; j++) {
          printChar(fd, HEAPU8[ptr + j]);
        }
        num += len;
      }
      HEAPU32[pnum >> 2] = num;
      return 0;
    };
    function checkIncomingModuleAPI() {
      ignoredModuleProp("fetchSettings");
    }
    var wasmImports = {
      __assert_fail: ___assert_fail,
      abort: _abort,
      emscripten_resize_heap: _emscripten_resize_heap,
      fd_close: _fd_close,
      fd_seek: _fd_seek,
      fd_write: _fd_write
    };
    var wasmExports = createWasm();
    Module["_malloc"] = createExportWrapper("malloc");
    Module["_free"] = createExportWrapper("free");
    Module["_ZSTD_freeCDict"] = createExportWrapper("ZSTD_freeCDict");
    Module["_ZSTD_CCtx_refCDict"] = createExportWrapper("ZSTD_CCtx_refCDict");
    Module["_ZSTD_compressStream2_simpleArgs"] = createExportWrapper("ZSTD_compressStream2_simpleArgs");
    Module["_ZSTD_createCDict"] = createExportWrapper("ZSTD_createCDict");
    Module["_ZSTD_createCStream"] = createExportWrapper("ZSTD_createCStream");
    Module["_ZSTD_freeCStream"] = createExportWrapper("ZSTD_freeCStream");
    Module["_ZSTD_CStreamInSize"] = createExportWrapper("ZSTD_CStreamInSize");
    Module["_ZSTD_CStreamOutSize"] = createExportWrapper("ZSTD_CStreamOutSize");
    Module["_ZSTD_initCStream"] = createExportWrapper("ZSTD_initCStream");
    Module["_fflush"] = createExportWrapper("fflush");
    var _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports["emscripten_stack_init"])();
    var _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports["emscripten_stack_get_end"])();
    Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");
    function intArrayFromBase64(s) {
      try {
        var decoded = atob(s);
        var bytes = new Uint8Array(decoded.length);
        for (var i = 0; i < decoded.length; ++i) {
          bytes[i] = decoded.charCodeAt(i);
        }
        return bytes;
      } catch (_) {
        throw new Error("Converting base64 string to bytes failed.");
      }
    }
    function tryParseAsDataURI(filename) {
      if (!isDataURI(filename)) {
        return;
      }
      return intArrayFromBase64(filename.slice(dataURIPrefix.length));
    }
    var missingLibrarySymbols = ["writeI53ToI64", "writeI53ToI64Clamped", "writeI53ToI64Signaling", "writeI53ToU64Clamped", "writeI53ToU64Signaling", "readI53FromI64", "readI53FromU64", "convertI32PairToI53", "convertU32PairToI53", "zeroMemory", "exitJS", "isLeapYear", "ydayFromDate", "arraySum", "addDays", "setErrNo", "inetPton4", "inetNtop4", "inetPton6", "inetNtop6", "readSockaddr", "writeSockaddr", "getHostByName", "initRandomFill", "randomFill", "getCallstack", "emscriptenLog", "convertPCtoSourceLocation", "readEmAsmArgs", "jstoi_q", "jstoi_s", "getExecutableName", "listenOnce", "autoResumeAudioContext", "dynCallLegacy", "getDynCaller", "dynCall", "setWasmTableEntry", "getWasmTableEntry", "handleException", "runtimeKeepalivePush", "runtimeKeepalivePop", "callUserCallback", "maybeExit", "safeSetTimeout", "asmjsMangle", "asyncLoad", "alignMemory", "mmapAlloc", "handleAllocatorInit", "HandleAllocator", "getNativeTypeSize", "STACK_SIZE", "STACK_ALIGN", "POINTER_SIZE", "ASSERTIONS", "getCFunc", "ccall", "cwrap", "uleb128Encode", "sigToWasmTypes", "generateFuncType", "convertJsFunctionToWasm", "getEmptyTableSlot", "updateTableMap", "getFunctionAddress", "addFunction", "removeFunction", "reallyNegative", "unSign", "strLen", "reSign", "formatString", "intArrayFromString", "intArrayToString", "AsciiToString", "stringToAscii", "UTF16ToString", "stringToUTF16", "lengthBytesUTF16", "UTF32ToString", "stringToUTF32", "lengthBytesUTF32", "stringToNewUTF8", "writeArrayToMemory", "registerKeyEventCallback", "maybeCStringToJsString", "findEventTarget", "findCanvasEventTarget", "getBoundingClientRect", "fillMouseEventData", "registerMouseEventCallback", "registerWheelEventCallback", "registerUiEventCallback", "registerFocusEventCallback", "fillDeviceOrientationEventData", "registerDeviceOrientationEventCallback", "fillDeviceMotionEventData", "registerDeviceMotionEventCallback", "screenOrientation", "fillOrientationChangeEventData", "registerOrientationChangeEventCallback", "fillFullscreenChangeEventData", "registerFullscreenChangeEventCallback", "JSEvents_requestFullscreen", "JSEvents_resizeCanvasForFullscreen", "registerRestoreOldStyle", "hideEverythingExceptGivenElement", "restoreHiddenElements", "setLetterbox", "softFullscreenResizeWebGLRenderTarget", "doRequestFullscreen", "fillPointerlockChangeEventData", "registerPointerlockChangeEventCallback", "registerPointerlockErrorEventCallback", "requestPointerLock", "fillVisibilityChangeEventData", "registerVisibilityChangeEventCallback", "registerTouchEventCallback", "fillGamepadEventData", "registerGamepadEventCallback", "registerBeforeUnloadEventCallback", "fillBatteryEventData", "battery", "registerBatteryEventCallback", "setCanvasElementSize", "getCanvasElementSize", "getEnvStrings", "checkWasiClock", "wasiRightsToMuslOFlags", "wasiOFlagsToMuslOFlags", "createDyncallWrapper", "setImmediateWrapped", "clearImmediateWrapped", "polyfillSetImmediate", "getPromise", "makePromise", "idsToPromises", "makePromiseCallback", "ExceptionInfo", "findMatchingCatch", "setMainLoop", "getSocketFromFD", "getSocketAddress", "FS_createPreloadedFile", "FS_modeStringToFlags", "FS_getMode", "FS_stdin_getChar", "FS_createDataFile", "FS_unlink", "FS_mkdirTree", "_setNetworkCallback", "heapObjectForWebGLType", "heapAccessShiftForWebGLHeap", "webgl_enable_ANGLE_instanced_arrays", "webgl_enable_OES_vertex_array_object", "webgl_enable_WEBGL_draw_buffers", "webgl_enable_WEBGL_multi_draw", "emscriptenWebGLGet", "computeUnpackAlignedImageSize", "colorChannelsInGlTextureFormat", "emscriptenWebGLGetTexPixelData", "__glGenObject", "emscriptenWebGLGetUniform", "webglGetUniformLocation", "webglPrepareUniformLocationsBeforeFirstUse", "webglGetLeftBracePos", "emscriptenWebGLGetVertexAttrib", "__glGetActiveAttribOrUniform", "writeGLArray", "registerWebGlEventCallback", "runAndAbortIfError", "SDL_unicode", "SDL_ttfContext", "SDL_audio", "ALLOC_NORMAL", "ALLOC_STACK", "allocate", "writeStringToMemory", "writeAsciiToMemory"];
    missingLibrarySymbols.forEach(missingLibrarySymbol);
    var unexportedSymbols = ["run", "addOnPreRun", "addOnInit", "addOnPreMain", "addOnExit", "addOnPostRun", "addRunDependency", "removeRunDependency", "FS_createFolder", "FS_createPath", "FS_createLazyFile", "FS_createLink", "FS_createDevice", "FS_readFile", "out", "err", "callMain", "abort", "keepRuntimeAlive", "wasmMemory", "wasmExports", "stackAlloc", "stackSave", "stackRestore", "getTempRet0", "setTempRet0", "writeStackCookie", "checkStackCookie", "intArrayFromBase64", "tryParseAsDataURI", "convertI32PairToI53Checked", "ptrToString", "getHeapMax", "growMemory", "ENV", "MONTH_DAYS_REGULAR", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR_CUMULATIVE", "MONTH_DAYS_LEAP_CUMULATIVE", "ERRNO_CODES", "ERRNO_MESSAGES", "DNS", "Protocols", "Sockets", "timers", "warnOnce", "UNWIND_CACHE", "readEmAsmArgsArray", "wasmTable", "freeTableIndexes", "functionsInTableMap", "setValue", "getValue", "PATH", "PATH_FS", "UTF8Decoder", "UTF8ArrayToString", "UTF8ToString", "stringToUTF8Array", "stringToUTF8", "lengthBytesUTF8", "UTF16Decoder", "stringToUTF8OnStack", "JSEvents", "specialHTMLTargets", "currentFullscreenStrategy", "restoreOldWindowedStyle", "demangle", "demangleAll", "jsStackTrace", "stackTrace", "ExitStatus", "flush_NO_FILESYSTEM", "promiseMap", "uncaughtExceptionCount", "exceptionLast", "exceptionCaught", "Browser", "wget", "SYSCALLS", "preloadPlugins", "FS_stdin_getChar_buffer", "FS", "MEMFS", "TTY", "PIPEFS", "SOCKFS", "tempFixedLengthArray", "miniTempWebGLFloatBuffers", "miniTempWebGLIntBuffers", "GL", "emscripten_webgl_power_preferences", "AL", "GLUT", "EGL", "GLEW", "IDBStore", "SDL", "SDL_gfx", "allocateUTF8", "allocateUTF8OnStack"];
    unexportedSymbols.forEach(unexportedRuntimeSymbol);
    var calledRun;
    dependenciesFulfilled = function runCaller() {
      if (!calledRun) run();
      if (!calledRun) dependenciesFulfilled = runCaller;
    };
    function stackCheckInit() {
      _emscripten_stack_init();
      writeStackCookie();
    }
    function run() {
      if (runDependencies > 0) {
        return;
      }
      stackCheckInit();
      preRun();
      if (runDependencies > 0) {
        return;
      }
      function doRun() {
        if (calledRun) return;
        calledRun = true;
        Module["calledRun"] = true;
        if (ABORT) return;
        initRuntime();
        readyPromiseResolve(Module);
        if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
        assert(!Module["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
        postRun();
      }
      if (Module["setStatus"]) {
        Module["setStatus"]("Running...");
        setTimeout(function () {
          setTimeout(function () {
            Module["setStatus"]("");
          }, 1);
          doRun();
        }, 1);
      } else {
        doRun();
      }
      checkStackCookie();
    }
    if (Module["preInit"]) {
      if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];
      while (Module["preInit"].length > 0) {
        Module["preInit"].pop()();
      }
    }
    run();
    return moduleArg.ready;
  };
})();

let pakoInstances = {};
let zstdInstances = {};
const ZSTD_COMPRESSION_LEVEL = 3;
let zstd;
let useZstd = false;
let loadingZstd = null;
let zstdCommonState;
let zstdDicts = {};
let zstdRawDicts = {};
let zstdDictFileId = '';
function init$5() {
    if (config.enabledFeatures.compressV2 && config.enabledFeatures.zstd && !zstd && config.reporter === window.__webviewId__) {
        if (isWasmSupported()) {
            try {
                loadingZstd = initZstd()
                    .then(_zstd => {
                    useZstd = true;
                    zstd = _zstd;
                    loadingZstd = null;
                    initZstdCommonState();
                    if (!Object.keys(zstdDicts).length && Object.keys(zstdRawDicts).length) {
                        initZstdDicts({
                            dictId: zstdDictFileId,
                            dicts: zstdRawDicts,
                        });
                    }
                    wxConsole.log(`[tel] zstd init done`);
                })
                    .catch(err => {
                    wxConsole.warn(`[tel] zstd init async fail`, err);
                    useZstd = false;
                });
            }
            catch (err) {
                wxConsole.warn(`[tel] zstd init sync fail`, err);
                useZstd = false;
            }
        }
    }
}
function reset$h() {
    if (zstdCommonState) {
        zstd._free(zstdCommonState.inOutBufferPtr);
    }
    for (const channel in zstdDicts) {
        zstd._ZSTD_freeCDict(zstdDicts[channel]);
    }
    zstd = undefined;
    zstdDicts = {};
    zstdRawDicts = {};
    zstdDictFileId = '';
    zstdInstances = {};
    pakoInstances = {};
}
function initZstdCommonState() {
    const buffInSize = zstd._ZSTD_CStreamInSize();
    const buffOutSize = zstd._ZSTD_CStreamOutSize();
    const inOutBufferPtr = zstd._malloc(buffInSize + buffOutSize + 8);
    const buffIn = new Uint8Array(zstd.HEAPU8.buffer, 8 + inOutBufferPtr, buffInSize);
    const buffOut = new Uint8Array(zstd.HEAPU8.buffer, 8 + inOutBufferPtr + buffInSize, buffOutSize);
    const buffInPos = new Int32Array(zstd.HEAPU8.buffer, inOutBufferPtr, 1);
    const buffOutPos = new Int32Array(zstd.HEAPU8.buffer, inOutBufferPtr + 4, 1);
    zstdCommonState = {
        buffInSize,
        buffOutSize,
        inOutBufferPtr,
        buffIn,
        buffOut,
        buffInPos,
        buffOutPos,
    };
}
function initZstdDicts(options) {
    const { dictId, dicts } = options;
    zstdDictFileId = dictId;
    zstdRawDicts = dicts;
    if (config.reporter !== window.__webviewId__)
        return;
    schedule({
        fn: async (task) => {
            setTimeout(() => task.done());
            wxConsole.log(`[tel] initZstdDicts start`, typeof zstd);
            if (loadingZstd) {
                await loadingZstd;
            }
            for (const channel in dicts) {
                const byteLength = dicts[channel].byteLength;
                const inputBufPtr = zstd._malloc(byteLength);
                try {
                    const ts = Date.now();
                    const inputBuf = new Uint8Array(zstd.HEAPU8.buffer, inputBufPtr, byteLength);
                    inputBuf.set(dicts[channel]);
                    const cdict = zstd._ZSTD_createCDict(inputBufPtr, byteLength, ZSTD_COMPRESSION_LEVEL);
                    zstdDicts[channel] = cdict;
                    wxConsole.log(`[tel] zstd create dict for channel ${channel} cost`, Date.now() - ts);
                }
                catch (e) {
                    wxConsole.warn(`[tel] zstd init dict for channel ${channel} fail`, e);
                }
                finally {
                    zstd._free(inputBufPtr);
                }
            }
            wxConsole.log(`[tel] initZstdDicts done`);
        },
        desc: 'initZstdDicts',
    });
}
function compress(binary) {
    if (binary instanceof Uint8Array) {
        return schedule({
            fn: _compress.bind(null, binary),
            desc: 'compress',
        });
    }
    else {
        return schedule({
            fn: _statefulCompress.bind(null, binary),
            desc: 'compress',
        });
    }
}
async function _compress(binary, task) {
    const timer = startTiming();
    const userAgent = window.navigator.userAgent;
    const isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(userAgent);
    let compressed;
    if (window.__compress_stub__) {
        compressed = await window.__compress_stub__(binary);
    }
    else if (window.CompressionStream && !isAppleDevice) {
        const stream = new Response(binary).body.pipeThrough(new window.CompressionStream('deflate'));
        const ab = await new Response(stream).arrayBuffer();
        compressed = new Uint8Array(ab);
    }
    else {
        compressed = zlibSync(binary);
    }
    const cost = timer.end();
    wxConsole.log(`[tel] [perf] compress (${binary.length},${compressed.length})`, cost);
    addDataPoint(MetricType.CompressCost, cost);
    addDataPoint(MetricType.CompressV1Cost, cost);
    task.done({
        compressed,
    });
}
function _statefulCompress(bins, task) {
    wxConsole.log(`[tel] _sc`, bins, pakoInstances);
    if (useZstd && loadingZstd) {
        useZstd = false;
    }
    const timer = startTiming();
    const currentChannels = {};
    const batchesWrap = {
        batches: [],
        compressChannelInstanceIds: [],
        compressChannelInstanceSeqs: [],
        compressChannelInstanceLengths: [],
    };
    let usingZstdDict = false;
    let inputSize = 0;
    for (const channel in bins) {
        inputSize += bins[channel].length;
        if (useZstd) {
            if (!zstdInstances[channel] || zstdInstances[channel].status !== CompressStatus.Uploaded) {
                if (zstdInstances[channel]) {
                    zstd._ZSTD_freeCStream(zstdInstances[channel]);
                }
                zstdInstances[channel] = {
                    id: newInstanceId(channel),
                    instance: newZstdInstance(channel),
                    seq: 1,
                    status: CompressStatus.Compressing,
                    withDict: Boolean(zstdDicts[COMPRESS_CHANNEL_TAGS[channel] || channel]),
                };
            }
            else {
                zstdInstances[channel].seq++;
                zstdInstances[channel].status = CompressStatus.Compressing;
            }
            currentChannels[channel] = {
                id: zstdInstances[channel].id,
                seq: zstdInstances[channel].seq,
            };
            const ins = zstdInstances[channel].instance;
            let result;
            try {
                result = zstdCompress(ins, bins[channel]);
                usingZstdDict = usingZstdDict || zstdInstances[channel].withDict;
            }
            catch (err) {
                useZstd = false;
                handleError({
                    type: ErrorType.CompressError,
                    e: err,
                });
                count(MetricType.ZstdCompressErr);
                return _statefulCompress(bins, task);
            }
            batchesWrap.batches.push(result);
            batchesWrap.compressChannelInstanceIds.push(zstdInstances[channel].id);
            batchesWrap.compressChannelInstanceSeqs.push(zstdInstances[channel].seq);
            batchesWrap.compressChannelInstanceLengths.push(bins[channel].length);
            zstdInstances[channel].status = CompressStatus.Compressed;
            continue;
        }
        if (!pakoInstances[channel] || pakoInstances[channel].status !== CompressStatus.Uploaded) {
            pakoInstances[channel] = {
                id: newInstanceId(channel),
                instance: new he.Deflate(),
                seq: 1,
                status: CompressStatus.Compressing,
            };
        }
        else {
            pakoInstances[channel].seq++;
            pakoInstances[channel].status = CompressStatus.Compressing;
        }
        currentChannels[channel] = {
            id: pakoInstances[channel].id,
            seq: pakoInstances[channel].seq,
        };
        const ins = pakoInstances[channel].instance;
        const chunks = [];
        let totalLength = 0;
        ins.onData = chunk => {
            chunks.push(chunk);
            totalLength += chunk.length;
        };
        ins.push(bins[channel], he.constants.Z_SYNC_FLUSH);
        let result;
        if (chunks.length === 1) {
            result = chunks[0];
        }
        else {
            result = new Uint8Array(totalLength);
            let offset = 0;
            for (const chunk of chunks) {
                result.set(chunk, offset);
                offset += chunk.length;
            }
        }
        batchesWrap.batches.push(result);
        batchesWrap.compressChannelInstanceIds.push(pakoInstances[channel].id);
        batchesWrap.compressChannelInstanceSeqs.push(pakoInstances[channel].seq);
        batchesWrap.compressChannelInstanceLengths.push(bins[channel].length);
        pakoInstances[channel].status = CompressStatus.Compressed;
    }
    const batchEncoded = BatchEncodedPayloads.encode(batchesWrap).finish();
    const cost = timer.end();
    wxConsole.log(`[tel] [perf] compress (${inputSize},${batchEncoded.byteLength})`, cost);
    addDataPoint(MetricType.CompressCost, cost);
    addDataPoint(MetricType.CompressV2Cost, cost);
    const result = {
        spec: useZstd ? (usingZstdDict ? `2.1/${zstdDictFileId}` : '2.1') : '2.0',
        compressed: batchEncoded,
        onUploadSuccess: () => {
            for (const channel in currentChannels) {
                const snapshot = currentChannels[channel];
                const latest = useZstd ? zstdInstances[channel] : pakoInstances[channel];
                if (snapshot.id === latest.id && snapshot.seq === latest.seq) {
                    latest.status = CompressStatus.Uploaded;
                }
            }
        },
    };
    task?.done(result);
    return result;
}
function compressSync(binary) {
    if (config.enabledFeatures.compressV2) {
        return _statefulCompress(binary);
    }
    else {
        const timer = startTiming();
        const compressed = zlibSync(binary);
        wxConsole.log(`[tel] [perf] compress (${binary.length},${compressed.length})`, timer.end());
        return {
            compressed,
        };
    }
}
function newInstanceId(channel) {
    const tag = COMPRESS_CHANNEL_TAGS[channel] || channel;
    return `${tag}${Math.random().toString().slice(2)}`;
}
function newZstdInstance(channel) {
    const cctx = zstd._ZSTD_createCStream();
    const tag = COMPRESS_CHANNEL_TAGS[channel] || channel;
    if (zstdDicts[tag]) {
        zstd._ZSTD_CCtx_refCDict(cctx, zstdDicts[tag]);
    }
    return cctx;
}
function zstdCompress(cctx, input) {
    if (!zstdCommonState.buffOut.byteLength) {
        initZstdCommonState();
    }
    const { buffIn, buffInPos, buffOut, buffOutPos } = zstdCommonState;
    const compressed = [];
    let compressedByteLength = 0;
    for (let i = 0; i < input.byteLength; i += buffIn.byteLength) {
        const chunk = input.slice(i, i + buffIn.byteLength);
        buffIn.set(chunk);
        const lastChunk = input.byteLength === i + chunk.byteLength;
        let finished = false;
        let quota = 10;
        while (!finished && quota-- > 0) {
            buffOutPos[0] = 0;
            buffInPos[0] = 0;
            const remaining = zstd._ZSTD_compressStream2_simpleArgs(cctx, buffOut.byteOffset, buffOut.byteLength, buffOutPos.byteOffset, buffIn.byteOffset, chunk.byteLength, buffInPos.byteOffset, lastChunk ? 1 : 0);
            if (remaining < 0) {
                throw new Error(`zstd compress fail with code ${remaining}`);
            }
            const compressedChunk = buffOut.slice(0, buffOutPos[0]);
            compressedByteLength += buffOutPos[0];
            compressed.push(compressedChunk);
            finished = lastChunk ? remaining === 0 : buffInPos[0] === chunk.byteLength;
        }
        if (!finished) {
            count(MetricType.ZstdCompressExceedLoopQuota);
            throw new Error('zstd compress failed');
        }
    }
    const compressedU8 = new Uint8Array(compressedByteLength);
    for (let i = 0, offset = 0; i < compressed.length; i++) {
        compressedU8.set(compressed[i], offset);
        offset += compressed[i].byteLength;
    }
    return compressedU8;
}
const COMPRESS_CHANNELS = {
    INIT_NODES: 'initNodes',
    ADDED_NODES: 'addedNodes',
    MEMO: 'memo',
    DEFAULT: 'default',
};
const COMPRESS_CHANNEL_TAGS = {
    initNodes: 'i',
    addedNodes: 'a',
    memo: 'm',
    default: 'd',
};
var CompressStatus;
(function (CompressStatus) {
    CompressStatus[CompressStatus["Compressing"] = 0] = "Compressing";
    CompressStatus[CompressStatus["Compressed"] = 1] = "Compressed";
    CompressStatus[CompressStatus["Uploaded"] = 2] = "Uploaded";
})(CompressStatus || (CompressStatus = {}));

const isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(window.navigator.userAgent);
let remoteDictFileUrl = '';
let remoteDictFileShortId = '';
let remoteDictLoaded = false;
let loadingRemoteDict;
async function init$4() {
    if (!config.enabledFeatures.dict) {
        remoteDictLoaded = true;
        return;
    }
    loadingRemoteDict = initRemoteDict()
        .then(() => (remoteDictLoaded = true))
        .catch(e => {
        wxConsole.warn(`[tel] init dict failed`, e);
        remoteDictLoaded = true;
    });
    return loadingRemoteDict;
}
function reset$g() {
    remoteDictLoaded = false;
    loadingRemoteDict = undefined;
}
async function initRemoteDict() {
    wxConsole.log(`[tel] init dict ${config.cosInfo?.zstd_dict_url}`);
    const dictFileUrl = remoteDictFileUrl || config.cosInfo?.zstd_dict_url;
    if (!dictFileUrl) {
        return;
    }
    remoteDictFileUrl = dictFileUrl;
    const urlPathSegments = dictFileUrl.split('/');
    remoteDictFileShortId = urlPathSegments[urlPathSegments.length - 1];
    const dictCache = await getStorage(config.uuid).getDictMeta();
    if (dictCache?.key === dictFileUrl) {
        wxConsole.log(`[tel] use dict cache (${dictFileUrl})`);
        loadDicts(dictCache.dicts);
    }
    else if (config.reporter === window.__webviewId__) {
        wxConsole.log(`[tel] getting dict ${dictFileUrl}`);
        const ab = await (await fetch(dictFileUrl)).arrayBuffer();
        const kvs = decode$1(new Uint8Array(ab));
        const dictMeta = {
            type: 'dict',
            key: dictFileUrl,
            dicts: {},
        };
        for (const kv of kvs) {
            if (kv.key.startsWith('z:')) {
                dictMeta.dicts[kv.key] = kv.value;
            }
            else if (kv.key === 's:1') {
                if (window.DecompressionStream && !isAppleDevice) {
                    const stream = new Response(kv.value).body.pipeThrough(new window.DecompressionStream('deflate'));
                    const ab = await new Response(stream).arrayBuffer();
                    dictMeta.dicts[kv.key] = decode(new Uint8Array(ab)).map(utf8ArrayToStr);
                }
                else {
                    dictMeta.dicts[kv.key] = decode(unzlibSync(kv.value)).map(utf8ArrayToStr);
                }
            }
        }
        getStorage(config.uuid).updateDictMeta(dictMeta);
        loadDicts(dictMeta.dicts);
    }
}
async function loadDicts(dicts) {
    wxConsole.log(`[tel] loading dicts`);
    const zstdDicts = {};
    for (const key in dicts) {
        if (key.startsWith('z:')) {
            zstdDicts[key.slice(2)] = dicts[key];
        }
        else if (key === 's:1') {
            loadRemoteDict(dicts[key]);
            wxConsole.log(`[tel] memo dict loaded`, dicts[key].length);
        }
    }
    if (Object.keys(zstdDicts).length > 0) {
        initZstdDicts({
            dictId: remoteDictFileShortId,
            dicts: zstdDicts,
        });
    }
}
function hasRemoteDictLoaded() {
    return remoteDictLoaded;
}
function ensureRemoteDictLoaded() {
    if (remoteDictLoaded) {
        return true;
    }
    else if (loadingRemoteDict) {
        return loadingRemoteDict;
    }
    else {
        return true;
    }
}

let eventBuffer$e = [];
let enums = [];
let refMemoMap = {};
let reusableMemoLoaded = false;
let loadingResuableMemo;
let remoteDict = {};
const DomainInitCount = {
    [MemoDomain.CSSProperty]: 256,
};
const ReusableMemoDomains = new Set([
    MemoDomain.Is,
    MemoDomain.Tag,
    MemoDomain.Classname,
    MemoDomain.CSSProperty,
    MemoDomain.CSSPropertyValue,
    MemoDomain.NodeAttrKey,
    MemoDomain.NodeAttrValue,
    MemoDomain.NodeValue,
    MemoDomain.CompProperty,
    MemoDomain.CompPropertyValue,
    MemoDomain.ExpNodeValue,
]);
async function start$g() {
    if (config.enabledFeatures.reuseMemo) {
        loadingResuableMemo = loadReusableMemo();
        loadingResuableMemo.then(() => (reusableMemoLoaded = true)).catch(() => (reusableMemoLoaded = true));
    }
}
function memo(item) {
    eventBuffer$e.push(item);
    schedule({
        id: 'memo',
        fn: _transformToEncode$c,
        priority: Priority.High,
    });
}
function reset$f() {
    reusableMemoLoaded = false;
    loadingResuableMemo = undefined;
    eventBuffer$e = [];
    enums = [];
    refMemoMap = {};
    remoteDict = {};
}
function enumifyReturnItem(value, domain) {
    if (!enums[domain]) {
        enums[domain] = {
            count: DomainInitCount[domain] || 0,
            map: {},
        };
    }
    const e = enums[domain];
    if (e.map[value]) {
        return {
            id: e.map[value],
        };
    }
    e.count++;
    e.map[value] = e.count;
    const event = {
        domain: domain,
        keyInt: e.count,
        value: value,
    };
    return {
        id: e.count,
        event,
    };
}
async function saveBatchMemoEvent(event) {
    const ensureList = [];
    if (!hasReusableMemoLoaded()) {
        wxConsole.log('[tel] memo waiting reusable info');
        ensureList.push(ensureReusableMemoLoaded());
    }
    if (!hasRemoteDictLoaded()) {
        wxConsole.log('[tel] memo waiting dict info');
        ensureList.push(ensureRemoteDictLoaded());
    }
    if (ensureList.length > 0) {
        await Promise.all(ensureList);
        wxConsole.log('[tel] wait dict done');
    }
    optimizeBatchMemoEvent(event);
    save([event]);
}
function optimizeBatchMemoEvent(event) {
    if (event.memos?.length) {
        event.memos.sort((a, b) => a.domain - b.domain);
        let lastDomain = event.memos[0].domain;
        let lastKeyInt = event.memos[0].keyInt;
        let lastRefWebview;
        for (let i = 0; i < event.memos.length; i++) {
            const cur = event.memos[i];
            if (remoteDict[cur.value]) {
                cur.refRemote = remoteDict[cur.value];
                cur.value = undefined;
            }
            else {
                const ref = cur.value && cur.value.length >= 4 ? refMemoMap[cur.domain]?.[cur.value] : undefined;
                if (ref) {
                    cur.value = undefined;
                    cur.refWebview = ref.webviewId === lastRefWebview ? undefined : ref.webviewId;
                    cur.refKey = ref.key;
                    lastRefWebview = ref.webviewId;
                }
            }
            if (i === 0)
                continue;
            if (cur.domain === lastDomain) {
                cur.domain = undefined;
                if (lastKeyInt && lastKeyInt + 1 === cur.keyInt) {
                    cur.keyInt = undefined;
                    lastKeyInt++;
                }
                else {
                    lastKeyInt = cur.keyInt;
                }
            }
            else {
                lastDomain = cur.domain;
            }
        }
    }
}
async function loadReusableMemo() {
    try {
        const storedEvents = await getStorage(config.uuid).getCurrentSessionReusableMemos();
        for (const storedEvent of storedEvents) {
            const { webviewId, events } = storedEvent;
            for (const event of events) {
                if (event.type === EventType.Memo) {
                    let lastMemo;
                    for (const memo of event.memos) {
                        if (lastMemo && !memo.domain) {
                            memo.domain = lastMemo.domain;
                            if (!memo.keyInt) {
                                memo.keyInt = lastMemo.keyInt + 1;
                            }
                        }
                        lastMemo = memo;
                        if (!ReusableMemoDomains.has(memo.domain))
                            continue;
                        if (!refMemoMap[memo.domain]) {
                            refMemoMap[memo.domain] = {};
                        }
                        if (memo.value && !refMemoMap[memo.domain][memo.value]) {
                            refMemoMap[memo.domain][memo.value] = {
                                webviewId: webviewId,
                                key: memo.keyInt,
                            };
                        }
                    }
                }
            }
        }
    }
    catch (err) {
        wxConsole.error(`[tel] initMemo err: ${err}`);
    }
}
function hasReusableMemoLoaded() {
    return reusableMemoLoaded;
}
function ensureReusableMemoLoaded() {
    if (reusableMemoLoaded) {
        return true;
    }
    else if (loadingResuableMemo) {
        return loadingResuableMemo;
    }
    else {
        return true;
    }
}
function loadRemoteDict(list) {
    let id = 1;
    for (const str of list) {
        remoteDict[str] = id++;
    }
}
function _transformToEncode$c(task) {
    const memoEvent = {
        type: EventType.Memo,
        memos: eventBuffer$e.map(event => ({
            key: event.key,
            keyInt: event.keyInt,
            value: event.value,
            domain: event.domain,
        })),
    };
    save([memoEvent]);
    eventBuffer$e = [];
    task.done();
}

let eventBuffer$d = [];
function save(events, immediately = false) {
    presave(events);
    eventBuffer$d.push(...events);
    if (immediately) {
        _save();
    }
    else if (eventBuffer$d.length > 1000) {
        scheduleSave();
    }
    else {
        throttled();
    }
}
function _save() {
    wxConsole.debug(`[tel] save`, eventBuffer$d.length, eventBuffer$d);
    try {
        getStorage(config.uuid).saveEvents(eventBuffer$d);
        const reuseMemoEvents = [];
        for (const evt of eventBuffer$d) {
            if (evt.type === EventType.Memo && evt.memos?.some(m => ReusableMemoDomains.has(m.domain))) {
                reuseMemoEvents.push(evt);
            }
        }
        if (reuseMemoEvents.length > 0) {
            getStorage(config.uuid).saveSessionReusableMemo(reuseMemoEvents);
        }
        sum(MetricType.WebviewEvent, eventBuffer$d.length);
        eventBuffer$d = [];
    }
    catch (e) {
        wxConsole.error(`[tel] save error ${e}`);
        const lastTenEventTypes = eventBuffer$d
            .slice(-10)
            .map(evt => evt.type)
            .join(',');
        handleError({ type: ErrorType.SaveEventError, e, extra: lastTenEventTypes });
        if (!config.uuid) {
            return;
        }
        const savedEvents = [];
        let failedCount = 0;
        for (const evt of eventBuffer$d) {
            try {
                getStorage(config.uuid).saveEvents([evt]);
                savedEvents.push(evt);
                if (evt.type === EventType.Memo && evt.memos?.some(m => ReusableMemoDomains.has(m.domain))) {
                    getStorage(config.uuid).saveSessionReusableMemo([evt]);
                }
            }
            catch (err) {
                failedCount++;
            }
        }
        sum(MetricType.WebviewEvent, savedEvents.length);
        sum(MetricType.WebviewEventSaveFailed, failedCount);
        eventBuffer$d = eventBuffer$d.filter(evt => !savedEvents.includes(evt));
        if (savedEvents.length > 0) {
            wxConsole.log(`[tel] saved ${savedEvents.length} events individually`);
        }
        if (eventBuffer$d.length > 0) {
            wxConsole.warn(`[tel] ${eventBuffer$d.length} events failed to save`);
        }
    }
}
function saveTask(task) {
    _save();
    task.done();
}
function scheduleSave() {
    schedule({
        id: 'save',
        fn: saveTask,
    });
}
const throttled = throttle(scheduleSave, 100, {
    leading: false,
});
function presave(evts) {
    for (const evt of evts) {
        if (!evt.timestamp) {
            evt.timestamp = (evt.elapsedTime ?? 0) + getBaseTime();
        }
        evt.networkStatus = config.networkStatus;
    }
}
window.__tel_BatchPayload__ = BatchPayload;

const config = {
    maskClass: 'wxobs-mask',
    unmaskClass: 'wxobs-unmask',
    excludeClass: 'wxobs-exclude',
    collectFileClass: 'wxobs-collect-file',
    exposureSelectorList: [],
    pluginList: [],
    reportInterval: 5000,
    serverClientTimeDiff: 0,
    iframe: false,
    weSessionId: null,
    wesessionMeta: {
        wesessionScene: 0,
        wesessionSceneNote: '',
        isWesessionEntrance: 0,
        weSessionId: '',
        openSource: 1,
    },
    fullLifeTimeMeta: {
        openId: '',
        enterScene: 0,
        languageVersion: '',
        clientVersion: 0,
        addState: -1,
        envVersion: -1,
        appversion: '',
        devicemodel: '',
        devicebrand: '',
        osName: '',
        osVersion: '',
    },
    networkStatus: '',
    textLenGranularity: 2,
};
function setConfig(data) {
    wxConsole.info('[tel] config', data);
    if (data.weSessionId && config.uuid) {
        save([], true);
    }
    Object.assign(config, data);
    if (!config.enabledFeatures) {
        config.enabledFeatures = {};
    }
    if (data.featureConfig && data.platform && data.sdkVersion) {
        for (const feature of data.featureConfig) {
            const scopeMatched = !feature.scope ||
                parseFeatureScope(feature.scope, {
                    os: data.platform,
                    sdkVersion: data.sdkVersion,
                });
            if (!scopeMatched)
                continue;
            const proportion = feature.proportion ?? 0;
            if (proportion === 0)
                continue;
            if (proportion === 100 || proportion >= Math.random() * 100) {
                config.enabledFeatures[feature.name] = true;
            }
        }
    }
    handleCosInfoChange(data.cosInfo);
    wxConsole.info('[tel] enabled features', Object.keys(config.enabledFeatures));
    window.__tel_config = config;
}
function resetConfig() {
    Object.assign(config, {
        reporter: undefined,
        uuid: undefined,
        projectId: undefined,
        sdkVersion: undefined,
        unloadedWebviewIds: undefined,
        hashText: undefined,
        isWhitelistMaskMode: undefined,
        reportUrl: undefined,
        dataAttrs: undefined,
        canvas: undefined,
        cosInfo: undefined,
        encrypt: undefined,
        sync: undefined,
        attrs: undefined,
        onAppEnterBackground: undefined,
        cloudServiceProvider: undefined,
        onReport: undefined,
        errorCallback: undefined,
        maskClass: 'wxobs-mask',
        unmaskClass: 'wxobs-unmask',
        excludeClass: 'wxobs-exclude',
        collectFileClass: 'wxobs-collect-file',
        exposureSelectorList: [],
        pluginList: [],
        featureConfig: {},
        reportInterval: 5000,
        isWeb: "miniprogram" === 'web',
        iframe: false,
    });
}
const RULE_REGEXP = /^(\w+)([><=]|!=)(.+)$/;
function parseFeatureScope(value, ctx) {
    try {
        const rawRules = value
            .split(';')
            .map(rule => rule.trim())
            .filter(x => x);
        for (const rule of rawRules) {
            const matches = rule.match(RULE_REGEXP);
            if (matches && matches.length === 4) {
                const [_, key, op, val] = matches;
                const values = val
                    .split(',')
                    .map(x => x.trim())
                    .filter(x => x);
                if (key === 'os') {
                    if (op === '=') {
                        if (!values.includes(ctx.os)) {
                            return false;
                        }
                    }
                    else if (op === '!=') {
                        if (values.includes(ctx.os)) {
                            return false;
                        }
                    }
                    else {
                        return false;
                    }
                }
                else if (key === 'lib') {
                    if (op === '=') {
                        if (!values.includes(ctx.sdkVersion)) {
                            return false;
                        }
                    }
                    else if (op === '!=') {
                        if (values.includes(ctx.sdkVersion)) {
                            return false;
                        }
                    }
                    else if (op === '>') {
                        if (compareLibVersion(ctx.sdkVersion, values[0]) <= 0) {
                            return false;
                        }
                    }
                    else if (op === '<') {
                        if (compareLibVersion(ctx.sdkVersion, values[0]) >= 0) {
                            return false;
                        }
                    }
                    else {
                        return false;
                    }
                }
                else {
                    return false;
                }
            }
        }
        return true;
    }
    catch (e) {
        wxConsole.error('[tel] parseFeatureScope', e);
        return false;
    }
}

function handleError({ type, e, sdkVersion, uuid, extra }) {
    let errMsg = '';
    if (e instanceof Error) {
        errMsg = `name: ${e.name}; message: ${e.message}; stack: ${e.stack}; extra: ${extra}`;
    }
    else if (typeof e === 'string') {
        errMsg = `message: ${e}; extra: ${extra}`;
    }
    else {
        errMsg = `message: ${JSON.stringify(e)}; extra: ${extra}`;
    }
    const { version, updateTime } = window.__libVersionInfo__ ?? {};
    uploadSubvisionToWx(JSON.stringify({
        report_items: [
            {
                session_id: uuid ?? config.uuid,
                sdk_version: version ? `${version} (${updateTime})` : config.sdkVersion,
                err_type: type,
                err_msg: errMsg,
                os_name: osInfo?.name,
                os_version: getHostSessionId() ?? osInfo?.version,
            },
        ],
    }));
    {
        wx?.handleErrorForUser?.({ type, errMsg, extra });
    }
}
function getHostSessionId() {
    const queryString = window.location.search;
    const params = new URLSearchParams(queryString);
    const hostSessionId = params.get('wxobsId');
    if (hostSessionId) {
        localStorage.setItem('wxobsId', hostSessionId);
        return hostSessionId;
    }
    else {
        return localStorage.getItem('wxobsId');
    }
}

const utf8ArrayToStr = (function () {
    const charCache = new Array(128);
    const charFromCodePt = String.fromCodePoint || String.fromCharCode;
    const result = [];
    return function (array) {
        let codePt, byte1;
        const buffLen = array.length;
        result.length = 0;
        for (let i = 0; i < buffLen;) {
            byte1 = array[i++];
            if (byte1 <= 0x7f) {
                codePt = byte1;
            }
            else if (byte1 <= 0xdf) {
                codePt = ((byte1 & 0x1f) << 6) | (array[i++] & 0x3f);
            }
            else if (byte1 <= 0xef) {
                codePt = ((byte1 & 0x0f) << 12) | ((array[i++] & 0x3f) << 6) | (array[i++] & 0x3f);
            }
            else if (String.fromCodePoint) {
                codePt = ((byte1 & 0x07) << 18) | ((array[i++] & 0x3f) << 12) | ((array[i++] & 0x3f) << 6) | (array[i++] & 0x3f);
            }
            else {
                codePt = 63;
                i += 3;
            }
            result.push(charCache[codePt] || (charCache[codePt] = charFromCodePt(codePt)));
        }
        return result.join('');
    };
})();
function djbHash(input) {
    const len = input.length;
    let hash = 5381;
    for (let idx = 0; idx < len; ++idx) {
        hash = (hash << 5) + hash + input.charCodeAt(idx);
    }
    return String(hash);
}
async function getBase64Image(img) {
    return new Promise((resolve, reject) => {
        try {
            const canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            const ctx = canvas.getContext('2d');
            if (!ctx) {
                throw new Error('Failed to get canvas context');
            }
            ctx.drawImage(img, 0, 0, img.width, img.height);
            const dataURL = canvas.toDataURL('image/webp');
            resolve(dataURL);
        }
        catch (e) {
            handleError({
                e,
                type: ErrorType.CollectImage,
            });
            wxConsole.log('[tel] image collect error', e);
            reject(e);
        }
    });
}
async function getBase64WxImage(node) {
    return new Promise((resolve, reject) => {
        const parseImage = () => {
            try {
                const img = new Image();
                img.crossOrigin = 'Anonymous';
                img.src = node.src;
                img.onload = function () {
                    try {
                        const canvas = document.createElement('canvas');
                        canvas.width = img.width;
                        canvas.height = img.height;
                        wxConsole.log('[tel] wx-image canvas width and height', canvas.width, canvas.height);
                        const ctx = canvas.getContext('2d');
                        if (!ctx) {
                            throw new Error('Failed to get canvas context');
                        }
                        ctx.drawImage(img, 0, 0, img.width, img.height);
                        const dataURL = canvas.toDataURL('image/webp');
                        wxConsole.log('[tel] wx-image dataURL', dataURL);
                        resolve(dataURL);
                    }
                    catch (e) {
                        handleError({
                            e,
                            type: ErrorType.CollectWxImage,
                        });
                        wxConsole.log('[tel] wx-image collect error', e);
                        reject(e);
                    }
                };
                img.onerror = function () {
                    reject(new Error('Failed to load image'));
                };
            }
            catch (e) {
                wxConsole.log('[tel] wx-image collect error', e);
                handleError({
                    e,
                    type: ErrorType.CollectWxImage,
                });
                reject(e);
            }
        };
        if (node.loaded) {
            parseImage();
        }
        else {
            node.addListener('load', async () => {
                parseImage();
            });
        }
    });
}
function shouldHashText(input, threshold = 1000) {
    return input.length > threshold;
}
function shouldDropAttrValue(key, value) {
    return (key.startsWith('data-') && value.length > 128) || (value.startsWith('{') && value.endsWith('}'));
}
function uuidv4() {
    return 'xxxxx-xxxx-xxxx-xxxx-xxxxx'.replace(/[xy]/g, (c) => {
        const r = (Math.random() * 16) | 0;
        const v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
}
function compareLibVersion(_v1, _v2) {
    if (typeof _v1 !== 'string' || typeof _v2 !== 'string')
        return 0;
    const v1 = _v1.split('.');
    const v2 = _v2.split('.');
    const len = Math.max(v1.length, v2.length);
    while (v1.length < len) {
        v1.push('0');
    }
    while (v2.length < len) {
        v2.push('0');
    }
    for (let i = 0; i < len; i++) {
        const num1 = parseInt(v1[i], 10);
        const num2 = parseInt(v2[i], 10);
        if (num1 > num2) {
            return 1;
        }
        else if (num1 < num2) {
            return -1;
        }
    }
    return 0;
}
function isWasmSupported() {
    return typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function';
}

const USER_IDENTIFIER_KEY = 'WXOBS_USER_IDENTIFIER_KEY';
function getUserIdentifier() {
    let identifier = localStorage.getItem(USER_IDENTIFIER_KEY);
    if (!identifier) {
        identifier = crypto?.randomUUID?.() ?? uuidv4();
        localStorage.setItem(USER_IDENTIFIER_KEY, identifier);
    }
    return identifier;
}
let customUid = '';
function setCustomUid(v) {
    customUid = v;
}
function getCustomUid() {
    return customUid;
}
let localUid = '';
function setLocalUid(v) {
    localUid = v;
}
function getLocalUid() {
    return localUid;
}

let eventNum = 1;
function nextSeq() {
    return eventNum++;
}

const canvasCollect = (canvasFrame) => {
    const u8 = strToU8(canvasFrame.data, true);
    const protocolEvent = {
        type: EventType.AppserviceCanvas,
        seq: nextSeq(),
        timestamp: canvasFrame.timestamp,
        nodeId: canvasFrame.nodeId,
        elapsedTime: canvasFrame.timestamp - getBaseTime(),
        mutationRecords: [
            {
                type: MutationType.Canvas,
                target: canvasFrame.nodeId,
                canvas: {
                    frameBuffer: u8,
                },
            },
        ],
    };
    save([protocolEvent]);
};

function start$f() {
    schedule({
        fn: collect$2,
    });
}
function collect$2(task) {
    const uaParser = new UAParser(navigator.userAgent);
    const osInfo = uaParser.getOS();
    const browserInfo = uaParser.getBrowser();
    const deviceInfo = uaParser.getDevice();
    const event = {
        type: EventType.Env,
        userAgent: navigator.userAgent,
        os: osInfo.name,
        osVersion: osInfo.version,
        deviceType: deviceInfo.type,
        deviceVendor: deviceInfo.vendor,
        browser: browserInfo.name,
        identifier: getUserIdentifier(),
    };
    const protocolEvent = {
        type: event.type,
        browserEnv: event,
    };
    save([protocolEvent]);
    task.done();
}

let lastDocWidth = -1;
let lastDocHeight = -1;
function start$e() {
    collect$1();
}
function collect$1() {
    const { width, height } = getDocumentDimension$1();
    const style = getComputedStyle(document.documentElement);
    const event = {
        type: EventType.WindowState,
        viewWidth: window.innerWidth,
        viewHeight: window.innerHeight,
        docWidth: width,
        docHeight: height,
        url: location.href,
        title: document.title,
        safeAreaInsetTop: style.getPropertyValue('--safe-area-inset-top'),
        safeAreaInsetBottom: style.getPropertyValue('--safe-area-inset-bottom'),
        safeAreaInsetLeft: style.getPropertyValue('--safe-area-inset-left'),
        safeAreaInsetRight: style.getPropertyValue('--safe-area-inset-right'),
    };
    const protocolEvent = {
        type: event.type,
        windowState: event,
    };
    save([protocolEvent]);
}
const checkDocumentDimensionChange = throttle(_checkDocumentDimensionChange, 100, {
    trailing: true,
});
function _checkDocumentDimensionChange() {
    const { width, height } = getDocumentDimension$1();
    const event = {
        type: EventType.WindowState,
    };
    let changed = false;
    if (width !== lastDocWidth) {
        changed = true;
        event.docWidth = width;
        lastDocWidth = width;
    }
    if (height !== lastDocHeight) {
        changed = true;
        event.docHeight = height;
        lastDocHeight = height;
    }
    if (!changed)
        return;
    const protocolEvent = {
        seq: nextSeq(),
        type: event.type,
        elapsedTime: elapsed(),
        windowState: event,
    };
    save([protocolEvent]);
}
function getDocumentDimension$1() {
    const documentElement = document.documentElement;
    const body = document.body;
    const height = Math.max(documentElement.clientHeight, documentElement.offsetHeight, documentElement.scrollHeight, body.clientHeight, body.offsetHeight, body.scrollHeight);
    const width = Math.max(documentElement.clientWidth, documentElement.offsetWidth, documentElement.scrollWidth, body.clientWidth, body.offsetWidth, body.scrollWidth);
    return {
        height,
        width,
    };
}

function start$d() {
    schedule({
        fn: collect,
    });
}
function collect(task) {
    const event = {
        isWhitelistMaskMode: config.isWhitelistMaskMode,
        dict: config.cosInfo?.zstd_dict_url,
        auxiluaryInfo: window.__wxobs__?.auxiliaryDomainInfo ? JSON.stringify(window.__wxobs__?.auxiliaryDomainInfo) : undefined,
        inIframe: window !== window.top,
        reporter: config.reporter,
        canvas: config.canvas,
        sync: config.sync,
        iframe: config.iframe,
        enabledFeatures: Object.keys(config.enabledFeatures ?? {})
            .filter(k => config.enabledFeatures[k])
            .join(','),
    };
    const protocolEvent = {
        type: EventType.Config,
        envConfig: event,
    };
    save([protocolEvent]);
    task.done();
}

let observer$4 = null;
function observeEleResize(ele) {
    observer$4?.observe(ele);
}
debounce(_onWindowRezise, 32, { maxWait: 100 });
function _onWindowRezise() {
    const events = [];
    const { height, width } = getDocumentDimension();
    const protocolEvent = {
        seq: nextSeq(),
        type: EventType.Resize,
        elapsedTime: elapsed(),
        uiEnv: UIEnv.DOM,
        windowState: {
            viewWidth: window.innerWidth,
            viewHeight: window.innerHeight,
            docWidth: width,
            docHeight: height,
        },
    };
    events.push(protocolEvent);
    save(events);
}
debounce(encodeAndSave$6, 32, { maxWait: 100 });
function encodeAndSave$6() {
    const events = [];
    if (events.length) {
        save(events);
    }
}
function getDocumentDimension() {
    const documentElement = document.documentElement;
    const body = document.body;
    const height = Math.max(documentElement.clientHeight, documentElement.offsetHeight, documentElement.scrollHeight, body.clientHeight, body.offsetHeight, body.scrollHeight);
    const width = Math.max(documentElement.clientWidth, documentElement.offsetWidth, documentElement.scrollWidth, body.clientWidth, body.offsetWidth, body.scrollWidth);
    return {
        height,
        width,
    };
}

function maskInputChange(id, input) {
    if (shouldMask$1(id)) {
        input.valueLen = getDifferentialLength$1(input.value ?? '');
        input.masked = true;
    }
}
function shouldMask$1(id) {
    const info = getNodeInfo(id);
    const node = info.domRef?.deref();
    if (config.isWhitelistMaskMode) {
        if (info.unmasked !== undefined) {
            return !info.unmasked;
        }
        if (!node) {
            info.unmasked = false;
            return true;
        }
        if (node.nodeType === Node.ELEMENT_NODE) {
            const ele = node;
            if (ele.classList.contains(config.unmaskClass)) {
                info.unmasked = true;
                return false;
            }
        }
        if (info.parentId !== undefined) {
            const parentShouldMask = shouldMask$1(info.parentId);
            info.unmasked = !parentShouldMask;
            return parentShouldMask;
        }
        info.unmasked = false;
        return true;
    }
    else {
        if (info.masked !== undefined) {
            return info.masked;
        }
        if (!node) {
            info.masked = false;
            return false;
        }
        if (node.nodeType === Node.ELEMENT_NODE) {
            const ele = node;
            if (ele.classList.contains(config.maskClass)) {
                info.masked = true;
                return true;
            }
        }
        if (info.parentId !== undefined) {
            const parentShouldMask = shouldMask$1(info.parentId);
            info.masked = parentShouldMask;
            return parentShouldMask;
        }
        info.masked = false;
        return false;
    }
}
function maskMutation$1(mutation) {
    if (shouldMask$1(mutation.target)) {
        const info = getNodeInfo(mutation.target);
        if (info) {
            const tag = info.tag?.toLowerCase();
            if ((tag === 'input' || tag === 'textarea') && mutation.type === MutationType.Attributes && mutation.attributeName === 'value') {
                return {
                    ...mutation,
                    maskLength: mutation.attributeValue?.length,
                    attributeValue: undefined,
                };
            }
            else if (tag === 'img' ||
                tag === 'video' ||
                tag === 'audio' ||
                tag === 'iframe' ||
                tag === 'source' ||
                tag === 'script' ||
                tag === 'embed' ||
                tag === 'track') {
                if (mutation.type === MutationType.Attributes && mutation.attributeName === 'src') {
                    return {
                        ...mutation,
                        maskLength: mutation.attributeValue?.length,
                        attributeValue: undefined,
                    };
                }
            }
            else if (tag === 'link' || tag === 'a') {
                if (mutation.type === MutationType.Attributes && mutation.attributeName === 'href') {
                    return {
                        ...mutation,
                        maskLength: mutation.attributeValue?.length,
                        attributeValue: undefined,
                    };
                }
            }
            else if (tag === 'object') {
                if (mutation.type === MutationType.Attributes && mutation.attributeName === 'data') {
                    return {
                        ...mutation,
                        maskLength: mutation.attributeValue?.length,
                        attributeValue: undefined,
                    };
                }
            }
            if (mutation.type === MutationType.CharacterData) {
                return {
                    ...mutation,
                    maskLength: mutation.characterData?.length,
                    characterData: undefined,
                };
            }
        }
    }
    return mutation;
}
function excludeMutation$1(mutation) {
    if (shouldExclude$1(mutation.target) === ExcludeLevel$1.Data) {
        return {
            type: mutation.type,
            target: mutation.target,
            height: mutation.height,
            width: mutation.width,
            nextSibling: mutation.nextSibling,
            previousSibling: mutation.previousSibling,
        };
    }
    return mutation;
}
function shouldExclude$1(id) {
    const info = getNodeInfo(id);
    if (info) {
        if (info.excluded !== undefined) {
            if (info.excludedRoot)
                return ExcludeLevel$1.Data;
            if (info.excluded)
                return ExcludeLevel$1.All;
        }
        const node = info.domRef?.deref();
        if (!node) {
            info.excluded = false;
            return ExcludeLevel$1.None;
        }
        if (node.nodeType === Node.ELEMENT_NODE) {
            const ele = node;
            if (ele.classList.contains(config.excludeClass)) {
                observeEleResize(ele);
                info.excluded = true;
                info.excludedRoot = true;
                return ExcludeLevel$1.Data;
            }
        }
        if (info.parentId !== undefined) {
            const parentExcluded = shouldExclude$1(info.parentId);
            const level = parentExcluded === ExcludeLevel$1.None ? ExcludeLevel$1.None : ExcludeLevel$1.All;
            info.excluded = level !== ExcludeLevel$1.None;
            return level;
        }
        info.excluded = false;
    }
    return ExcludeLevel$1.None;
}
var ExcludeLevel$1;
(function (ExcludeLevel) {
    ExcludeLevel[ExcludeLevel["None"] = 0] = "None";
    ExcludeLevel[ExcludeLevel["Data"] = 1] = "Data";
    ExcludeLevel[ExcludeLevel["All"] = 2] = "All";
})(ExcludeLevel$1 || (ExcludeLevel$1 = {}));
function getDifferentialLength$1(str) {
    if (str.length === 0)
        return 0;
    const ret = str.length + randomIntFromInterval$1(5);
    if (ret < 1)
        return 1;
    return ret;
}
function randomIntFromInterval$1(n) {
    return Math.floor(Math.random() * (2 * n + 1) - n);
}

const PLUGIN_PREFIX = 'plugin-private://';
function setFlags(node, info) {
    const parentInfo = getNodeInfo$1(info.parentId);
    if (parentInfo?.excluded) {
        info.excluded = true;
        return;
    }
    if (info.type === ExparserNodeType.Component || info.type === ExparserNodeType.NativeNode) {
        const el = node;
        let excluded = el.classList.contains(config.excludeClass);
        if (!excluded && isBlockedPlugin(node)) {
            excluded = true;
        }
        if (excluded) {
            info.excludedRoot = true;
            if (!info.excluded) {
                info.excluded = true;
                traverse([el], Infinity, ({ node, type }) => {
                    const info = getNodeInfo$1(getNodeId$1(node));
                    if (info) {
                        if (info.excluded) {
                            return false;
                        }
                        info.excluded = true;
                        return true;
                    }
                    return false;
                });
            }
            return;
        }
        if (config.isWhitelistMaskMode) {
            info.unmasked = el.classList.contains(config.unmaskClass) ? true : undefined;
        }
        else {
            info.masked = el.classList.contains(config.maskClass) ? true : undefined;
        }
    }
}
function isBlockedPlugin(node) {
    const el = node;
    const { pluginList } = config;
    if (el.is && el.is.startsWith(PLUGIN_PREFIX)) {
        const plugin = el.is.slice(PLUGIN_PREFIX.length);
        const hit = pluginList?.some(appid => {
            return plugin.startsWith(appid);
        });
        return !hit;
    }
    return false;
}
function strip(info) {
    const [level, newInfo] = exclude(info);
    if (level === ExcludeLevel.None) {
        maskNode(info);
        return info;
    }
    else if (level === ExcludeLevel.All) {
        return null;
    }
    else {
        return newInfo;
    }
}
function maskNode(partial) {
    const info = getNodeInfo$1(partial.id);
    if (info.is === 'wx-input' &&
        info.properties?.type?.value === 'password' &&
        partial.properties?.value &&
        (typeof partial.properties.value.value === 'string' || typeof partial.properties.value.value === 'number')) {
        partial.masked = true;
        partial.maskLength = String(partial.properties.value.value).length;
        partial.properties = {
            ...partial.properties,
            value: {
                ...partial.properties.value,
                value: undefined,
            },
        };
    }
    if (info.type === ExparserNodeType.TextNode) {
        if (!info.unmasked && info.value) {
            partial.value = maskSensitiveText(info.value);
        }
    }
    if (shouldMask(info.id)) {
        if (info.type === ExparserNodeType.TextNode) {
            partial.masked = true;
            partial.maskLength = info.value ? info.value.length : 0;
            partial.value = undefined;
        }
        else if (info.is === 'wx-image') {
            partial.masked = true;
            if (partial.properties) {
                delete partial.properties['src'];
            }
        }
        else if (info.is === 'wx-input') {
            if (partial?.properties?.value && (typeof partial.properties.value.value === 'string' || typeof partial.properties.value.value === 'number')) {
                partial.masked = true;
                partial.maskLength = String(partial.properties.value.value).length;
                partial.properties = {
                    ...partial.properties,
                    value: {
                        ...partial.properties.value,
                        value: undefined,
                    },
                };
            }
        }
        else if (info.is === 'wx-textarea') {
            if (partial?.properties?.value && (typeof partial.properties.value.value === 'string' || typeof partial.properties.value.value === 'number')) {
                partial.masked = true;
                partial.maskLength = String(partial.properties.value.value).length;
                partial.properties = {
                    ...partial.properties,
                    value: {
                        ...partial.properties.value,
                        value: undefined,
                    },
                };
            }
        }
        else if (info.is === 'wx-picker') {
            partial.masked = true;
            if (partial.properties) {
                delete partial.properties['value'];
            }
        }
        else if (info.is === 'wx-video') {
            partial.masked = true;
            if (partial.properties) {
                delete partial.properties['src'];
            }
        }
        else if (info.is === 'wx-audio') {
            partial.masked = true;
            if (partial.properties) {
                delete partial.properties['src'];
            }
        }
    }
}
function maskMutation(mutation) {
    const info = getNodeInfo$1(mutation.target);
    if (info.is === 'wx-input' && info.properties?.type?.value === 'password' && mutation.propertyName === 'value') {
        return {
            ...mutation,
            maskLength: getDifferentialLength(String(mutation.propertyValue)),
            propertyValue: undefined,
        };
    }
    if (info.type === ExparserNodeType.TextNode && mutation.characterData) {
        if (!info.unmasked) {
            return {
                ...mutation,
                characterData: maskSensitiveText(mutation.characterData),
            };
        }
    }
    if (shouldMask(mutation.target)) {
        if ((info.is === 'wx-input' || info.is === 'wx-textarea') &&
            mutation.propertyName === 'value' &&
            (typeof mutation.propertyValue === 'string' || typeof mutation.propertyValue === 'number')) {
            return {
                ...mutation,
                maskLength: getDifferentialLength(String(mutation.propertyValue)),
                propertyValue: undefined,
            };
        }
        else if (info.is === 'wx-image' && mutation.propertyName === 'src') {
            return {
                ...mutation,
                propertyValue: undefined,
            };
        }
        else if (info.is === 'wx-picker' && mutation.attributeName === 'value') {
            return {
                ...mutation,
                attributeName: undefined,
                attributeValue: undefined,
            };
        }
        else if (info.is === 'wx-video' && mutation.attributeName === 'src') {
            return {
                ...mutation,
                attributeName: undefined,
                attributeValue: undefined,
            };
        }
        else if (info.is === 'wx-audio' && mutation.attributeName === 'src') {
            return {
                ...mutation,
                attributeName: undefined,
                attributeValue: undefined,
            };
        }
        else if (mutation.characterData) {
            return {
                ...mutation,
                maskLength: String(mutation.characterData).length,
                characterData: undefined,
            };
        }
    }
    return mutation;
}
const sensitiveRegexPatterns = [
    /(?:(-?((?:1[0-7]\\d)|\\d{1,2})(?:\\.\\d{1,10})?)\\s*,\\s*)?(-?([1-8]?\\d(?:\\.\\d{1,10})?|90(?:\.0{1,10})?))/,
    /[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼][A-HJ-NP-Z](?:(?:[0-9]{5}[DF])|(?:[DF][A-HJ-NP-Z0-9][0-9]{4})|(?:[A-HJ-NP-Z0-9]{5}))/,
    /(((11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65|71|81|82)[0-7][0-9]\d{2}(19[5-9]|20[0-1])\d{1}((0[1-9])|10|11|12)(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]))/,
    /(0|86|17951|\+86)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}/,
    /[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+/,
    /([EeKkGgDdSsPpHh]\d{8})|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\d{7})/,
    /[HMhm]{1}([0-9]{10}|[0-9]{8})/,
    /[\d]{15}(?:[\d]{2})?/,
    /[0-9A-HJ-NPQRTUWXY]{2}\d{6}[0-9A-HJ-NPQRTUWXY]{10}/,
];
const numRegex = /\d/;
function maskSensitiveText(text) {
    if (config.enabledFeatures.maskSensitiveText) {
        count(MetricType.MaskSensitiveTextCount);
        const start = performance.now();
        if (!text)
            return text;
        if (text.length < 6)
            return text;
        if (!numRegex.test(text))
            return text;
        if (!sensitiveRegexPatterns.some(pattern => pattern.test(text)))
            return text;
        const possibleSensitive = sensitiveRegexPatterns.some(pattern => pattern.test(text));
        if (!possibleSensitive)
            return text;
        let maskedText = text;
        sensitiveRegexPatterns.forEach(pattern => {
            maskedText = maskedText.replace(pattern, match => '*'.repeat(match.length));
        });
        const cost = performance.now() - start;
        if (cost > 10) {
            count(MetricType.MaskSensitiveTextSlow);
        }
        return maskedText;
    }
    return text;
}
function excludeMutation(mutation) {
    if (shouldExclude(mutation.target) === ExcludeLevel.Data) {
        return {
            type: mutation.type,
            target: mutation.target,
            width: mutation.width,
            height: mutation.height,
            previousSibling: mutation.previousSibling,
            nextSibling: mutation.nextSibling,
        };
    }
    return mutation;
}
function shouldMask(id) {
    const info = getNodeInfo$1(id);
    if (config.isWhitelistMaskMode) {
        if (info.unmasked)
            return false;
        const node = info.ref.deref();
        if (node) {
            let result = true;
            traverseComposedParents(node, el => {
                const info = getNodeInfo$1(getNodeId$1(el));
                if (info && info.unmasked) {
                    result = false;
                    return false;
                }
                return true;
            });
            return result;
        }
        return true;
    }
    else {
        if (info.masked)
            return true;
        const node = info.ref.deref();
        if (node) {
            let result = false;
            traverseComposedParents(node, el => {
                const info = getNodeInfo$1(getNodeId$1(el));
                if (info && info.masked) {
                    result = true;
                    return false;
                }
                return true;
            });
            return result;
        }
        return false;
    }
}
function exclude(info) {
    const level = shouldExclude(info.id);
    if (level === ExcludeLevel.None) {
        return [level, info];
    }
    else if (level === ExcludeLevel.Data) {
        const newInfo = {
            id: info.id,
            excluded: true,
            width: info.width,
            height: info.height,
            parentId: info.parentId,
            prevId: info.prevId,
            updateTs: info.updateTs,
        };
        return [level, newInfo];
    }
    else {
        return [level, null];
    }
}
function shouldExclude(id) {
    const info = getNodeInfo$1(id);
    if (info) {
        if (info.excluded !== undefined) {
            if (info.excludedRoot)
                return ExcludeLevel.Data;
            if (info.excluded)
                return ExcludeLevel.All;
            return ExcludeLevel.None;
        }
        else if (info.parentId !== undefined) {
            const parentExclude = shouldExclude(info.parentId);
            const level = parentExclude === ExcludeLevel.None ? ExcludeLevel.None : ExcludeLevel.All;
            info.excluded = level !== ExcludeLevel.None;
            return level;
        }
        return ExcludeLevel.None;
    }
    return ExcludeLevel.None;
}
const excludeCache = new WeakMap();
function shouldExcludeForCosless(node) {
    if (excludeCache.has(node)) {
        return excludeCache.get(node);
    }
    let result = false;
    if (isComponent(node)) {
        result = traverseComposedParentsForExclude(node);
    }
    excludeCache.set(node, result);
    return result;
}
function traverseComposedParentsForExclude(node) {
    let el = node;
    while (el) {
        if (isComponent(el) || isNativeNode(el)) {
            if (el.classList && el.classList.contains(config.excludeClass)) {
                return true;
            }
            if (isBlockedPlugin(el)) {
                return true;
            }
        }
        if (excludeCache.has(el)) {
            return excludeCache.get(el);
        }
        el = el.__wxSlotParent || el.__wxHost || el.parentNode;
    }
    return false;
}
var ExcludeLevel;
(function (ExcludeLevel) {
    ExcludeLevel[ExcludeLevel["None"] = 0] = "None";
    ExcludeLevel[ExcludeLevel["Data"] = 1] = "Data";
    ExcludeLevel[ExcludeLevel["All"] = 2] = "All";
})(ExcludeLevel || (ExcludeLevel = {}));
window.__tel__pri = {
    shouldMask,
    shouldExclude,
};
function getDifferentialLength(str) {
    if (str.length === 0)
        return 0;
    const ret = str.length + randomIntFromInterval(5);
    if (ret < 1)
        return 1;
    return ret;
}
function randomIntFromInterval(n) {
    return Math.floor(Math.random() * (2 * n + 1) - n);
}

function isElement(node) {
    return node instanceof exparser.Element;
}
function isComponent(node) {
    return node instanceof exparser.Component;
}
function isBuiltInComponent(node) {
    return exparser.Component.getComponentOptions(node).domain === '//';
}
function isNativeNode(node) {
    return node instanceof exparser.NativeNode;
}
function isVirtualNode(node) {
    return node instanceof exparser.VirtualNode;
}
function isTextNode(node) {
    return node instanceof exparser.TextNode;
}
function getType(node) {
    if (isComponent(node))
        return ExparserNodeType.Component;
    else if (isVirtualNode(node))
        return ExparserNodeType.VirtualNode;
    else if (isNativeNode(node))
        return ExparserNodeType.NativeNode;
    else if (isTextNode(node))
        return ExparserNodeType.TextNode;
    else
        return ExparserNodeType.Unknown;
}
function getProperties(comp) {
    const props = {};
    const names = exparser.Component.listPublicProperties(comp);
    const compDef = exparser.Component._list[comp.is];
    for (const name of names) {
        if (IGNORED_COMP_PROPS.has(name))
            continue;
        if (comp[name] === compDef.props[name]?.value)
            continue;
        if (comp[name] === null) {
            props[name] = {
                type: ExparserCompPropType.Null,
                value: null,
            };
            continue;
        }
        const rawType = typeof comp[name];
        const type = TYPEOF_TO_EXPARSER_COMP_PROP_TYPE[rawType];
        if (!type) {
            wxConsole.log(`[tel] unknown prop type: ${type}, ignoring.`);
            continue;
        }
        props[name] = {
            type,
            value: type === ExparserCompPropType.JSON ? JSON.stringify(comp[name]) : comp[name],
        };
    }
    return props;
}
function traverse(queue, quota, onNodeFound) {
    quota = quota || SIMPLE_OPERATIONS_PER_TASK_SLICE;
    while (queue.length > 0 && quota > 0) {
        quota--;
        const node = queue.shift();
        let nodeType;
        let builtIn = false;
        let newNodes = [];
        let found = true;
        if (isComponent(node)) {
            nodeType = ExparserNodeType.Component;
            if (isBuiltInComponent(node)) {
                newNodes = node.childNodes;
                builtIn = true;
            }
            else {
                newNodes = [...node.__wxSlotChildren, ...node.childNodes];
            }
        }
        else if (isVirtualNode(node)) {
            nodeType = ExparserNodeType.VirtualNode;
            if (node.is === 'slot') {
                newNodes = [];
            }
            else if (node.is === 'shadow') {
                newNodes = node.__wxSlotChildren;
            }
            else {
                newNodes = node.childNodes;
            }
        }
        else if (isTextNode(node)) {
            nodeType = ExparserNodeType.TextNode;
            newNodes = [];
        }
        else if (isNativeNode(node)) {
            newNodes = node.childNodes;
        }
        else {
            if (isElement(node)) {
                wxConsole.warn('[tel] [unexpected] pure exparser element found');
                nodeType = ExparserNodeType.Element;
                newNodes = node.childNodes;
            }
            else {
                wxConsole.warn('non exparser node found', node.tagName, node);
                found = false;
            }
        }
        if (found) {
            const shouldTraverseChildren = onNodeFound({
                node,
                type: nodeType,
                builtIn,
            });
            if (shouldTraverseChildren && newNodes.length > 0) {
                queue.unshift(...newNodes);
            }
        }
    }
    return queue.length > 0 ? TaskSignal.Yield : TaskSignal.Done;
}
function traverseComposedParents(node, callback) {
    let el = node;
    while ((el = el.__wxSlotParent || el.__wxHost || el.parentNode)) {
        if (!callback(el))
            return;
    }
}
function toProtocolNodeInfo$1(info) {
    const ret = strip(info);
    if (!ret)
        return null;
    info = ret;
    const attributes = [];
    const properties = [];
    if (info.attributes) {
        for (const key in info.attributes) {
            if (info.attributes[key]) {
                attributes.push({
                    key,
                    value: info.attributes[key] || '',
                });
            }
        }
    }
    if (info.properties) {
        for (const key in info.properties) {
            const { type, value } = info.properties[key];
            const prop = {
                key,
                type,
            };
            if (type === ExparserCompPropType.String || type === ExparserCompPropType.JSON) {
                prop.valueStr = value;
            }
            else if (type === ExparserCompPropType.Number) {
                prop.valueNum = value;
            }
            else if (type === ExparserCompPropType.Boolean) {
                prop.valueBool = value;
            }
            properties.push(prop);
        }
    }
    const n = {
        ...info,
        attributes,
        properties,
    };
    if (n['ref']) {
        delete n['ref'];
    }
    return n;
}
const TYPEOF_TO_EXPARSER_COMP_PROP_TYPE = {
    string: ExparserCompPropType.String,
    object: ExparserCompPropType.JSON,
    number: ExparserCompPropType.Number,
    boolean: ExparserCompPropType.Boolean,
    undefined: ExparserCompPropType.Undefined,
};

const backtrack = new WeakMap();
class _WeakRef {
    value;
    constructor(value) {
        this.value = value;
        if (backtrack.has(value)) {
            const list = backtrack.get(value);
            list?.push(this);
        }
        else {
            backtrack.set(value, [this]);
        }
    }
    deref() {
        return this.value;
    }
    clear() {
        this.value = undefined;
    }
}
const hasNativeWeakRef = 'WeakRef' in window;
const $WeakRef = window.WeakRef || _WeakRef;
function release(value) {
    if (hasNativeWeakRef)
        return;
    const list = backtrack.get(value);
    if (list) {
        for (const ref of list) {
            ref.clear();
        }
    }
}
function refill(value) {
    if (hasNativeWeakRef)
        return;
    const list = backtrack.get(value);
    if (list && list.length && !list[0].value) {
        for (const ref of list) {
            ref.value = value;
        }
    }
}

const VERSION_LENGTH = 2;
const KEY_META_LENGTH = 4;
const VALUE_META_LENGTH = 4;
const CURRENT_VERSION = 1;
function create(includeHeader, kvs) {
    let offset = 0;
    let totalLength = includeHeader ? VERSION_LENGTH : 0;
    const newKVs = [];
    for (const kv of kvs) {
        const newKey = stringToUtf8Array(kv[0]);
        newKVs.push([newKey, kv[1]]);
        totalLength += newKey.length + kv[1].length + KEY_META_LENGTH + VALUE_META_LENGTH;
    }
    const bufArray = new Uint8Array(totalLength);
    const dv = new DataView(bufArray.buffer);
    if (includeHeader) {
        dv.setInt16(0, CURRENT_VERSION);
        offset += VERSION_LENGTH;
    }
    for (const [key, value] of newKVs) {
        dv.setInt32(offset, key.length);
        offset += KEY_META_LENGTH;
        bufArray.set(key, offset);
        offset += key.length;
        dv.setInt32(offset, value.length);
        offset += VALUE_META_LENGTH;
        bufArray.set(value, offset);
        offset += value.length;
    }
    return bufArray;
}
function merge(...bufArrays) {
    let totalLength = 0;
    for (const bufArray of bufArrays) {
        totalLength += bufArray.length;
    }
    const merged = new Uint8Array(totalLength);
    let offset = 0;
    for (const bufArray of bufArrays) {
        merged.set(bufArray, offset);
        offset += bufArray.length;
    }
    return merged;
}
function stringToUtf8Array(str) {
    const utf8 = [];
    for (let i = 0; i < str.length; i++) {
        let charcode = str.charCodeAt(i);
        if (charcode < 0x80)
            utf8.push(charcode);
        else if (charcode < 0x800) {
            utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));
        }
        else if (charcode < 0xd800 || charcode >= 0xe000) {
            utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
        }
        else {
            i++;
            charcode = 0x10000 + (((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));
            utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
        }
    }
    return new Uint8Array(utf8);
}

var CryptoJS = CryptoJS || function (g, l) {
  var e = {},
    d = e.lib = {},
    m = function () {},
    k = d.Base = {
      extend: function (a) {
        m.prototype = this;
        var c = new m();
        a && c.mixIn(a);
        c.hasOwnProperty("init") || (c.init = function () {
          c.$super.init.apply(this, arguments);
        });
        c.init.prototype = c;
        c.$super = this;
        return c;
      },
      create: function () {
        var a = this.extend();
        a.init.apply(a, arguments);
        return a;
      },
      init: function () {},
      mixIn: function (a) {
        for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]);
        a.hasOwnProperty("toString") && (this.toString = a.toString);
      },
      clone: function () {
        return this.init.prototype.extend(this);
      }
    },
    p = d.WordArray = k.extend({
      init: function (a, c) {
        a = this.words = a || [];
        this.sigBytes = c != l ? c : 4 * a.length;
      },
      toString: function (a) {
        return (a || n).stringify(this);
      },
      concat: function (a) {
        var c = this.words,
          q = a.words,
          f = this.sigBytes;
        a = a.sigBytes;
        this.clamp();
        if (f % 4) for (var b = 0; b < a; b++) c[f + b >>> 2] |= (q[b >>> 2] >>> 24 - 8 * (b % 4) & 255) << 24 - 8 * ((f + b) % 4);else if (65535 < q.length) for (b = 0; b < a; b += 4) c[f + b >>> 2] = q[b >>> 2];else c.push.apply(c, q);
        this.sigBytes += a;
        return this;
      },
      clamp: function () {
        var a = this.words,
          c = this.sigBytes;
        a[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4);
        a.length = g.ceil(c / 4);
      },
      clone: function () {
        var a = k.clone.call(this);
        a.words = this.words.slice(0);
        return a;
      },
      random: function (a) {
        for (var c = [], b = 0; b < a; b += 4) c.push(4294967296 * g.random() | 0);
        return new p.init(c, a);
      }
    }),
    b = e.enc = {},
    n = b.Hex = {
      stringify: function (a) {
        var c = a.words;
        a = a.sigBytes;
        for (var b = [], f = 0; f < a; f++) {
          var d = c[f >>> 2] >>> 24 - 8 * (f % 4) & 255;
          b.push((d >>> 4).toString(16));
          b.push((d & 15).toString(16));
        }
        return b.join("");
      },
      parse: function (a) {
        for (var c = a.length, b = [], f = 0; f < c; f += 2) b[f >>> 3] |= parseInt(a.substr(f, 2), 16) << 24 - 4 * (f % 8);
        return new p.init(b, c / 2);
      }
    },
    j = b.Latin1 = {
      stringify: function (a) {
        var c = a.words;
        a = a.sigBytes;
        for (var b = [], f = 0; f < a; f++) b.push(String.fromCharCode(c[f >>> 2] >>> 24 - 8 * (f % 4) & 255));
        return b.join("");
      },
      parse: function (a) {
        for (var c = a.length, b = [], f = 0; f < c; f++) b[f >>> 2] |= (a.charCodeAt(f) & 255) << 24 - 8 * (f % 4);
        return new p.init(b, c);
      }
    },
    h = b.Utf8 = {
      stringify: function (a) {
        try {
          return decodeURIComponent(escape(j.stringify(a)));
        } catch (c) {
          throw Error("Malformed UTF-8 data");
        }
      },
      parse: function (a) {
        return j.parse(unescape(encodeURIComponent(a)));
      }
    },
    r = d.BufferedBlockAlgorithm = k.extend({
      reset: function () {
        this._data = new p.init();
        this._nDataBytes = 0;
      },
      _append: function (a) {
        "string" == typeof a && (a = h.parse(a));
        this._data.concat(a);
        this._nDataBytes += a.sigBytes;
      },
      _process: function (a) {
        var c = this._data,
          b = c.words,
          f = c.sigBytes,
          d = this.blockSize,
          e = f / (4 * d),
          e = a ? g.ceil(e) : g.max((e | 0) - this._minBufferSize, 0);
        a = e * d;
        f = g.min(4 * a, f);
        if (a) {
          for (var k = 0; k < a; k += d) this._doProcessBlock(b, k);
          k = b.splice(0, a);
          c.sigBytes -= f;
        }
        return new p.init(k, f);
      },
      clone: function () {
        var a = k.clone.call(this);
        a._data = this._data.clone();
        return a;
      },
      _minBufferSize: 0
    });
  d.Hasher = r.extend({
    cfg: k.extend(),
    init: function (a) {
      this.cfg = this.cfg.extend(a);
      this.reset();
    },
    reset: function () {
      r.reset.call(this);
      this._doReset();
    },
    update: function (a) {
      this._append(a);
      this._process();
      return this;
    },
    finalize: function (a) {
      a && this._append(a);
      return this._doFinalize();
    },
    blockSize: 16,
    _createHelper: function (a) {
      return function (b, d) {
        return new a.init(d).finalize(b);
      };
    },
    _createHmacHelper: function (a) {
      return function (b, d) {
        return new s.HMAC.init(a, d).finalize(b);
      };
    }
  });
  var s = e.algo = {};
  return e;
}(Math);
(function () {
  var g = CryptoJS,
    l = g.lib,
    e = l.WordArray,
    d = l.Hasher,
    m = [],
    l = g.algo.SHA1 = d.extend({
      _doReset: function () {
        this._hash = new e.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
      },
      _doProcessBlock: function (d, e) {
        for (var b = this._hash.words, n = b[0], j = b[1], h = b[2], g = b[3], l = b[4], a = 0; 80 > a; a++) {
          if (16 > a) m[a] = d[e + a] | 0;else {
            var c = m[a - 3] ^ m[a - 8] ^ m[a - 14] ^ m[a - 16];
            m[a] = c << 1 | c >>> 31;
          }
          c = (n << 5 | n >>> 27) + l + m[a];
          c = 20 > a ? c + ((j & h | ~j & g) + 1518500249) : 40 > a ? c + ((j ^ h ^ g) + 1859775393) : 60 > a ? c + ((j & h | j & g | h & g) - 1894007588) : c + ((j ^ h ^ g) - 899497514);
          l = g;
          g = h;
          h = j << 30 | j >>> 2;
          j = n;
          n = c;
        }
        b[0] = b[0] + n | 0;
        b[1] = b[1] + j | 0;
        b[2] = b[2] + h | 0;
        b[3] = b[3] + g | 0;
        b[4] = b[4] + l | 0;
      },
      _doFinalize: function () {
        var d = this._data,
          e = d.words,
          b = 8 * this._nDataBytes,
          g = 8 * d.sigBytes;
        e[g >>> 5] |= 128 << 24 - g % 32;
        e[(g + 64 >>> 9 << 4) + 14] = Math.floor(b / 4294967296);
        e[(g + 64 >>> 9 << 4) + 15] = b;
        d.sigBytes = 4 * e.length;
        this._process();
        return this._hash;
      },
      clone: function () {
        var e = d.clone.call(this);
        e._hash = this._hash.clone();
        return e;
      }
    });
  g.SHA1 = d._createHelper(l);
  g.HmacSHA1 = d._createHmacHelper(l);
})();
(function () {
  var g = CryptoJS,
    l = g.enc.Utf8;
  g.algo.HMAC = g.lib.Base.extend({
    init: function (e, d) {
      e = this._hasher = new e.init();
      "string" == typeof d && (d = l.parse(d));
      var g = e.blockSize,
        k = 4 * g;
      d.sigBytes > k && (d = e.finalize(d));
      d.clamp();
      for (var p = this._oKey = d.clone(), b = this._iKey = d.clone(), n = p.words, j = b.words, h = 0; h < g; h++) n[h] ^= 1549556828, j[h] ^= 909522486;
      p.sigBytes = b.sigBytes = k;
      this.reset();
    },
    reset: function () {
      var e = this._hasher;
      e.reset();
      e.update(this._iKey);
    },
    update: function (e) {
      this._hasher.update(e);
      return this;
    },
    finalize: function (e) {
      var d = this._hasher;
      e = d.finalize(e);
      d.reset();
      return d.finalize(this._oKey.clone().concat(e));
    }
  });
})();
(function () {
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var C_enc = C.enc;
  C_enc.Base64 = {
    stringify: function (wordArray) {
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;
      var map = this._map;
      wordArray.clamp();
      var base64Chars = [];
      for (var i = 0; i < sigBytes; i += 3) {
        var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
        var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
        var triplet = byte1 << 16 | byte2 << 8 | byte3;
        for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
          base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
        }
      }
      var paddingChar = map.charAt(64);
      if (paddingChar) {
        while (base64Chars.length % 4) {
          base64Chars.push(paddingChar);
        }
      }
      return base64Chars.join('');
    },
    parse: function (base64Str) {
      var base64StrLength = base64Str.length;
      var map = this._map;
      var paddingChar = map.charAt(64);
      if (paddingChar) {
        var paddingIndex = base64Str.indexOf(paddingChar);
        if (paddingIndex != -1) {
          base64StrLength = paddingIndex;
        }
      }
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = map.indexOf(base64Str.charAt(i - 1)) << i % 4 * 2;
          var bits2 = map.indexOf(base64Str.charAt(i)) >>> 6 - i % 4 * 2;
          words[nBytes >>> 2] |= (bits1 | bits2) << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    },
    _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
  };
})();

const signPost = (secretKey, bucket, secretId, key) => {
    const startTimestamp = Math.round(getNow() / 1000);
    const endTimestamp = startTimestamp + 3600;
    const keyTime = `${startTimestamp};${endTimestamp}`;
    const signKey = CryptoJS.HmacSHA1(keyTime, secretKey).toString();
    const policy = JSON.stringify({
        expiration: new Date(getNow() + 60 * 1000).toISOString(),
        conditions: [{ key: key }, { bucket: bucket }, { 'q-sign-algorithm': 'sha1' }, { 'q-ak': secretId }, { 'q-sign-time': keyTime }],
    });
    const policyBase64 = window.btoa(policy);
    const stringToSign = CryptoJS.SHA1(policy).toString();
    const signature = CryptoJS.HmacSHA1(stringToSign, signKey).toString();
    return {
        signature,
        keyTime,
        policyBase64,
    };
};

async function postObject(options) {
    try {
        while (!config.cosInfo) {
            await new Promise(resolve => setTimeout(resolve, 100));
        }
        const info = config.cosInfo;
        const host = config.customHost || `${info.bucket}.cos.${info.region}.myqcloud.com`;
        const { signature, keyTime, policyBase64 } = signPost(info.secretkey, info.bucket, info.secretid, options.key);
        const formData = new FormData();
        formData.append('policy', policyBase64);
        formData.append('key', options.key);
        formData.append('x-cos-security-token', info.token);
        formData.append('q-key-time', keyTime);
        formData.append('q-sign-algorithm', 'sha1');
        formData.append('q-ak', info.secretid);
        formData.append('q-signature', signature);
        formData.append('file', new Blob([options.body]));
        const response = await fetch(`https://${host}`, {
            method: 'POST',
            body: formData,
        });
        count(MetricType.CosPost);
        if (response.status < 300) {
            const headers = {};
            response.headers.forEach((value, key) => {
                headers[key.toLowerCase()] = value;
            });
            return {
                status: response.status,
                headers,
            };
        }
        else {
            throw new Error(`postObject status ${response.status} ${await response.text()}`);
        }
    }
    catch (e) {
        const newErr = new Error(`postObject fetch fail: ${e.message} length=${options.body.length}`);
        newErr.stack = e.stack;
        newErr.name = e.name;
        throw newErr;
    }
}
function postObjectWithSendBeacon(options) {
    if (!config.cosInfo) {
        setTimeout(() => postObjectWithSendBeacon(options), 100);
        return;
    }
    const info = config.cosInfo;
    const host = config.customHost || `${info.bucket}.cos.${info.region}.myqcloud.com`;
    const { signature, keyTime, policyBase64 } = signPost(info.secretkey, info.bucket, info.secretid, options.key);
    const formData = new FormData();
    formData.append('policy', policyBase64);
    formData.append('key', options.key);
    formData.append('x-cos-security-token', info.token);
    formData.append('q-key-time', keyTime);
    formData.append('q-sign-algorithm', 'sha1');
    formData.append('q-ak', info.secretid);
    formData.append('q-signature', signature);
    formData.append('file', new Blob([options.body]));
    navigator.sendBeacon(`https://${host}`, formData);
    count(MetricType.CosPost);
}
async function putObjectWithWxData(key, body) {
    {
        if (body instanceof Uint8Array) {
            body = btoa(String.fromCharCode.apply(null, body));
        }
        count(MetricType.CosPutWithWxData);
        const ret = new Promise((resolve, reject) => {
            wx.operateWXData('webapi_wxobbackstopputobject', {
                project_key: config.projectId,
                object_name: key,
                object_value: body,
                success: (res) => {
                    resolve(res);
                },
                fail: (err) => {
                    reject(err);
                },
            });
        });
        return ret;
    }
}

var ExtractedEventType;
(function (ExtractedEventType) {
  ExtractedEventType[ExtractedEventType["Open"] = 0] = "Open";
  ExtractedEventType[ExtractedEventType["Tap"] = 8] = "Tap";
  ExtractedEventType[ExtractedEventType["Click"] = 10] = "Click";
  ExtractedEventType[ExtractedEventType["Start"] = 11] = "Start";
  ExtractedEventType[ExtractedEventType["Stop"] = 12] = "Stop";
  ExtractedEventType[ExtractedEventType["CustomAttr"] = 13] = "CustomAttr";
  ExtractedEventType[ExtractedEventType["Routing"] = 14] = "Routing";
  ExtractedEventType[ExtractedEventType["WxInput"] = 16] = "WxInput";
  ExtractedEventType[ExtractedEventType["VisibilityChange"] = 17] = "VisibilityChange";
  ExtractedEventType[ExtractedEventType["Env"] = 40] = "Env";
  ExtractedEventType[ExtractedEventType["WindowState"] = 41] = "WindowState";
  ExtractedEventType[ExtractedEventType["Depth"] = 83] = "Depth";
  ExtractedEventType[ExtractedEventType["EleExposure"] = 84] = "EleExposure";
  ExtractedEventType[ExtractedEventType["EleUnExposure"] = 85] = "EleUnExposure";
  ExtractedEventType[ExtractedEventType["CommonDeps"] = 86] = "CommonDeps";
  ExtractedEventType[ExtractedEventType["UserScreenCapture"] = 87] = "UserScreenCapture";
  ExtractedEventType[ExtractedEventType["CustomEvent"] = 88] = "CustomEvent";
  ExtractedEventType[ExtractedEventType["UiReaction"] = 89] = "UiReaction";
  ExtractedEventType[ExtractedEventType["OnError"] = 90] = "OnError";
  ExtractedEventType[ExtractedEventType["OnUnhandledRejection"] = 91] = "OnUnhandledRejection";
  ExtractedEventType[ExtractedEventType["OnPageNotFound"] = 92] = "OnPageNotFound";
  ExtractedEventType[ExtractedEventType["OnLazyLoadError"] = 93] = "OnLazyLoadError";
  ExtractedEventType[ExtractedEventType["ToastError"] = 94] = "ToastError";
  ExtractedEventType[ExtractedEventType["RequestError"] = 95] = "RequestError";
  ExtractedEventType[ExtractedEventType["UploadFileError"] = 96] = "UploadFileError";
  ExtractedEventType[ExtractedEventType["DownloadFileError"] = 97] = "DownloadFileError";
  ExtractedEventType[ExtractedEventType["ConnectSocketError"] = 98] = "ConnectSocketError";
  ExtractedEventType[ExtractedEventType["ImgLoadError"] = 99] = "ImgLoadError";
  ExtractedEventType[ExtractedEventType["BatchReport"] = 101] = "BatchReport";
  ExtractedEventType[ExtractedEventType["Unsupported"] = 102] = "Unsupported";
  ExtractedEventType[ExtractedEventType["WeSessionIdChanged"] = 103] = "WeSessionIdChanged";
  ExtractedEventType[ExtractedEventType["NetworkAPI"] = 110] = "NetworkAPI";
  ExtractedEventType[ExtractedEventType["ConsoleError"] = 111] = "ConsoleError";
  ExtractedEventType[ExtractedEventType["ConsoleWarn"] = 112] = "ConsoleWarn";
  ExtractedEventType[ExtractedEventType["RTLogError"] = 113] = "RTLogError";
  ExtractedEventType[ExtractedEventType["RTLogWarn"] = 114] = "RTLogWarn";
  ExtractedEventType[ExtractedEventType["PerfAPI"] = 115] = "PerfAPI";
  ExtractedEventType[ExtractedEventType["NetworkWeak"] = 116] = "NetworkWeak";
  ExtractedEventType[ExtractedEventType["NetworkStatus"] = 117] = "NetworkStatus";
  ExtractedEventType[ExtractedEventType["FirstExposure"] = 118] = "FirstExposure";
  ExtractedEventType[ExtractedEventType["MemoryWarning"] = 119] = "MemoryWarning";
  ExtractedEventType[ExtractedEventType["RTLogInfo"] = 120] = "RTLogInfo";
  ExtractedEventType[ExtractedEventType["RTLogDebug"] = 121] = "RTLogDebug";
  ExtractedEventType[ExtractedEventType["InformationAmount"] = 122] = "InformationAmount";
  ExtractedEventType[ExtractedEventType["NavigateTo"] = 701] = "NavigateTo";
  ExtractedEventType[ExtractedEventType["RedirectTo"] = 702] = "RedirectTo";
  ExtractedEventType[ExtractedEventType["NavigateBack"] = 703] = "NavigateBack";
  ExtractedEventType[ExtractedEventType["SwitchTab"] = 704] = "SwitchTab";
  ExtractedEventType[ExtractedEventType["AppLaunch"] = 705] = "AppLaunch";
  ExtractedEventType[ExtractedEventType["ReLaunch"] = 706] = "ReLaunch";
  ExtractedEventType[ExtractedEventType["AutoReLaunch"] = 707] = "AutoReLaunch";
  ExtractedEventType[ExtractedEventType["AppShow"] = 720] = "AppShow";
  ExtractedEventType[ExtractedEventType["AppHide"] = 721] = "AppHide";
  ExtractedEventType[ExtractedEventType["PageShow"] = 722] = "PageShow";
  ExtractedEventType[ExtractedEventType["PageAddToFavorites"] = 723] = "PageAddToFavorites";
  ExtractedEventType[ExtractedEventType["InitState"] = 730] = "InitState";
  ExtractedEventType[ExtractedEventType["ShowModal"] = 740] = "ShowModal";
  ExtractedEventType[ExtractedEventType["CloseModal"] = 741] = "CloseModal";
  ExtractedEventType[ExtractedEventType["ShowActionSheet"] = 742] = "ShowActionSheet";
  ExtractedEventType[ExtractedEventType["CloseActionSheet"] = 743] = "CloseActionSheet";
  ExtractedEventType[ExtractedEventType["ShowToast"] = 744] = "ShowToast";
  ExtractedEventType[ExtractedEventType["HideToast"] = 745] = "HideToast";
  ExtractedEventType[ExtractedEventType["OnShareAppMessage"] = 746] = "OnShareAppMessage";
  ExtractedEventType[ExtractedEventType["DoShareAppMessage"] = 747] = "DoShareAppMessage";
  ExtractedEventType[ExtractedEventType["OnShareTimeline"] = 748] = "OnShareTimeline";
  ExtractedEventType[ExtractedEventType["DoShareTimeline"] = 749] = "DoShareTimeline";
  ExtractedEventType[ExtractedEventType["KeyBoardHeightChange"] = 750] = "KeyBoardHeightChange";
  ExtractedEventType[ExtractedEventType["TabItemTap"] = 751] = "TabItemTap";
  ExtractedEventType[ExtractedEventType["PageStaytime"] = 760] = "PageStaytime";
  ExtractedEventType[ExtractedEventType["WeSession"] = 780] = "WeSession";
  ExtractedEventType[ExtractedEventType["ReserveChannelsLive"] = 800] = "ReserveChannelsLive";
  ExtractedEventType[ExtractedEventType["ReserveChannelsLiveDone"] = 801] = "ReserveChannelsLiveDone";
  ExtractedEventType[ExtractedEventType["OpenChannelsUserProfile"] = 802] = "OpenChannelsUserProfile";
  ExtractedEventType[ExtractedEventType["OpenChannelsUserProfileDone"] = 803] = "OpenChannelsUserProfileDone";
  ExtractedEventType[ExtractedEventType["OpenChannelsLive"] = 804] = "OpenChannelsLive";
  ExtractedEventType[ExtractedEventType["OpenChannelsLiveDone"] = 805] = "OpenChannelsLiveDone";
  ExtractedEventType[ExtractedEventType["OpenChannelsEvent"] = 806] = "OpenChannelsEvent";
  ExtractedEventType[ExtractedEventType["OpenChannelsEventDone"] = 807] = "OpenChannelsEventDone";
  ExtractedEventType[ExtractedEventType["OpenChannelsActivity"] = 808] = "OpenChannelsActivity";
  ExtractedEventType[ExtractedEventType["OpenChannelsActivityDone"] = 809] = "OpenChannelsActivityDone";
  ExtractedEventType[ExtractedEventType["GetChannelsShareKey"] = 810] = "GetChannelsShareKey";
  ExtractedEventType[ExtractedEventType["GetChannelsShareKeyDone"] = 811] = "GetChannelsShareKeyDone";
  ExtractedEventType[ExtractedEventType["GetChannelsLiveNoticeInfo"] = 812] = "GetChannelsLiveNoticeInfo";
  ExtractedEventType[ExtractedEventType["GetChannelsLiveNoticeInfoDone"] = 813] = "GetChannelsLiveNoticeInfoDone";
  ExtractedEventType[ExtractedEventType["GetChannelsLiveInfo"] = 814] = "GetChannelsLiveInfo";
  ExtractedEventType[ExtractedEventType["GetChannelsLiveInfoDone"] = 815] = "GetChannelsLiveInfoDone";
  ExtractedEventType[ExtractedEventType["RequestPayment"] = 820] = "RequestPayment";
  ExtractedEventType[ExtractedEventType["RequestPaymentDone"] = 821] = "RequestPaymentDone";
  ExtractedEventType[ExtractedEventType["RequestPluginPayment"] = 822] = "RequestPluginPayment";
  ExtractedEventType[ExtractedEventType["RequestPluginPaymentDone"] = 823] = "RequestPluginPaymentDone";
  ExtractedEventType[ExtractedEventType["RequestSubscribeMessage"] = 824] = "RequestSubscribeMessage";
  ExtractedEventType[ExtractedEventType["RequestSubscribeMessageDone"] = 825] = "RequestSubscribeMessageDone";
  ExtractedEventType[ExtractedEventType["RequestOrderPayment"] = 826] = "RequestOrderPayment";
  ExtractedEventType[ExtractedEventType["RequestOrderPaymentDone"] = 827] = "RequestOrderPaymentDone";
  ExtractedEventType[ExtractedEventType["PreviewMedia"] = 830] = "PreviewMedia";
  ExtractedEventType[ExtractedEventType["PreviewMediaDone"] = 831] = "PreviewMediaDone";
  ExtractedEventType[ExtractedEventType["PreviewImage"] = 832] = "PreviewImage";
  ExtractedEventType[ExtractedEventType["PreviewImageDone"] = 833] = "PreviewImageDone";
  ExtractedEventType[ExtractedEventType["EditImage"] = 834] = "EditImage";
  ExtractedEventType[ExtractedEventType["EditImageDone"] = 835] = "EditImageDone";
  ExtractedEventType[ExtractedEventType["CropImage"] = 836] = "CropImage";
  ExtractedEventType[ExtractedEventType["CropImageDone"] = 837] = "CropImageDone";
  ExtractedEventType[ExtractedEventType["ChooseMessageFile"] = 838] = "ChooseMessageFile";
  ExtractedEventType[ExtractedEventType["ChooseMessageFileDone"] = 839] = "ChooseMessageFileDone";
  ExtractedEventType[ExtractedEventType["ChooseImage"] = 840] = "ChooseImage";
  ExtractedEventType[ExtractedEventType["ChooseImageDone"] = 841] = "ChooseImageDone";
  ExtractedEventType[ExtractedEventType["ChooseVideo"] = 842] = "ChooseVideo";
  ExtractedEventType[ExtractedEventType["ChooseVideoDone"] = 843] = "ChooseVideoDone";
  ExtractedEventType[ExtractedEventType["ChooseMedia"] = 844] = "ChooseMedia";
  ExtractedEventType[ExtractedEventType["ChooseMediaDone"] = 845] = "ChooseMediaDone";
  ExtractedEventType[ExtractedEventType["OpenLocation"] = 846] = "OpenLocation";
  ExtractedEventType[ExtractedEventType["OpenLocationDone"] = 847] = "OpenLocationDone";
  ExtractedEventType[ExtractedEventType["OpenDocument"] = 848] = "OpenDocument";
  ExtractedEventType[ExtractedEventType["OpenDocumentDone"] = 849] = "OpenDocumentDone";
  ExtractedEventType[ExtractedEventType["OpenSetting"] = 850] = "OpenSetting";
  ExtractedEventType[ExtractedEventType["OpenSettingDone"] = 851] = "OpenSettingDone";
  ExtractedEventType[ExtractedEventType["ReportH5SessionId"] = 910] = "ReportH5SessionId";
  ExtractedEventType[ExtractedEventType["SimpleRepetitiveEvent"] = 6001] = "SimpleRepetitiveEvent";
  ExtractedEventType[ExtractedEventType["ConsecutiveRepetitiveEvent"] = 6002] = "ConsecutiveRepetitiveEvent";
})(ExtractedEventType || (ExtractedEventType = {}));
var WxInputDataType;
(function (WxInputDataType) {
  WxInputDataType[WxInputDataType["Change"] = 0] = "Change";
  WxInputDataType[WxInputDataType["Focus"] = 1] = "Focus";
  WxInputDataType[WxInputDataType["Blur"] = 2] = "Blur";
})(WxInputDataType || (WxInputDataType = {}));

function transformEvent(event) {
    switch (event.type) {
        case EventType.Tap:
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.Tap,
                seq: event.seq,
                data: {
                    x: event.tap?.x,
                    y: event.tap?.y,
                    pageX: event.tap?.pageX,
                    pageY: event.tap?.pageY,
                    relativeX: event.tap?.relativeX,
                    relativeY: event.tap?.relativeY,
                    identifier: event.tap?.identifier,
                    selector: event.selector,
                    n: event.selectorN,
                    ancestorPath: event.tap?.ancestorPath,
                    innerText: event.tap?.innerText,
                    isRage: event.tap?.isRage,
                },
            };
        case EventType.Click: {
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.Click,
                seq: event.seq,
                data: {
                    x: event.click?.x,
                    y: event.click?.y,
                    pageX: event.click?.pageX,
                    pageY: event.click?.pageY,
                    relativeX: event.click?.relativeX,
                    relativeY: event.click?.relativeY,
                    selector: event.selector,
                    n: event.selectorN,
                    ancestorPath: event.click?.ancestorPath,
                    innerText: event.click?.innerText,
                    isRage: event.click?.isRage,
                },
            };
        }
        case EventType.CusttomAttr:
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.CustomAttr,
                seq: event.seq,
                data: {
                    [event.customKey]: event.customValue,
                },
            };
        case EventType.CustomEvent:
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.CustomEvent,
                seq: event.seq,
                data: (event.customEventProps ?? []).reduce((pre, cur) => {
                    if (cur.key && cur.value)
                        pre[cur.key] = cur.value;
                    return pre;
                }, {}),
            };
        case EventType.WxInput:
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.WxInput,
                seq: event.seq,
                data: {
                    selector: event.selector,
                    n: event.selectorN,
                    ancestorPath: event?.wxInput?.ancestorPath,
                    text: '',
                    id: 0,
                    placeholder: event.wxInput?.placeholder ?? '',
                    type: event.wxInput?.type,
                },
            };
        case EventType.VisibilityChange:
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.VisibilityChange,
                seq: event.seq,
                data: {
                    visibility: event.visibility,
                    inactiveTime: event.inactiveTime,
                },
            };
        case EventType.Env: {
            break;
        }
        case EventType.Routing: {
            break;
        }
        case EventType.Depth: {
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.Depth,
                seq: event.seq,
                data: event.depth,
            };
        }
        case EventType.StayTime: {
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.PageStaytime,
                data: {
                    path: event.stayTime.path,
                    staytime: event.stayTime.staytime,
                    query: event.stayTime.query,
                },
            };
        }
        case EventType.FirstExposure:
        case EventType.EleExposure:
        case EventType.EleUnExposure: {
            const typeName = EventType[event.type];
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType[typeName],
                data: event.exposure,
            };
        }
        case EventType.CommonDeps: {
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.CommonDeps,
                data: {
                    deps: event.commonDeps,
                },
            };
        }
        case EventType.UiReaction: {
            return {
                timestamp: event.timestamp,
                networktype: event.networkStatus ?? '',
                type: ExtractedEventType.UiReaction,
                data: {},
            };
        }
        case EventType.InformationAmount: {
            const arbitraryData = event.arbitraryData;
            if (arbitraryData) {
                const length = arbitraryData.length;
                const data = {};
                for (let i = 0; i < length; i++) {
                    const key = arbitraryData[i].key, value = arbitraryData[i].value ?? arbitraryData[i].valueInt;
                    if (key && value !== undefined && value !== null) {
                        data[key] = value;
                    }
                }
                return {
                    timestamp: event.timestamp,
                    networktype: event.networkStatus ?? '',
                    type: ExtractedEventType.InformationAmount,
                    data,
                };
            }
            else
                return null;
        }
        case EventType.SimpleRepetitiveEvent: {
            return {
                timestamp: event.timestamp,
                type: ExtractedEventType.SimpleRepetitiveEvent,
                networktype: event.networkStatus ?? '',
                data: {
                    x: event.pointers?.[0]?.x,
                    y: event.pointers?.[0]?.y,
                    n: event.pointers?.[0]?.identifier,
                },
            };
        }
        case EventType.ConsecutiveRepetitiveEvent: {
            return {
                timestamp: event.timestamp,
                type: ExtractedEventType.ConsecutiveRepetitiveEvent,
                networktype: event.networkStatus ?? '',
                data: {
                    x: event.pointers?.[0]?.x,
                    y: event.pointers?.[0]?.y,
                    n: event.pointers?.[0]?.identifier,
                },
            };
        }
        case EventType.WebNetwork: {
            return {
                timestamp: event.timestamp,
                type: ExtractedEventType.NetworkAPI,
                data: {
                    api: 1,
                    success: event.network?.success ?? false,
                    url: event.network?.url ?? '',
                    statusCode: event.network?.status ?? 0,
                    cost: event.network?.cost ?? 0,
                    errMsg: event.network?.errMsg ?? '',
                    requestData: event.network?.reqBody ?? '',
                    responseData: event.network?.resBody ?? '',
                },
            };
        }
    }
    return null;
}
function extractEvents(events, startSeq) {
    let extractedSeq = startSeq;
    const extractedEvents = [];
    for (const e of events) {
        const extracted = transformEvent(e);
        if (extracted) {
            const event = {
                ...extracted,
                extractedSeq: extractedSeq++,
            };
            extractedEvents.push(event);
        }
    }
    extractedEvents.push(genBatchEvents(events, extractedSeq++));
    return [extractedEvents, extractedSeq];
}
function genBatchEvents(allEvents, extractedSeq) {
    return {
        type: ExtractedEventType.BatchReport,
        networktype: '',
        timestamp: getMaxTimeStamp(allEvents),
        data: {},
        extractedSeq,
    };
}
function getMaxTimeStamp(allEvents) {
    let ret = 0;
    for (const evt of allEvents) {
        if (evt.timestamp && evt.timestamp > ret) {
            ret = evt.timestamp;
        }
    }
    if (ret)
        return ret;
    return getNow();
}

let key = null;
function encrypt(binary) {
    return schedule({
        fn: _encrypt.bind(null, binary),
        desc: 'encrypt',
    });
}
async function _encrypt(binary, task) {
    if (!config.encrypt)
        throw new Error('[tel] no encrypt info');
    const timer = startTiming();
    {
        if (key === null) {
            key = await window.crypto.subtle.importKey('raw', strToU8(config.encrypt.key), 'AES-CBC', true, ['encrypt']);
        }
        const encrypted = new Uint8Array(await window.crypto.subtle.encrypt({ name: 'AES-CBC', iv: strToU8(config.encrypt.iv) }, key, binary));
        const cost = timer.end();
        wxConsole.log('[tel] [perf] encrypt', cost);
        addDataPoint(MetricType.EncryptCost, cost);
        task.done(encrypted);
    }
}
function encryptSync(binary) {
    if (!config.encrypt)
        throw new Error('[tel] no encrypt info');
    throw new Error('[tel] CryptoJS is not ready');
}
async function subscribeEncryptTask() {
    if (window.wx) {
        const subscribe = () => {
            try {
                wx?.subscribe?.('wxobs:encrypt', async (payload) => {
                    const { data: base64Data, id } = payload;
                    wxConsole.log('[tel] wxobs:encrypt data length', base64Data.length);
                    const data = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));
                    const encryptTask = encrypt(data);
                    const encryptTaskEndInfo = await encryptTask.promise;
                    const encrypted = encryptTaskEndInfo.result;
                    wx?.publish?.('wxobs:encryptDone', {
                        id,
                        data: btoa(String.fromCharCode(...new Uint8Array(encrypted))),
                    });
                });
            }
            catch {
                wxConsole.warn('[tel] wxobs:encrypt subscribe failed');
            }
        };
        setTimeout(subscribe);
    }
}
subscribeEncryptTask();

const INTERVAL = 150;
let depsBuffer = [];
function addDep(key) {
    depsBuffer.push(key);
    debouncedEncode$2();
}
const debouncedEncode$2 = debounce(encodeAndSave$5, INTERVAL, {
    maxWait: INTERVAL * 3,
});
function encodeAndSave$5() {
    schedule({
        id: 'common_deps',
        fn: _encodeAndSave$5,
    });
}
function _encodeAndSave$5(task) {
    if (depsBuffer.length === 0) {
        task.done();
        return;
    }
    const protocolEvents = [
        {
            seq: nextSeq(),
            type: EventType.CommonDeps,
            commonDeps: depsBuffer,
            elapsedTime: elapsed(),
        },
    ];
    save(protocolEvents);
    depsBuffer = [];
    task.done();
}

const uploadedCommon = new Set();
let uploadedCommonInited = false;
let pendingGetUploadedCommonAssets;
const pendingAssetBuffer = [];
async function uploadToCos(data, appserviceDataList, ops) {
    if (config.coslessMode)
        return;
    const startUploadTime = performance.now();
    const startTimestamp = getNow();
    const chunks = [];
    const uuid = config.uuid;
    const objectKey = `${config.projectId}/${uuid}-webview-${getNow()}-${uuidv4().slice(0, 5)}`;
    let addedHeader = false;
    if (data.length) {
        const skvKey = ops.encrypted ? `encrypt:${config.encrypt?.version}${getCompressTag(ops.compressSpec)}` : `raw:1`;
        chunks.push(create(true, [[skvKey, data]]));
        addedHeader = true;
        wxConsole.log('[tel] webview data chunk', data.length);
    }
    let appserviceDatasize = 0;
    for (const appserviceData of appserviceDataList) {
        const key = appserviceData.metadata.encrypted ? `encrypt:${config.encrypt.version}` : 'raw:1';
        chunks.push(create(!addedHeader, [[`appservice:0;${key}`, new Uint8Array(appserviceData.data)]]));
        addedHeader = true;
        count(MetricType.PackAppserviceDataIntoWebviewKvs);
        appserviceDatasize += appserviceData.data.byteLength;
        wxConsole.log('[tel] appservice chunk', appserviceData.data.byteLength);
    }
    if (!chunks.length) {
        wxConsole.log('[tel] no data to upload');
        return;
    }
    const chunk = merge(...chunks);
    if (ops.useWxData) {
        wxConsole.log('[tel] putting with wxdata', data.length, chunk.length);
        await putObjectWithWxData(objectKey, chunk);
        wxConsole.log('[tel] put with wxdata suc');
    }
    else {
        wxConsole.log('[tel] putting', data.length, chunk.length);
        const response = await postObject({
            key: objectKey,
            body: chunk,
        });
        wxConsole.log('[tel] put suc', config.uuid, response);
    }
    onPxReport(startTimestamp);
    count(MetricType.UploadCosSucess);
    addDataPoint(MetricType.UploadCosCost, performance.now() - startUploadTime);
    sum(MetricType.UploadCosSize, data.length);
    sum(MetricType.ReportAppserviceDataInWebviewSize, appserviceDatasize);
}
function uploadToCosWithSendBeacon(data, ops) {
    const uuid = config.uuid;
    const objectKey = `${config.projectId}/${uuid}-webview-${getNow()}-${uuidv4().slice(0, 5)}`;
    const skvKey = ops.encrypted ? `encrypt:${config.encrypt?.version}${getCompressTag()}` : 'raw:1';
    const chunk = create(true, [[skvKey, data]]);
    wxConsole.log('[tel] putting', data.length, chunk.length);
    postObjectWithSendBeacon({
        key: objectKey,
        body: chunk,
    });
    count(MetricType.UploadCosSucess);
    sum(MetricType.UploadCosSize, data.length);
    wxConsole.log('[tel] appendObject suc');
}
function getCompressTag(spec) {
    return spec ? `;c:${spec}` : '';
}
async function uploadCommonAsset(data, name, type) {
    if (config.coslessMode)
        return;
    addDep(name);
    if (type === 'image/webp') {
        sum(MetricType.CanvasAllCaptureSize, data.length);
    }
    if (!uploadedCommonInited) {
        if (pendingGetUploadedCommonAssets) {
            await pendingGetUploadedCommonAssets;
        }
        else {
            try {
                pendingGetUploadedCommonAssets = getStorage(config.uuid).getCommonAssetsByStatus(CommonAssetStatus.Uploaded);
                const assets = await pendingGetUploadedCommonAssets;
                for (const { name } of assets) {
                    uploadedCommon.add(name);
                }
                uploadedCommonInited = true;
                wxConsole.log('[tel] asset cache', assets);
            }
            finally {
                pendingGetUploadedCommonAssets = undefined;
            }
        }
    }
    if (uploadedCommon.has(name))
        return;
    if (pendingAssetBuffer.some(a => a.name === name)) {
        return;
    }
    const objectKey = `${config.projectId}/common/${name}`;
    const existence = await checkObjectsExist([objectKey]);
    if (existence[objectKey]) {
        uploadedCommon.add(name);
        getStorage(config.uuid).saveCommonAsset({
            name,
            type,
            status: CommonAssetStatus.Uploaded,
            value: '',
        });
        count(MetricType.CommonAssetHit);
        sum(MetricType.HitCommonSize, data.length);
        return;
    }
    if (type === 'image/webp') {
        sum(MetricType.CanvasUploadCaptureSize, data.length);
    }
    pendingAssetBuffer.push({
        name,
        type,
        value: data,
        status: CommonAssetStatus.Unknown,
    });
    throttledScheduleUploadCommonAssset();
    if (typeof data === 'string') {
        memo({
            key: `#${name}`,
            value: data,
        });
    }
}
const throttledScheduleUploadCommonAssset = throttle(scheduleUploadCommonAsset, 100, {
    leading: false,
});
function scheduleUploadCommonAsset() {
    return schedule({
        id: 'uploadCommonAssets',
        fn: _uploadCommonAssets,
    });
}
const pendingObjectNameList = new Set();
const throttledCheckObjectsExistCallbacks = new Set();
async function checkObjectsExist(objectNameList) {
    for (const objectName of objectNameList) {
        pendingObjectNameList.add(objectName);
    }
    return new Promise((resolve, reject) => {
        throttledCheckObjectsExistCallbacks.add(resolve);
        throttledCheckObjectsExist();
    });
}
const throttledCheckObjectsExist = throttle(_checkObjectsExist, 50, {
    leading: false,
});
async function _checkObjectsExist() {
    const objectNameList = Array.from(pendingObjectNameList);
    pendingObjectNameList.clear();
    const cbs = Array.from(throttledCheckObjectsExistCallbacks);
    throttledCheckObjectsExistCallbacks.clear();
    let result = {};
    try {
        const response = await fetch('https://servicewechat.com/ob/objectexist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-wx-ob-project-key': config.projectId,
                'x-wx-ob-env': "miniprogram" === 'web' ? 'web' : 'webview',
            },
            body: JSON.stringify({
                object_name_list: objectNameList,
                cloud_service_provider: config.cloudServiceProvider,
            }),
        });
        const data = (await response.json());
        if (data.base_resp.ret === 0) {
            result = data.object_exist_status_list.reduce((result, status) => {
                result[status.object_name] = status.is_exist;
                return result;
            }, {});
        }
        else {
            throw new Error(`Error checking object existence: ${data.base_resp.msg}`);
        }
    }
    catch (error) {
        wxConsole.warn('[tel] checkObjectsExist error', error);
        handleError({ type: ErrorType.CommonUploadError, e: error, extra: `checkObjectsExist` });
    }
    cbs.forEach(cb => cb(result));
    return result;
}
const BATCH_SIZE = 50;
async function processBatch(assetsBatch) {
    assetsBatch.map(asset => `${config.projectId}/common/${asset.name}`);
    for (const asset of assetsBatch) {
        const { name, type, value } = asset;
        const objectKey = `${config.projectId}/common/${name}`;
        count(MetricType.CommonAssetMiss);
        wxConsole.log('[tel] creating common', name, value.length);
        const response = await postObject({
            key: objectKey,
            headers: {
                'Content-Type': type,
            },
            body: value,
        });
        sum(MetricType.UploadCommonSize, value.length);
        wxConsole.log('[tel] create common suc', response);
        uploadedCommon.add(name);
        getStorage(config.uuid).saveCommonAsset({
            name,
            type,
            status: CommonAssetStatus.Uploaded,
            value: '',
        });
    }
}
async function _uploadCommonAssets(task) {
    try {
        task.done();
        while (pendingAssetBuffer.length > 0) {
            const assetsBatch = pendingAssetBuffer.splice(0, BATCH_SIZE);
            await processBatch(assetsBatch);
        }
    }
    catch (e) {
        wxConsole.warn('[tel] uca error', e);
        handleError({ type: ErrorType.CommonUploadError, e, extra: `uploadCommonAssets` });
    }
    finally {
        if (pendingAssetBuffer.length) {
            scheduleUploadCommonAsset();
        }
    }
}
function uploadExtracted(events) {
    return schedule({
        id: 'uploadExtracted',
        fn: _uploadExtracted.bind(null, events),
    });
}
async function _uploadExtracted(allEvents, task) {
    const extractTask = await getPackedExtracted(allEvents);
    task.call(extractTask.id);
    const extractTaskEndInfo = await extractTask.promise;
    const extracted = extractTaskEndInfo.result;
    for (const { data, encrypted } of extracted) {
        try {
            await uploadToWx(data, { encrypted });
        }
        catch (e) {
            wxConsole.warn('[tel] uploadExtracted error', e);
            handleError({ type: ErrorType.WebviewReportWx, e, extra: `uploadExtracted` });
        }
    }
    task.done();
}
function getPackedExtracted(events) {
    return schedule({
        id: 'getPackedExtracted',
        fn: _getPackedExtracted.bind(null, events),
    });
}
async function _getPackedExtracted(allEvents, task) {
    const { uuid } = config;
    const events = allEvents.filter(e => e.uuid === uuid);
    const webviewSessionEvents = {};
    for (const e of events) {
        const key = `${e.webviewId}_${e.weSessionId}`;
        if (!webviewSessionEvents[key]) {
            webviewSessionEvents[key] = {
                ...e,
            };
        }
        else {
            webviewSessionEvents[key].events.push(...e.events);
        }
    }
    if (Object.keys(webviewSessionEvents).length === 0) {
        webviewSessionEvents['0_'] = {
            events: [],
            index: '0',
            path: '',
            webviewId: 0,
            uuid: uuid,
            ts: 0,
            weSessionId: '',
            sessionLifeTimeMeta: {
                weSessionId: '',
                wesessionScene: 0,
                wesessionSceneNote: '',
                isWesessionEntrance: 0,
                openSource: 1,
            },
            query: {},
        };
    }
    const result = [];
    for (const key in webviewSessionEvents) {
        const [webviewId, weSessionId] = key.split('_');
        const numericWebviewId = parseInt(webviewId);
        const storedE = webviewSessionEvents[key];
        const es = storedE.events;
        const extractedSeq = getExtractedSeq();
        const [extractedEvents, updatedExtractedSeq] = extractEvents(es, extractedSeq);
        wxConsole.log('[tel] extractedEvents', extractedEvents);
        if (extractedEvents.length) {
            try {
                const sessionLifeTimeMeta = storedE.sessionLifeTimeMeta;
                const d = {
                    record: {
                        localUid: "miniprogram" === 'web' ? getUserIdentifier() : getLocalUid(),
                        customUid: getCustomUid(),
                        hashUid: config.hashUid ?? undefined,
                        uuid: uuid,
                        event: JSON.stringify(extractedEvents),
                        path: "miniprogram" === 'web'
                            ? window.location.href.replace(window.location.search, '').replace(window.location.hash, '')
                            : storedE.path,
                        query: JSON.stringify(storedE.query ?? {}),
                        projectKey: config.projectId,
                        sdkVersion: config.sdkVersion,
                        timestamp: getNow(),
                        webviewId: numericWebviewId,
                        weSessionId: weSessionId,
                        wesessionScene: sessionLifeTimeMeta.wesessionScene,
                        wesessionSceneNote: sessionLifeTimeMeta.wesessionSceneNote,
                        isWesessionEntrance: sessionLifeTimeMeta.isWesessionEntrance,
                        openSource: sessionLifeTimeMeta.openSource,
                        coslessMode: config.coslessMode ?? false,
                        appVersion: config.appVersion,
                        ...(config.staticMeta ?? {
                            openId: '',
                            enterScene: 0,
                            languageVersion: '',
                            clientVersion: 0,
                            addState: -1,
                            envVersion: -1,
                            networkStatus: '',
                            appversion: '',
                            devicemodel: '',
                            devicebrand: '',
                            osName: '',
                            osVersion: '',
                        }),
                    },
                };
                wxConsole.log('[tel] getPackedExtracted', d);
                const compressTask = compress(strToU8(JSON.stringify(d)));
                task.call(compressTask.id);
                const compressTaskEndInfo = await compressTask.promise;
                let data = compressTaskEndInfo.result.compressed;
                let encrypted = false;
                if (config.encrypt) {
                    const encryptTask = encrypt(data);
                    task.call(encryptTask.id);
                    const encryptTaskEndInfo = await encryptTask.promise;
                    data = encryptTaskEndInfo.result;
                    encrypted = true;
                }
                result.push({
                    data,
                    encrypted,
                });
                setExtractedSeq(updatedExtractedSeq);
            }
            catch (e) {
                wxConsole.warn('[tel] getPackedExtracted error', e);
                handleError({ type: ErrorType.WebviewReportWx, e, extra: `getPackedExtracted` });
            }
        }
    }
    task.done(result);
    return result;
}
async function uploadToWx(data, ops) {
    await fetch('https://servicewechat.com/ob/wxob', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'x-wx-ob-env': 'webview',
            'x-wx-ob-sdkversion': config.sdkVersion || '',
            'x-wx-ob-pack-version': ops.encrypted ? PACK_VERSION.CompressedAndAesCbc : PACK_VERSION.Compressed,
            'x-wx-ob-project-key': config.projectId,
        },
        body: data,
    });
    sum(MetricType.UploadWxSize, data.length);
}
async function reportUnsupported(uuid, projectId, sdkVersion) {
    const d = {
        record: {
            localUid: getLocalUid(),
            customUid: getCustomUid(),
            uuid: uuid,
            event: JSON.stringify([{ type: ExtractedEventType.Unsupported }]),
            path: '',
            query: '{}',
            projectKey: projectId,
            sdkVersion: sdkVersion,
            timestamp: getNow(),
            webviewId: 0,
            coslessMode: config.coslessMode ?? false,
            appVersion: config.appVersion,
            ...(config.staticMeta ?? {
                openId: '',
                enterScene: 0,
                languageVersion: '',
                clientVersion: 0,
                addState: -1,
                envVersion: -1,
                appversion: '',
                devicemodel: '',
                devicebrand: '',
                osName: '',
                osVersion: '',
            }),
        },
    };
    await fetch('https://servicewechat.com/ob/wxob', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'x-wx-ob-env': 'webview',
            'x-wx-ob-sdkversion': sdkVersion || '',
            'x-wx-ob-pack-version': PACK_VERSION.Raw,
            'x-wx-ob-project-key': projectId,
        },
        body: JSON.stringify(d),
    });
}
function preprocessCommonAssets(str) {
    return str.replace(/\.wx-trigger-chrome-media-query-update\s*\{\s*height:\s*[\d\.]+px;\s*\}/g, '');
}
function onPxReport(timestamp) {
    {
        wx?.pxReport?.({
            timestamp,
            from: 'webview',
        });
    }
}
function getExtractedSeq() {
    const key = `wxobsExtractedSeq:${config.uuid}`;
    const stored = localStorage.getItem(key);
    if (stored) {
        const { extractedSeq } = JSON.parse(stored);
        return extractedSeq;
    }
    return 0;
}
function setExtractedSeq(seq) {
    const key = `wxobsExtractedSeq:${config.uuid}`;
    const stored = localStorage.getItem(key);
    if (stored) {
        const { storedTimestamp } = JSON.parse(stored);
        localStorage.setItem(key, JSON.stringify({ extractedSeq: seq, storedTimestamp }));
    }
    else {
        localStorage.setItem(key, JSON.stringify({ extractedSeq: seq, storedTimestamp: getNow() }));
    }
}
function pruneExpiredExtractedSeq() {
    const keys = Object.keys(localStorage);
    const now = getNow();
    for (const key of keys) {
        if (key.startsWith('wxobsExtractedSeq:')) {
            const stored = localStorage.getItem(key);
            if (stored) {
                const { storedTimestamp } = JSON.parse(stored);
                if (now - storedTimestamp > 7 * 24 * 3600 * 1000) {
                    localStorage.removeItem(key);
                }
            }
        }
    }
}
setTimeout(pruneExpiredExtractedSeq, 100_000);

function optimizeStorageForDOMNodesSlice(nodes, extraEvents) {
    const encodedNodes = [];
    const nodeId2Ind = {};
    const encodedInd2Node = {};
    const memoEvent = {
        type: EventType.Memo,
        memos: [],
    };
    let currentInd = -1;
    for (const node of nodes) {
        const encoded = toProtocolNodeInfo(node);
        if (!encoded)
            continue;
        currentInd++;
        nodeId2Ind[node.id] = currentInd;
        encodedInd2Node[currentInd] = node;
        encodedNodes.push(encoded);
        if (encoded.tag) {
            const { id, event } = enumifyReturnItem(encoded.tag, MemoDomain.Tag);
            encoded.tag = undefined;
            encoded.tag_ = id;
            if (event)
                memoEvent.memos.push(event);
        }
        if (!config.isWeb && encoded.value && encoded.value.length > 10) {
            const { id, event } = enumifyReturnItem(preprocessCommonAssets(encoded.value), MemoDomain.NodeValue);
            encoded.value = undefined;
            encoded.value_ = id;
            if (event)
                memoEvent.memos.push(event);
        }
        if (currentInd > 0 && encoded.type === encodedInd2Node[currentInd - 1].type) {
            encoded.type = undefined;
        }
        if (currentInd > 0) {
            if (encoded.id === encodedInd2Node[currentInd - 1].id + 1) {
                encoded.id = undefined;
            }
            else {
                const diff = encoded.id - encodedInd2Node[currentInd - 1].id;
                if (diff > 0) {
                    encoded.id = undefined;
                    encoded.id_ = diff;
                }
            }
            if (!encoded.parentId) {
                encoded.noParent_ = true;
            }
            else if (encoded.parentId === encodedInd2Node[currentInd - 1].id) {
                encoded.parentId = undefined;
            }
            else {
                const parentInd = nodeId2Ind[encoded.parentId];
                if (parentInd > -1) {
                    encoded.parentId = undefined;
                    encoded.parentId_ = currentInd - parentInd;
                }
            }
            if (encoded.prevId) {
                const prevInd = nodeId2Ind[encoded.prevId];
                if (prevInd > -1) {
                    encoded.prevId = undefined;
                    encoded.prevId_ = currentInd - prevInd;
                }
            }
        }
        if (encoded.attributes) {
            const classInd = encoded.attributes.findIndex(attr => attr.key === 'class' && !attr.removed);
            if (classInd > -1) {
                const classes = (encoded.attributes[classInd].value || '').split(' ').filter(x => x);
                if (classes.length > 0) {
                    encoded.classes_ = classes.map(c => {
                        const { id, event } = enumifyReturnItem(c, MemoDomain.Classname);
                        if (event)
                            memoEvent.memos.push(event);
                        return id;
                    });
                    encoded.attributes.splice(classInd, 1);
                }
            }
            const styleInd = encoded.attributes.findIndex(attr => attr.key === 'style' && !attr.removed);
            if (styleInd > -1) {
                const cssText = (encoded.attributes[styleInd].value || '').trim();
                if (cssText.length > 0) {
                    const { optimizable, tokens } = tokenizeCssText(cssText, memoEvent);
                    if (optimizable) {
                        encoded.styles_ = tokens;
                        encoded.attributes.splice(styleInd, 1);
                    }
                }
            }
            for (const attr of encoded.attributes) {
                if (attr.key && attr.value && !attr.removed && attr.key !== 'id') {
                    const keyEnumRet = enumifyReturnItem(attr.key, MemoDomain.NodeAttrKey);
                    attr.key_ = keyEnumRet.id;
                    if (keyEnumRet.event)
                        memoEvent.memos.push(keyEnumRet.event);
                    if (!shouldDropAttrValue(attr.key, attr.value)) {
                        const valueEnumRet = enumifyReturnItem(attr.value, MemoDomain.NodeAttrValue);
                        attr.value_ = valueEnumRet.id;
                        if (valueEnumRet.event)
                            memoEvent.memos.push(valueEnumRet.event);
                    }
                    attr.key = undefined;
                    attr.value = undefined;
                }
            }
        }
    }
    if (memoEvent.memos.length > 0) {
        saveBatchMemoEvent(memoEvent);
    }
    return encodedNodes;
}
function tokenizeCssText(cssText, memoEvent) {
    const tokens = [];
    const rulesText = cssText.split(';');
    let optimizable = true;
    for (let ruleText of rulesText) {
        ruleText = ruleText.trim();
        if (ruleText.length === 0)
            continue;
        const colonInd = ruleText.indexOf(':');
        if (colonInd < 0) {
            optimizable = false;
            break;
        }
        const key = ruleText.slice(0, colonInd).trim();
        const value = ruleText.slice(colonInd + 1).trim();
        if (CSSProps[key]) {
            tokens.push(CSSProps[key]);
        }
        else {
            const { id, event } = enumifyReturnItem(key, MemoDomain.CSSProperty);
            if (event)
                memoEvent.memos.push(event);
            tokens.push(id);
        }
        if (value) {
            const { id, event } = enumifyReturnItem(value, MemoDomain.CSSPropertyValue);
            if (event)
                memoEvent.memos.push(event);
            tokens.push(id);
        }
        else {
            tokens.push(0);
        }
    }
    return {
        optimizable,
        tokens,
    };
}

function optimizeStorageForExparserNodesSlice(nodes, extraEvents) {
    const encodedNodes = [];
    const nodeId2Ind = {};
    const encodedInd2Node = {};
    const memoEvent = {
        type: EventType.Memo,
        memos: [],
    };
    let currentInd = -1;
    for (const node of nodes) {
        const encoded = toProtocolNodeInfo$1(node);
        if (!encoded)
            continue;
        currentInd++;
        nodeId2Ind[node.id] = currentInd;
        encodedInd2Node[currentInd] = node;
        encodedNodes.push(encoded);
        if (encoded.is) {
            const { id, event } = enumifyReturnItem(encoded.is, MemoDomain.Is);
            encoded.is = undefined;
            encoded.is_ = id;
            if (event)
                memoEvent.memos.push(event);
        }
        if (encoded.tag) {
            const { id, event } = enumifyReturnItem(encoded.tag, MemoDomain.Tag);
            encoded.tag = undefined;
            encoded.tag_ = id;
            if (event)
                memoEvent.memos.push(event);
        }
        if (encoded.value && encoded.value.length > 2) {
            const { id, event } = enumifyReturnItem(encoded.value, MemoDomain.ExpNodeValue);
            encoded.value = undefined;
            encoded.value_ = id;
            if (event)
                memoEvent.memos.push(event);
        }
        if (encoded.tapHandlerName) {
            const { id, event } = enumifyReturnItem(encoded.tapHandlerName, MemoDomain.TapHandlerName);
            encoded.tapHandlerName = undefined;
            encoded.tapHandlerName_ = id;
            if (event) {
                memoEvent.memos.push(event);
            }
        }
        if (currentInd > 0 && encoded.type === encodedInd2Node[currentInd - 1].type) {
            encoded.type = undefined;
        }
        if (currentInd > 0) {
            if (encoded.id === encodedInd2Node[currentInd - 1].id + 1) {
                encoded.id = undefined;
            }
            else {
                const diff = encoded.id - encodedInd2Node[currentInd - 1].id;
                if (diff > 0) {
                    encoded.id = undefined;
                    encoded.id_ = diff;
                }
            }
            if (!encoded.parentId) {
                encoded.noParent_ = true;
            }
            else if (encoded.parentId === encodedInd2Node[currentInd - 1].id) {
                encoded.parentId = undefined;
            }
            else {
                const parentInd = nodeId2Ind[encoded.parentId];
                if (parentInd > -1) {
                    encoded.parentId = undefined;
                    encoded.parentId_ = currentInd - parentInd;
                }
            }
            if (encoded.prevId) {
                const prevInd = nodeId2Ind[encoded.prevId];
                if (prevInd > -1) {
                    encoded.prevId = undefined;
                    encoded.prevId_ = currentInd - prevInd;
                }
            }
        }
        if (encoded.properties) {
            for (const prop of encoded.properties) {
                if (prop.key) {
                    const { id, event } = enumifyReturnItem(prop.key, MemoDomain.CompProperty);
                    prop.key = undefined;
                    prop.key_ = id;
                    if (event)
                        memoEvent.memos.push(event);
                }
                if (prop.valueStr) {
                    const { id, event } = enumifyReturnItem(prop.valueStr, MemoDomain.CompPropertyValue);
                    prop.valueStr = undefined;
                    prop.valueStr_ = id;
                    if (event)
                        memoEvent.memos.push(event);
                }
            }
        }
        if (encoded.attributes) {
            const classInd = encoded.attributes.findIndex(attr => attr.key === 'class' && !attr.removed);
            if (classInd > -1) {
                const classes = (encoded.attributes[classInd].value || '').split(' ').filter(x => x);
                if (classes.length > 0) {
                    encoded.classes_ = classes.map(c => {
                        const { id, event } = enumifyReturnItem(c, MemoDomain.Classname);
                        if (event)
                            memoEvent.memos.push(event);
                        return id;
                    });
                    encoded.attributes.splice(classInd, 1);
                }
            }
            const styleInd = encoded.attributes.findIndex(attr => attr.key === 'style' && !attr.removed);
            if (styleInd > -1) {
                const cssText = (encoded.attributes[styleInd].value || '').trim();
                if (cssText.length > 0) {
                    const { optimizable, tokens } = tokenizeCssText(cssText, memoEvent);
                    if (optimizable) {
                        encoded.styles_ = tokens;
                        encoded.attributes.splice(styleInd, 1);
                    }
                }
            }
            for (const attr of encoded.attributes) {
                if (attr.key && attr.value && !attr.removed && attr.key !== 'id') {
                    const keyEnumRet = enumifyReturnItem(attr.key, MemoDomain.NodeAttrKey);
                    attr.key_ = keyEnumRet.id;
                    if (keyEnumRet.event)
                        memoEvent.memos.push(keyEnumRet.event);
                    if (!shouldDropAttrValue(attr.key, attr.value)) {
                        const valueEnumRet = enumifyReturnItem(attr.value, MemoDomain.NodeAttrValue);
                        attr.value_ = valueEnumRet.id;
                        if (valueEnumRet.event)
                            memoEvent.memos.push(valueEnumRet.event);
                    }
                    attr.key = undefined;
                    attr.value = undefined;
                }
            }
        }
    }
    if (memoEvent.memos.length > 0) {
        saveBatchMemoEvent(memoEvent);
    }
    return encodedNodes;
}

const IntervalThreshold = 50;
let lastTime = 0;
function onUiReaction(events) {
    const reactionEvts = events.reduce((acc, cur) => {
        if (cur.type === EventType.Mutation || cur.type === EventType.InitDOM) {
            const last = acc[acc.length - 1];
            if (last) {
                if (Number(cur.elapsedTime) - Number(last.elapsedTime) >= IntervalThreshold) {
                    acc.push({
                        seq: nextSeq(),
                        type: EventType.UiReaction,
                        elapsedTime: cur.elapsedTime,
                    });
                    lastTime = cur.elapsedTime;
                }
            }
            else if (Number(cur.elapsedTime) - Number(lastTime) >= IntervalThreshold) {
                acc.push({
                    seq: nextSeq(),
                    type: EventType.UiReaction,
                    elapsedTime: cur.elapsedTime,
                });
                lastTime = cur.elapsedTime;
            }
        }
        return acc;
    }, []);
    save(reactionEvts);
}

const MAX_TEXT_TOTAL_LENGTH = 2147483647;
let basicTextLenCnt = new Uint8Array(64);
let lowCardinalityTxtLenCnt = new Uint8Array(basicTextLenCnt.buffer, 0, 32);
let highCardinalityTxtLenCnt = new Uint8Array(basicTextLenCnt.buffer, 32, 32);
let overHeightCnt = 0;
let totalLength = 0;
let imageInfoMetaList = [];
let maxInformationAmountQuantity = 0, informationAmountQuantity = 0;
let pendingReport = false, pendingReportTask = undefined;
function changeInformationAmountQuantity(isAddition) {
    if (isAddition) {
        informationAmountQuantity++;
        if (maxInformationAmountQuantity < informationAmountQuantity) {
            pendingReport = true;
            if (pendingReportTask !== undefined)
                clearTimeout(pendingReportTask);
            pendingReportTask = setTimeout(encodeInfoAmount, 1000);
        }
    }
    else
        informationAmountQuantity--;
}
function updateTextLengthCounters(length, isAddition) {
    let array, index;
    changeInformationAmountQuantity(isAddition);
    if (isAddition)
        totalLength = Math.min(totalLength + length, MAX_TEXT_TOTAL_LENGTH);
    else
        totalLength = Math.max(totalLength - length, 0);
    if (length < 32) {
        array = lowCardinalityTxtLenCnt;
        index = length;
    }
    else if (length < 32 + 31 * config.textLenGranularity) {
        array = highCardinalityTxtLenCnt;
        index = Math.floor((length - 32) / config.textLenGranularity);
    }
    else {
        if (isAddition) {
            overHeightCnt = overHeightCnt + 1;
        }
        else {
            overHeightCnt = Math.max(overHeightCnt - 1, 0);
        }
        return;
    }
    if (isAddition) {
        array[index] = Math.min(array[index] + 1, 255);
    }
    else {
        array[index] = Math.max(array[index] - 1, 0);
    }
}
function processImageInfo({ width, height, src }, isAddition) {
    const area = width * height;
    const isInternal = src.startsWith('/');
    const srcHash = djbHash(src);
    let existingImage = imageInfoMetaList.find(image => image.srcHash === srcHash);
    changeInformationAmountQuantity(isAddition);
    if (isAddition) {
        if (existingImage) {
            existingImage.count += 1;
            if (area > existingImage.area) {
                existingImage.width = width;
                existingImage.height = height;
                existingImage.area = width * height;
            }
        }
        else {
            imageInfoMetaList.push({
                width,
                height,
                srcHash,
                isInternal,
                count: 1,
                area: width * height,
            });
        }
    }
    else {
        if (existingImage) {
            existingImage.count -= 1;
            if (existingImage.count === 0) {
                imageInfoMetaList = imageInfoMetaList.filter(image => image.srcHash !== srcHash);
            }
        }
    }
}
function updateImageInforAmount(info) {
    if (info.is === 'wx-image' && info.width !== undefined && info.height !== undefined) {
        if (info.srcPath)
            processImageInfo({ width: info.width, height: info.height, src: info.srcPath }, true);
        if (info.oldSrcPath)
            processImageInfo({ width: info.width, height: info.height, src: info.oldSrcPath }, false);
    }
}
function WithoutWhiteLength(text) {
    return text.replace(/\s/g, '').length;
}
function initInfomationAmount(initEvent) {
    const slicesList = initEvent.slices;
    for (let i = 0; i < slicesList.length; i++) {
        const slice = slicesList[i];
        for (let j = 0; j < slice.nodes.length; j++) {
            const info = slice.nodes[j];
            if (info.type === ExparserNodeType.TextNode && info.value) {
                updateTextLengthCounters(WithoutWhiteLength(info.value), true);
            }
            else {
                updateImageInforAmount(info);
            }
        }
    }
}
function removeNodesInfoAmountUpdater(root) {
    const queue = [root];
    return schedule({
        fn: async (task) => {
            let ret;
            while (ret !== TaskSignal.Done) {
                const timer = startTiming();
                ret = _removeNodesInfoAmountUpdater(queue);
                const cost = timer.end();
                if (cost > 30) {
                    wxConsole.log('[tel] [exp] _addTree', cost);
                }
                if (ret === TaskSignal.Yield && task.shouldYield()) {
                    await task.yield();
                }
            }
            task.done();
        },
        priority: Priority.High,
        desc: `addTree root ${root.id}`,
    });
}
function _removeNodesInfoAmountUpdater(queue) {
    return traverse(queue, COMPLEX_OPERATIONS_PER_TASK_SLICE, ({ node, type, builtIn }) => {
        const id = getNodeId$1(node);
        const info = getNodeInfo$1(id);
        if (info) {
            if (type === ExparserNodeType.TextNode && info.value) {
                updateTextLengthCounters(WithoutWhiteLength(info.value), false);
            }
            else {
                if (info.is === 'wx-image' && info.width !== undefined && info.height !== undefined && info.srcPath) {
                    processImageInfo({ width: info.width, height: info.height, src: info.srcPath }, false);
                }
            }
            return true;
        }
        else {
            return false;
        }
    });
}
function uint8ArrayToBase64() {
    let binaryString = '';
    for (let i = 0; i < basicTextLenCnt.length; i++) {
        binaryString += String.fromCharCode(basicTextLenCnt[i]);
    }
    return btoa(binaryString);
}
function encodeInfoAmount() {
    schedule({
        id: 'exp.infoAmount',
        fn: _encodeInfoAmount,
    });
}
function _encodeInfoAmount(task) {
    if (!pendingReport) {
        task.done();
        return;
    }
    pendingReport = false;
    pendingReportTask = undefined;
    maxInformationAmountQuantity = informationAmountQuantity;
    const seq = nextSeq();
    const timestamp = getNow();
    const elapsedTime = elapsed();
    imageInfoMetaList.sort((a, b) => b.area - a.area);
    const protocolEvent = {
        type: EventType.InformationAmount,
        seq,
        timestamp,
        elapsedTime,
        arbitraryData: [
            { key: 'lowLengthCount', value: uint8ArrayToBase64() },
            { key: 'OverHeightCount', valueInt: overHeightCnt },
            { key: 'ImageList', value: JSON.stringify(imageInfoMetaList.slice(0, 8)) },
            { key: 'DistinctImageCnt', valueInt: imageInfoMetaList.length },
            { key: 'TotalTextLength', valueInt: totalLength },
        ],
    };
    save([protocolEvent]);
    task.done();
}

let observer$3;
let nodesObserved = new WeakSet();
let processingScan = false;
const eventBuffer$c = {
    scan: [],
    transform: [],
};
function start$c() {
    observer$3 = exparser.Observer.create(e => {
        scan$2(e);
    });
    observeTree$1(__virtualDOM__?.getRootNode?.() ?? __DOMTree__, true);
}
function reset$e() {
    observer$3?.disconnect();
    nodesObserved = new WeakSet();
    processingScan = false;
    eventBuffer$c.scan = [];
    eventBuffer$c.transform = [];
}
function observeTree$1(node, timing = false) {
    const startTs = performance.now();
    traverse([node], Infinity, ({ node, type, builtIn }) => {
        if (nodesObserved.has(node))
            return false;
        nodesObserved.add(node);
        observer$3.observe(node, {
            childList: type !== ExparserNodeType.TextNode,
            properties: type === ExparserNodeType.Component,
            characterData: type === ExparserNodeType.TextNode,
            attachStatus: !hasNativeWeakRef && type !== ExparserNodeType.TextNode,
        });
        return true;
    });
    if (timing) {
        wxConsole.log(`[tel] [perf] observeTree: ${performance.now() - startTs}`);
    }
}
function scan$2(e) {
    if (!hasNativeWeakRef && e.type === 'attachStatus') {
        if (e.status === 'attached') {
            refill(e.target);
        }
        else if (e.status === 'detached') {
            release(e.target);
        }
        return;
    }
    const event = {
        seq: nextSeq(),
        ts: elapsed(),
        raw: e,
    };
    eventBuffer$c.scan.push(event);
    if (!processingScan) {
        processingScan = true;
        const p = new Promise(r => r());
        p.then(() => {
            schedule({
                fn: async (task) => {
                    try {
                        processMutationEvents$2(task);
                        await task.promise;
                    }
                    finally {
                        processingScan = false;
                    }
                },
                priority: Priority.High,
                desc: `exp.process_scanned`,
            });
        });
    }
    checkDocumentDimensionChange();
}
async function processMutationEvents$2(task) {
    if (!eventBuffer$c.scan.length)
        return;
    while (eventBuffer$c.scan.length) {
        const scanned = eventBuffer$c.scan.shift();
        const e = scanned.raw;
        const targetId = getNodeId$1(e.target);
        if (!targetId) {
            wxConsole.log('[tel] [exp] target node not collected yet');
            continue;
        }
        const info = getNodeInfo$1(targetId);
        if (e.type === 'properties' && info.type === ExparserNodeType.Component && !info.builtIn && !INTRINSIC_ATTRIBUTES.has(e.propertyName)) {
            continue;
        }
        const record = {
            type: MutationType.ChildList,
            target: targetId,
        };
        const event = {
            seq: scanned.seq,
            type: EventType.Mutation,
            ts: elapsed(),
            env: UIEnv.Exparser,
            mutations: [record],
        };
        let shouldCollect = true;
        if (e.type === 'childList') {
            shouldCollect = await handleChildListEvent$1(e, record, task);
        }
        else if (e.type === 'properties') {
            record.type = MutationType.Properties;
            shouldCollect = handlePropertiesEvent(e, record);
        }
        else if (e.type === 'characterData') {
            record.type = MutationType.CharacterData;
            shouldCollect = handleCharacterDataEvent$1(e, record);
        }
        if (shouldCollect) {
            eventBuffer$c.transform.push(event);
        }
    }
    task.done();
    if (eventBuffer$c.transform.length) {
        transformToEncode$b();
    }
    encodeInfoAmount();
}
async function handleChildListEvent$1(e, record, task) {
    const addedNodes = e.addedNodes || [];
    const removedNodes = e.removedNodes || [];
    if (addedNodes[0] === removedNodes[0]) {
        const nodeId = getNodeId$1(addedNodes[0]);
        if (!nodeId)
            return false;
        updateNodePos(addedNodes[0]);
        const info = getNodeInfo$1(nodeId);
        record.addedNodes = [
            {
                nodes: [
                    {
                        id: info.id,
                        parentId: info.parentId,
                        prevId: info.prevId,
                    },
                ],
            },
        ];
        record.removedNodes = [info.id];
    }
    else {
        for (const node of addedNodes) {
            if (!record.addedNodes) {
                record.addedNodes = [];
            }
            const addedNodes = record.addedNodes;
            const childTask = addTree$1(node, (info, slice) => {
                if (!addedNodes[slice]) {
                    addedNodes[slice] = {
                        ts: elapsed(),
                        nodes: [],
                    };
                }
                addedNodes[slice].nodes.push({
                    ...info,
                    updateTs: undefined,
                });
                if (info.value)
                    updateTextLengthCounters(WithoutWhiteLength(info.value), true);
            });
            await task.call(childTask.id);
        }
        if (removedNodes.length) {
            const ids = [];
            for (const node of removedNodes) {
                const id = getNodeId$1(node);
                if (id) {
                    ids.push(id);
                }
                const childTask = removeNodesInfoAmountUpdater(node);
                await task.call(childTask.id);
            }
            record.removedNodes = ids;
        }
    }
    return true;
}
function handlePropertiesEvent(e, record) {
    if (IGNORED_COMP_PROPS.has(e.propertyName))
        return false;
    const id = getNodeId$1(e.target);
    const info = getNodeInfo$1(id);
    let value;
    let valueType;
    if (e.propertyName === 'style') {
        value = e.target.$$?.getAttribute('style') || '';
        valueType = ExparserCompPropType.String;
    }
    else if (e.propertyName === 'class') {
        value = e.target.$$?.className || '';
        valueType = ExparserCompPropType.String;
        setFlags(e.target, info);
    }
    else {
        value = e.target[e.propertyName];
        valueType = TYPEOF_TO_EXPARSER_COMP_PROP_TYPE[typeof value];
        if (value === null)
            valueType = ExparserCompPropType.Null;
        else if (valueType === ExparserCompPropType.JSON)
            value = JSON.stringify(value);
    }
    if (info.properties && value === info.properties[e.propertyName]?.value) {
        return false;
    }
    record.propertyName = e.propertyName;
    record.propertyValue = value;
    record.propertyValueType = valueType;
    if (!info.properties) {
        info.properties = {
            [e.propertyName]: {
                value,
                type: valueType,
            },
        };
    }
    else {
        info.properties = {
            ...info.properties,
            [e.propertyName]: {
                value,
                type: valueType,
            },
        };
    }
    if (info.is === 'wx-image' && record.propertyName === 'src') {
        const node = info.ref?.deref();
        if (node && node.classList.contains(config.collectFileClass)) {
            const hash = djbHash(node.src);
            record.characterDataHash = hash;
            getBase64WxImage(node).then(base64 => {
                uploadCommonAsset(base64, hash, 'text/plain');
            });
        }
    }
    return true;
}
function handleCharacterDataEvent$1(e, record) {
    const id = getNodeId$1(e.target);
    const info = getNodeInfo$1(id);
    const newValue = e.target.textContent;
    if (info.value !== newValue) {
        record.characterData = e.target.textContent;
        info.oldValue = info.value;
        info.value = record.characterData;
        if (info.value)
            updateTextLengthCounters(WithoutWhiteLength(info.value), true);
        if (info.oldValue)
            updateTextLengthCounters(WithoutWhiteLength(info.oldValue), false);
        return true;
    }
    else {
        return false;
    }
}
function transformToEncode$b() {
    schedule({
        id: 'exp.mut.transform',
        fn: _transformToEncode$b,
    });
}
function _transformToEncode$b(task) {
    const extraEvents = [];
    const memoEvent = {
        type: EventType.Memo,
        memos: [],
    };
    const optimizeStorage = config.enabledFeatures.optimizeStorage;
    const encodable = eventBuffer$c.transform.map(event => {
        const e = {
            seq: event.seq,
            type: event.type,
            elapsedTime: event.ts,
            uiEnv: event.env,
            mutationRecords: event.mutations
                .filter(mutation => shouldExclude(mutation.target) !== ExcludeLevel.All)
                .map((mutation) => {
                mutation = excludeMutation(mutation);
                mutation = maskMutation(mutation);
                let addedNodes;
                if (mutation.addedNodes?.length) {
                    let nodesCount = 0;
                    const sliceInfos = mutation.addedNodes.map(slice => {
                        nodesCount += slice.nodes.length;
                        return {
                            ts: slice.ts,
                            len: slice.nodes.length,
                        };
                    });
                    const flatNodes = mutation.addedNodes.reduce((acc, slice) => acc.concat(slice.nodes), []);
                    const optNodes = optimizeStorage
                        ? optimizeStorageForExparserNodesSlice(flatNodes)
                        : flatNodes.map(toProtocolNodeInfo$1).filter((x) => Boolean(x));
                    if (optNodes.length < nodesCount) {
                        sliceInfos[0].len -= nodesCount - optNodes.length;
                    }
                    const mergedSlice = {
                        ts: mutation.addedNodes[0].ts,
                        nodes: optNodes,
                        sliceInfos,
                    };
                    addedNodes = [mergedSlice];
                }
                const record = {
                    ...mutation,
                    addedNodes,
                };
                if (mutation.propertyName) {
                    if (optimizeStorage) {
                        const { id, event } = enumifyReturnItem(mutation.propertyName, MemoDomain.CompProperty);
                        if (event)
                            memoEvent.memos.push(event);
                        record.propertyName_ = id;
                        record.propertyName = undefined;
                        if (mutation.propertyName === 'class') {
                            const classes = (mutation.propertyValue || '').split(' ').filter(x => x);
                            if (classes.length > 0) {
                                record.propertyValueTokens_ = classes.map(c => {
                                    const { id, event } = enumifyReturnItem(c, MemoDomain.Classname);
                                    if (event)
                                        memoEvent.memos.push(event);
                                    return id;
                                });
                            }
                            else {
                                record.propertyValueStr = mutation.propertyValue;
                            }
                        }
                        else if (mutation.propertyName === 'style') {
                            const { optimizable, tokens } = tokenizeCssText(mutation.propertyValue || '', memoEvent);
                            if (optimizable) {
                                record.propertyValueTokens_ = tokens;
                            }
                            else {
                                record.propertyValueStr = mutation.propertyValue;
                            }
                        }
                        else if (mutation.propertyValueType === ExparserCompPropType.String || mutation.propertyValueType === ExparserCompPropType.JSON) {
                            const { id, event } = enumifyReturnItem(mutation.propertyValue, MemoDomain.CompPropertyValue);
                            if (event)
                                memoEvent.memos.push(event);
                            record.propertyValueTokens_ = [id];
                        }
                        else if (mutation.propertyValueType === ExparserCompPropType.Number) {
                            record.propertyValueNum = mutation.propertyValue;
                        }
                        else if (mutation.propertyValueType === ExparserCompPropType.Boolean) {
                            record.propertyValueBool = mutation.propertyValue;
                        }
                    }
                    else {
                        if (mutation.propertyValueType === ExparserCompPropType.String || mutation.propertyValueType === ExparserCompPropType.JSON) {
                            record.propertyValueStr = mutation.propertyValue;
                        }
                        else if (mutation.propertyValueType === ExparserCompPropType.Number) {
                            record.propertyValueNum = mutation.propertyValue;
                        }
                        else if (mutation.propertyValueType === ExparserCompPropType.Boolean) {
                            record.propertyValueBool = mutation.propertyValue;
                        }
                    }
                }
                return record;
            }),
        };
        return e;
    });
    if (memoEvent.memos.length) {
        saveBatchMemoEvent(memoEvent);
    }
    onUiReaction(encodable);
    encodable.unshift(...extraEvents);
    save(encodable);
    eventBuffer$c.transform = [];
    task.done();
}
window.__tel__exp_mut = {
    get nodesObserved() {
        return nodesObserved;
    },
};

const wxInputNodes = new Map();
function observeWxInput(id, node) {
    if (wxInputNodes.has(id))
        return;
    wxInputNodes.set(id, null);
    node.addListener('change', onWxInput);
    node.addListener('focus', onWxInput);
    node.addListener('blur', onWxInput);
}
const wxInputTypes = {
    blur: IWxInputType.Blur,
    change: IWxInputType.Change,
    focus: IWxInputType.Focus,
};
const debounceRemoveCache = debounce(removeCache, 1000);
function onWxInput(expEvent) {
    const target = expEvent.target.$$;
    if (!target)
        return;
    const id = getNodeId$1(expEvent.target);
    if (!id)
        return;
    const { n, selector, ancestorPath } = wxInputNodes.get(id) ?? getElementsSelector(target);
    if (!wxInputNodes.get(id)) {
        wxInputNodes.set(id, { n, selector, ancestorPath });
    }
    debounceRemoveCache();
    const seq = nextSeq();
    const timestamp = getNow();
    const elapsedTime = elapsed();
    const type = expEvent.type;
    schedule({
        fn: task => {
            const protocolEvent = {
                type: EventType.WxInput,
                seq,
                timestamp,
                elapsedTime,
                selector,
                selectorN: n,
                nodeId: id,
                wxInput: {
                    ancestorPath: type === 'change' ? [] : ancestorPath,
                    placeholder: expEvent.target.placeholder ?? '',
                    type: wxInputTypes[type],
                    valueLen: expEvent.detail?.value?.length ?? 0,
                },
            };
            save([protocolEvent]);
            task.done();
        },
    });
}
function removeCache() {
    for (const [id, _] of Array.from(wxInputNodes)) {
        wxInputNodes.has(id) && wxInputNodes.set(id, null);
    }
}

const nodeIds$1 = new Set();
let eventBuffer$b = [];
function observeWxMovableView(id, node) {
    if (nodeIds$1.has(id))
        return;
    nodeIds$1.add(id);
    node.addListener('change', onMovableViewEvent);
    node.addListener('scale', onMovableViewEvent);
}
function onMovableViewEvent(event) {
    const target = event.target;
    if (!target)
        return;
    const id = getNodeId$1(event.target);
    if (!id)
        return;
    const seq = nextSeq();
    const elapsedTime = elapsed();
    eventBuffer$b.push({
        seq,
        elapsed: elapsedTime,
        id,
        type: event.type,
        x: event.detail.x,
        y: event.detail.y,
        scale: event.type === 'scale' ? event.detail.scale : 0,
    });
    debounceTransform$4();
}
const debounceTransform$4 = debounce(transformToEncode$a, 500);
function transformToEncode$a() {
    schedule({
        id: 'wx-movable-view',
        fn: _transformToEncode$a,
    });
}
function _transformToEncode$a(task) {
    if (!eventBuffer$b.length)
        return;
    const protocolEvents = [];
    for (const e of eventBuffer$b) {
        const mutationRecords = [];
        mutationRecords.push({
            target: e.id,
            type: MutationType.Properties,
            propertyName: 'x',
            propertyValueType: ExparserCompPropType.Number,
            propertyValueNum: e.x,
        });
        mutationRecords.push({
            target: e.id,
            type: MutationType.Properties,
            propertyName: 'y',
            propertyValueType: ExparserCompPropType.Number,
            propertyValueNum: e.y,
        });
        if (e.type === 'scale') {
            mutationRecords.push({
                target: e.id,
                type: MutationType.Properties,
                propertyName: 'scaleValue',
                propertyValueType: ExparserCompPropType.Number,
                propertyValueNum: e.scale,
            });
        }
        protocolEvents.push({
            type: EventType.Mutation,
            uiEnv: UIEnv.Exparser,
            seq: e.seq,
            elapsedTime: e.elapsed,
            mutationRecords,
        });
    }
    save(protocolEvents);
    task.done();
    eventBuffer$b = [];
}

const DEBOUNCE_INTERVAL$3 = 300;
const DEBOUNCE_MAX_WAIT$2 = 1000;
const MERGE_INTERVAL_THRESHOLD = 80;
let infos$1 = new Map();
const info = {
    documentHeight: 0,
    maxScrollY: 0,
    windowHeight: 0,
    refreshed: false,
    scrollIntervals: [],
};
function start$b() {
    infos$1 = new Map();
    onScroll$1();
    window.addEventListener('scroll', onScroll$1, COMMON_EVENTE_LISTENER_OPTIONS);
}
function reset$d() {
    window.removeEventListener('scroll', onScroll$1, true);
    infos$1 = new Map();
}
function onScroll$1(event) {
    const currentPath = document.body.getAttribute('is');
    if (!currentPath)
        return;
    const target = (event ? getEventTarget(event) : document.documentElement);
    if (target.__wxElement?.ownerShadowRoot?.__wxHost?.is === 'wx-scroll-view') {
        const exist = infos$1.get(target);
        const newScrollY = Math.round(target.scrollTop);
        if (exist) {
            if (exist.maxScrollY < newScrollY) {
                exist.maxScrollY = newScrollY;
                exist.refreshed = true;
                if (target.scrollHeight >= window.innerHeight && target.scrollWidth >= window.innerWidth) {
                    info.documentHeight = target.scrollHeight;
                    info.maxScrollY = newScrollY;
                    info.windowHeight = target.clientHeight;
                }
            }
            updateScrollIntervals(exist, newScrollY, newScrollY + target.clientHeight);
            debouncedEncode$1();
        }
        else {
            infos$1.set(target, {
                documentHeight: target.scrollHeight,
                maxScrollY: newScrollY,
                refreshed: true,
                windowHeight: target.clientHeight,
                scrollIntervals: [[newScrollY < MERGE_INTERVAL_THRESHOLD ? 0 : newScrollY, newScrollY + target.clientHeight]],
            });
            if (target.scrollHeight >= window.innerHeight && target.scrollWidth >= window.innerWidth) {
                info.documentHeight = target.scrollHeight;
                info.maxScrollY = newScrollY;
                info.windowHeight = target.clientHeight;
            }
            debouncedEncode$1();
        }
    }
    else if (target === document.documentElement) {
        const exist = infos$1.get(target);
        const newScrollY = Math.round(window.scrollY);
        if (exist) {
            if (exist.maxScrollY < newScrollY) {
                exist.maxScrollY = newScrollY;
                exist.refreshed = true;
                if (target.scrollHeight >= window.innerHeight && target.scrollWidth >= window.innerWidth) {
                    info.documentHeight = target.scrollHeight;
                    info.maxScrollY = newScrollY;
                    info.windowHeight = target.clientHeight;
                }
            }
            updateScrollIntervals(exist, newScrollY, newScrollY + target.clientHeight);
            debouncedEncode$1();
        }
        else {
            infos$1.set(target, {
                documentHeight: target.scrollHeight,
                maxScrollY: newScrollY,
                refreshed: true,
                windowHeight: target.clientHeight,
                scrollIntervals: [[newScrollY < MERGE_INTERVAL_THRESHOLD ? 0 : newScrollY, newScrollY + target.clientHeight]],
            });
            if (target.scrollHeight >= window.innerHeight && target.scrollWidth >= window.innerWidth) {
                info.documentHeight = target.scrollHeight;
                info.maxScrollY = newScrollY;
                info.windowHeight = target.clientHeight;
            }
            debouncedEncode$1();
        }
    }
}
function updateScrollIntervals(info, top, bottom) {
    let intervalUpdated = false;
    for (const interval of info.scrollIntervals) {
        if (top >= interval[0] && bottom <= interval[1]) {
            return;
        }
        if (top - interval[0] <= MERGE_INTERVAL_THRESHOLD && top - interval[0] > 0) {
            interval[0] = top;
            intervalUpdated = true;
        }
        if (interval[1] - bottom <= MERGE_INTERVAL_THRESHOLD && interval[1] - bottom > 0) {
            interval[1] = bottom;
            intervalUpdated = true;
        }
    }
    if (!intervalUpdated) {
        info.scrollIntervals.push([top, bottom]);
    }
    else {
        info.scrollIntervals.sort((a, b) => a[0] - b[0]);
        const mergedIntervals = [info.scrollIntervals[0]];
        for (let i = 1; i < info.scrollIntervals.length; i++) {
            const interval = info.scrollIntervals[i];
            const lastInterval = mergedIntervals[mergedIntervals.length - 1];
            if (interval[0] <= lastInterval[1]) {
                lastInterval[1] = Math.max(lastInterval[1], interval[1]);
            }
            else {
                mergedIntervals.push(interval);
            }
        }
        info.scrollIntervals = mergedIntervals;
    }
    info.refreshed = true;
}
const debouncedEncode$1 = debounce(encodeAndSave$4, DEBOUNCE_INTERVAL$3, { maxWait: DEBOUNCE_MAX_WAIT$2 });
function encodeAndSave$4() {
    schedule({
        id: 'depth-change',
        fn: _encodeAndSave$4,
    });
}
function _encodeAndSave$4(task) {
    const protocolEvents = [];
    for (const [target, info] of infos$1) {
        if (info.refreshed === false)
            continue;
        const { n, selector, ancestorPath } = getElementsSelector(target);
        protocolEvents.push({
            seq: nextSeq(),
            elapsedTime: elapsed(),
            type: EventType.Depth,
            depth: {
                path: document.body.getAttribute('is'),
                maxScrollY: info.maxScrollY,
                documentHeight: info.documentHeight,
                windowHeight: info.windowHeight,
                selector,
                selectorN: n,
                tops: info.scrollIntervals.map(interval => interval[0]),
                bottoms: info.scrollIntervals.map(interval => interval[1]),
            },
        });
        info.refreshed = false;
    }
    save(protocolEvents);
    task.done();
}
window.__tel__depth = {
    get infos() {
        return infos$1;
    },
};

function scheduleEncode(events) {
    return schedule({
        id: 'encode',
        fn: _encodeForCos.bind(null, events),
    });
}
let cachedWebviewReportMeta = null;
async function _encodeForCos(allEvents, task) {
    const { uuid } = config;
    const useCompressV2 = config.enabledFeatures.compressV2;
    const webviewReportMeta = (await getStorage(uuid).getWebviewReportMeta()) || {
        uuid,
        type: 'webview',
        seqs: {},
    };
    cachedWebviewReportMeta = webviewReportMeta;
    let commonAssetsInited = false;
    let commonAssetIds = new Set();
    const initCommonAssets = async () => {
        try {
            commonAssetsInited = true;
            const commonAssets = await getStorage(config.uuid).getCommonAssetsByStatus(CommonAssetStatus.Uploaded);
            commonAssetIds = new Set(commonAssets.map(a => `#${a.name}`));
        }
        catch (e) {
        }
    };
    const events = allEvents.filter(e => e.uuid === uuid);
    let maxEventId = 0;
    for (const e of allEvents) {
        if (e.id > maxEventId) {
            maxEventId = e.id;
        }
    }
    for (const e of events) {
        if (e.events.some(e => e.type === EventType.Memo)) {
            if (!commonAssetsInited)
                await initCommonAssets();
            e.events = e.events
                .map(event => {
                if (event.type === EventType.Memo) {
                    return {
                        ...event,
                        memos: event.memos?.filter(memo => !commonAssetIds.has(memo.key)),
                    };
                }
                return event;
            })
                .filter(event => event.type !== EventType.Memo || event.memos?.length);
        }
    }
    if (useCompressV2) {
        _encodeForCosWithChannels({
            events,
            webviewReportMeta,
            maxEventId,
            task,
        });
        return;
    }
    const webviewSessionEvents = {};
    for (const e of events) {
        const key = `${e.webviewId}_${e.weSessionId}`;
        if (!webviewSessionEvents[key]) {
            webviewSessionEvents[key] = {
                ...e,
                events: [...e.events],
            };
        }
        else {
            webviewSessionEvents[key].events.push(...e.events);
        }
    }
    const eventCounts = {};
    const batches = [];
    for (const key in webviewSessionEvents) {
        if (task.shouldYield()) {
            await task.yield();
        }
        const [webviewId, weSessionId] = key.split('_');
        const numericWebviewId = parseInt(webviewId);
        if (!webviewReportMeta.seqs[numericWebviewId]) {
            webviewReportMeta.seqs[numericWebviewId] = 1;
        }
        else {
            webviewReportMeta.seqs[numericWebviewId]++;
        }
        eventCounts[numericWebviewId] = (eventCounts[numericWebviewId] || 0) + webviewSessionEvents[key].events.length;
        const sessionLifeTimeMeta = webviewSessionEvents[key].sessionLifeTimeMeta;
        const encoded = BatchPayload.encode({
            uuid,
            seq: webviewReportMeta.seqs[numericWebviewId],
            events: webviewSessionEvents[key].events,
            timestamp: getNow(),
            type: ReportEnvType.Webview,
            webviewId: numericWebviewId,
            weSessionId,
            path: webviewSessionEvents[key].path,
            sdkVersion: config.sdkVersion ?? '',
            wesessionScene: sessionLifeTimeMeta.wesessionScene,
            wesessionSceneNote: sessionLifeTimeMeta.wesessionSceneNote,
            isWesessionEntrance: sessionLifeTimeMeta.isWesessionEntrance,
            openSource: sessionLifeTimeMeta.openSource,
        }).finish();
        batches.push(encoded);
    }
    task.done({
        data: BatchEncodedPayloads.encode({
            batches,
        }).finish(),
        maxEventId,
        webviewReportMeta,
        eventCounts,
    });
}
function _encodeForCosWithChannels(options) {
    const { events, maxEventId, task } = options;
    const { uuid } = config;
    const webviewReportMeta = options.webviewReportMeta || {
        uuid,
        type: 'webview',
        seqs: {},
    };
    const webviewIds = [];
    const paths = [];
    const seqs = [];
    const webviewReportSeqConfirmed = {};
    const getWebviewReportSeq = (webviewId) => {
        if (!webviewReportSeqConfirmed[webviewId]) {
            if (!webviewReportMeta.seqs[webviewId]) {
                webviewReportMeta.seqs[webviewId] = 1;
            }
            else {
                webviewReportMeta.seqs[webviewId]++;
            }
            webviewReportSeqConfirmed[webviewId] = webviewReportMeta.seqs[webviewId];
        }
        return webviewReportSeqConfirmed[webviewId];
    };
    const initBatchPayloadObject = () => {
        return {
            uuid,
            timestamp: getNow(),
            type: ReportEnvType.Webview,
            sdkVersion: config.sdkVersion ?? '',
            events: [],
            seqs,
            webviewIds,
            paths,
            eventFroms: [],
            _webviewIds: [],
        };
    };
    const webviewEvents = {};
    const eventWidMap = new WeakMap();
    for (const stored of events) {
        const webviewId = stored.webviewId;
        if (!webviewIds.includes(webviewId)) {
            webviewIds.push(webviewId);
            const seq = getWebviewReportSeq(webviewId);
            seqs.push(seq);
            paths.push(stored.path);
        }
        for (const e of stored.events) {
            let channel = COMPRESS_CHANNELS.DEFAULT;
            if (e.type === EventType.InitDOM) {
                channel = COMPRESS_CHANNELS.INIT_NODES;
            }
            else if (e.type === EventType.Mutation && e.mutationRecords?.[0]?.addedNodes?.length) {
                channel = COMPRESS_CHANNELS.ADDED_NODES;
            }
            else if (e.type === EventType.Memo) {
                channel = COMPRESS_CHANNELS.MEMO;
            }
            if (!webviewEvents[channel]) {
                webviewEvents[channel] = initBatchPayloadObject();
            }
            const payload = webviewEvents[channel];
            payload.events.push(e);
            eventWidMap.set(e, webviewId);
        }
    }
    for (const channel in webviewEvents) {
        const payload = webviewEvents[channel];
        const events = payload.events;
        events.sort((a, b) => a.type - b.type);
        let lastWebviewId;
        for (let i = 0; i < events.length; i++) {
            const event = events[i];
            const wid = eventWidMap.get(event);
            if (i == 0 || wid !== lastWebviewId) {
                lastWebviewId = wid;
                payload.eventFroms.push(i, lastWebviewId);
            }
        }
    }
    const eventCounts = {};
    const batches = {};
    for (const channel in webviewEvents) {
        eventCounts[channel] = webviewEvents[channel].events.length;
        const encoded = BatchPayload.encode(webviewEvents[channel]).finish();
        batches[channel] = encoded;
    }
    const result = {
        data: batches,
        maxEventId,
        webviewReportMeta,
        eventCounts,
    };
    task?.done(result);
    return batches;
}
function encodeForCosSync(allEvents) {
    const { uuid } = config;
    const events = allEvents.filter(e => e.uuid === uuid);
    let maxEventId = 0;
    for (const e of allEvents) {
        if (e.id > maxEventId) {
            maxEventId = e.id;
        }
    }
    if (config.enabledFeatures.compressV2) {
        return _encodeForCosWithChannels({
            events,
            webviewReportMeta: cachedWebviewReportMeta,
            maxEventId,
        });
    }
    const webviewSessionEvents = {};
    for (const e of events) {
        const key = `${e.webviewId}_${e.weSessionId}`;
        if (!webviewSessionEvents[key]) {
            webviewSessionEvents[key] = {
                ...e,
                events: [...e.events],
            };
        }
        else {
            webviewSessionEvents[key].events.push(...e.events);
        }
    }
    const eventCounts = {};
    const batches = [];
    for (const key in webviewSessionEvents) {
        const [webviewId, weSessionId] = key.split('_');
        const numericWebviewId = parseInt(webviewId);
        eventCounts[numericWebviewId] = (eventCounts[numericWebviewId] || 0) + webviewSessionEvents[key].events.length;
        const sessionLifeTimeMeta = webviewSessionEvents[key].sessionLifeTimeMeta;
        const encoded = BatchPayload.encode({
            uuid,
            seq: cachedWebviewReportMeta?.seqs?.[numericWebviewId] ?? 0 + 1,
            events: webviewSessionEvents[key].events,
            timestamp: getNow(),
            type: ReportEnvType.Webview,
            webviewId: numericWebviewId,
            weSessionId,
            path: webviewSessionEvents[key].path,
            sdkVersion: config.sdkVersion ?? '',
            wesessionScene: sessionLifeTimeMeta.wesessionScene,
            wesessionSceneNote: sessionLifeTimeMeta.wesessionSceneNote,
            isWesessionEntrance: sessionLifeTimeMeta.isWesessionEntrance,
            openSource: sessionLifeTimeMeta.openSource,
        }).finish();
        batches.push(encoded);
    }
    return BatchEncodedPayloads.encode({
        batches,
    }).finish();
}

let timeoutId;
const noop = () => { };
let intervalCoefficient = 1;
function init$3() {
    wxConsole.log('[tel] reporter init');
    if (config.reporter === window.__webviewId__) {
        wxConsole.log('[tel] is reporter');
    }
    subscribeUnifiedReport();
    intervalCoefficient = 1;
    if (timeoutId === undefined) {
        timeoutId = setTimeout(reportStorage, config.reportInterval);
    }
    config.onAppEnterBackground(() => {
        wxConsole.log('[tel] onAppEnterBackground');
        reportStorage({
            skipNext: true,
            backstop: true,
        });
        report();
    });
}
async function reset$c() {
    await reportStorage({
        skipNext: true,
    });
}
async function reportStorage(opt = {}) {
    try {
        if (shouldStop()) {
            return;
        }
        const { uuid } = config;
        const storage = getStorage(uuid);
        if (opt.sendBeacon) {
            const allEvents = popMemoryEvents();
            if (!allEvents.length) {
                return;
            }
            const encoded = encodeForCosSync(allEvents);
            const compressResult = compressSync(encoded);
            const compressSpec = compressResult.spec;
            let data = compressResult.compressed;
            let encrypted = false;
            if (config.encrypt) {
                data = encryptSync(data);
                encrypted = true;
            }
            try {
                uploadToCosWithSendBeacon(data, { encrypted, compressSpec });
                await uploadToWxBackend(allEvents);
                wxConsole.log('[tel] rs cos suc');
            }
            catch (e) {
                handleFail(e, false);
            }
        }
        else {
            const allEvents = await storage.getAllEvents();
            const appserviceDataList = await storage.getCurrentSessionPackedAppserviceData();
            if (!allEvents.length && !appserviceDataList.length) {
                return;
            }
            let data = new Uint8Array();
            let encodeResult;
            let compressSpec;
            let updateCompressState = noop;
            let encrypted = false;
            if (allEvents.length) {
                encodeResult = (await scheduleEncode(allEvents).promise).result;
                if (!encodeResult) {
                    return;
                }
                const compressTask = compress(encodeResult.data);
                const compressTaskEndInfo = await compressTask.promise;
                data = compressTaskEndInfo.result.compressed;
                compressSpec = compressTaskEndInfo.result.spec;
                updateCompressState = compressTaskEndInfo.result.onUploadSuccess || noop;
                if (config.encrypt) {
                    const encryptTask = encrypt(data);
                    const encryptTaskEndInfo = await encryptTask.promise;
                    data = encryptTaskEndInfo.result;
                    encrypted = true;
                }
            }
            try {
                await uploadToCos(data, appserviceDataList, { encrypted, compressSpec });
                tellAppserviceUploadPackedToCosDone(appserviceDataList.map(d => d.ack));
                await clearAndUpdateCompressState(encodeResult, appserviceDataList.map(d => d.id), updateCompressState);
                await uploadToWxBackend(allEvents);
            }
            catch (e) {
                if (opt.backstop) {
                    try {
                        await uploadToCos(data, appserviceDataList, { encrypted, useWxData: true, compressSpec });
                        tellAppserviceUploadPackedToCosDone(appserviceDataList.map(d => d.ack));
                        await clearAndUpdateCompressState(encodeResult, appserviceDataList.map(d => d.id), updateCompressState);
                        await uploadToWxBackend(allEvents);
                    }
                    catch (e) {
                        handleFail(e, true);
                    }
                }
                else {
                    handleFail(e, false);
                }
            }
        }
    }
    catch (e) {
        handleError({ type: ErrorType.WebviewReport, e });
    }
    finally {
        if (!opt.skipNext) {
            timeoutId = setTimeout(reportStorage, config.reportInterval * intervalCoefficient);
        }
    }
}
const handleFail = (e, useWxData) => {
    handleError({
        type: useWxData ? ErrorType.WebviewReportCosWithWxData : ErrorType.WebviewReportCos,
        e,
        extra: `reporter: ${config.reporter}`,
    });
    intervalCoefficient = Math.min(intervalCoefficient * 1.5, 32);
    count(useWxData ? MetricType.UploadCosFailureWithWxData : MetricType.UploadCosFailure);
};
async function uploadToWxBackend(allEvents) {
    try {
        const start = performance.now();
        await uploadExtracted(allEvents).promise;
        addDataPoint(MetricType.UploadWxCost, performance.now() - start);
        count(MetricType.UploadWxSucess);
        wxConsole.log('[tel] rs wx suc');
    }
    catch (e) {
        count(MetricType.UploadWxFailure);
        handleError({ type: ErrorType.WebviewReportWx, e });
    }
}
function shouldStop() {
    if (config.reporter !== window.__webviewId__) {
        wxConsole.log(`[tel] not reporter (${config.reporter},${window.__webviewId__})`);
        popMemoryEvents();
        return true;
    }
    if (!config.coslessMode) {
        if (!config.cosInfo) {
            wxConsole.log('[tel] no cos info');
            count(MetricType.CosInfoMissing);
            return true;
        }
        if (config.cosInfo.expire_timestamp * 1000 < getNow()) {
            wxConsole.log('[tel] cos info expired');
            count(MetricType.UploadCosExpired);
            return true;
        }
    }
    return false;
}
async function clearAndUpdateCompressState(encodeResult, reportedAppserviceDataIds = [], updateCompressState = noop) {
    try {
        intervalCoefficient = 1;
        const storage = getStorage(config.uuid);
        if (encodeResult) {
            await storage.updateWebviewReportMeta(encodeResult?.webviewReportMeta);
            await storage.clearEventsUntil(encodeResult?.maxEventId);
        }
        await storage.removePackedAppserviceDataByPackedUuids(reportedAppserviceDataIds);
        updateCompressState();
    }
    catch (e) {
        handleError({ type: ErrorType.WebviewClean, e, extra: `maxEventId: ${encodeResult?.maxEventId}` });
    }
}
async function subscribeUnifiedReport() {
    if (window.wx) {
        const subscribe = () => {
            try {
                wx?.subscribe?.('wxobs:unifiedReport', async (payload) => {
                    wxConsole.log('[tel] unifiedReport', payload);
                    const { data: base64Data, metadata, ack } = payload;
                    wxConsole.log('[tel] wxobs:unifiedReport data length', base64Data.length);
                    const data = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));
                    count(MetricType.ReceiveDataInWebview);
                    sum(MetricType.ReceiveDataInWebviewSize, data.length);
                    wxConsole.log('[tel] wxobs:unifiedReport data length', data.length);
                    try {
                        wxConsole.log('[tel] savePackedAppserviceData');
                        await getStorage(config.uuid).savePackedAppserviceData([{ data: data.buffer, metadata, ack }]);
                        wxConsole.log('[tel] savePackedAppserviceData ok');
                        wx?.publish?.('wxobs:unifiedReportAck', { ack, success: true });
                        count(MetricType.UnifiedReportWebviewSuccess);
                    }
                    catch (e) {
                        wxConsole.error('[tel] savePackedAppserviceData fail', e);
                        wx?.publish?.('wxobs:unifiedReportAck', { ack, success: false });
                        count(MetricType.UnifiedReportWebviewFailure);
                    }
                });
                wxConsole.log('[tel] wxobs:unifiedReportReady publish');
                wx?.publish?.('wxobs:unifiedReportReady', {
                    webviewId: window.__webviewId__,
                });
            }
            catch {
                wxConsole.warn('[tel] wxobs:unifiedReport subscribe failed');
            }
        };
        setTimeout(subscribe);
    }
}
const tellAppserviceUploadPackedToCosDone = (acks) => {
    try {
        if (!wx || !wx.publish || acks.length === 0)
            return;
        wx?.publish?.('wxobs:unifiedReportCosDone', { acks });
    }
    catch (e) {
    }
};

const DEBOUNCE_INTERVAL$2 = 100;
const DEBOUNCE_MAX_WAIT$1 = 1000;
let infos = {};
debounce(encodeAndSave$3, DEBOUNCE_INTERVAL$2, { maxWait: DEBOUNCE_MAX_WAIT$1 });
function encodeAndSave$3() {
    schedule({
        id: 'depth-change',
        fn: _encodeAndSave$3,
    });
}
function _encodeAndSave$3(task) {
    const protocolEvents = [];
    for (const path of Object.keys(infos)) {
        const info = infos[path];
        if (!info.refreshed)
            continue;
        protocolEvents.push({
            seq: nextSeq(),
            elapsedTime: elapsed(),
            type: EventType.Depth,
            depth: {
                path,
                maxScrollY: info.maxScrollY,
                documentHeight: info.documentHeight,
                windowHeight: info.windowHeight,
            },
        });
        info.refreshed = false;
    }
    save(protocolEvents);
    task.done();
}

const DEBOUNCE_INTERVAL$1 = 100;
const DEBOUNCE_MAX_WAIT = 1000;
let parsedExposureSelectorList = [];
let observer$2 = null;
let watchingEle = new WeakSet();
let observerEntities = [];
function start$a() {
    if (window.IntersectionObserver) {
        observer$2 = new IntersectionObserver(entities => {
            observerEntities.push(...entities);
            debouncedEncode();
        }, {
            rootMargin: '0px 0px',
            threshold: 0.75,
        });
    }
    parsedExposureSelectorList = [];
    watchingEle = new WeakSet();
    observerEntities = [];
    (config.exposureSelectorList ?? []).forEach(sel => {
        const matchRes = sel.match(/([\s\S]*)__inTxt__([\s\S]*)__ph__([\s\S]*)/);
        if (matchRes) {
            const [, selector = '', innerText = '', placeholder = ''] = matchRes;
            parsedExposureSelectorList.push({ selector, innerText, placeholder });
        }
    });
}
function reset$b() {
    observer$2?.disconnect?.();
    observer$2 = null;
    parsedExposureSelectorList = [];
    watchingEle = new WeakSet();
    observerEntities = [];
}
function mountExposureListener(root) {
    if (!parsedExposureSelectorList.length)
        return;
    return schedule({
        fn: async (task) => {
            if (root && observer$2) {
                parsedExposureSelectorList.forEach(entity => {
                    if (root.querySelectorAll) {
                        const eleList = root.querySelectorAll(entity.selector);
                        eleList.forEach(ele => {
                            if (watchingEle.has(ele))
                                return;
                            if (!entity.innerText || getText(ele) === entity.innerText) {
                                observer$2?.observe?.(ele);
                                watchingEle.add(ele);
                            }
                        });
                    }
                });
            }
            task.done();
        },
        desc: `watching ${root.id}'subtree exposure`,
    });
}
const debouncedEncode = debounce(encodeAndSave$2, DEBOUNCE_INTERVAL$1, { maxWait: DEBOUNCE_MAX_WAIT });
function encodeAndSave$2() {
    schedule({
        id: 'exposure-change',
        fn: _encodeAndSave$2,
    });
}
function _encodeAndSave$2(task) {
    const protocolEvents = [];
    const infos$1 = infos;
    const path = Object.keys(infos$1)?.[0] ?? '';
    const info$1 = infos$1[path] ?? info;
    observerEntities.forEach(entity => {
        const isExposure = entity.intersectionRatio > 0.75;
        if (!isExposure)
            return;
        if (!watchingEle.has(entity.target))
            return;
        const { ancestorPath } = getElementsSelector(entity.target);
        protocolEvents.push({
            seq: nextSeq(),
            elapsedTime: elapsed(),
            type: EventType.FirstExposure,
            exposure: {
                maxScrollY: info$1?.maxScrollY ?? 0,
                documentHeight: info$1?.documentHeight ?? 0,
                windowHeight: info$1?.windowHeight ?? 0,
                ancestorPath,
                innerText: getText(entity.target),
            },
        });
        observer$2?.unobserve?.(entity.target);
        watchingEle.delete(entity.target);
    });
    observerEntities = [];
    save(protocolEvents);
    task.done();
}

const eventArray = ['onVideoPlay', 'onVideoPause', 'onVideoTimeUpdate', 'onVideoSeekCompelete'];
const viewIdToNodeIdMap = new Map();
const viewIdToStatusMap = new Map();
function observeWxVideo(nodeId, node) {
    viewIdToNodeIdMap.set(node.viewId, nodeId);
    schedule({
        fn: task => {
            const protocolEvent = {
                type: EventType.Mutation,
                seq: nextSeq(),
                timestamp: getNow(),
                elapsedTime: elapsed(),
                nodeId,
                uiEnv: UIEnv.Exparser,
                mutationRecords: [
                    {
                        type: MutationType.Video,
                        target: nodeId,
                        position: viewIdToStatusMap.get(node.viewId)?.position || 0,
                        videoEventType: VideoEventType.onVideoTimeUpdate,
                    },
                ],
            };
            if (viewIdToStatusMap.get(node.viewId)?.playing) {
                protocolEvent.mutationRecords?.unshift({
                    type: MutationType.Video,
                    target: nodeId,
                    position: viewIdToStatusMap.get(node.viewId)?.position || 0,
                    videoEventType: VideoEventType.onVideoPlay,
                });
            }
            save([protocolEvent]);
            task.done();
        },
    });
}
function start$9() {
    eventArray.forEach(event => {
        exparser.addListenerToElement(document, event, onEvent);
    });
}
function reset$a() {
    eventArray.forEach(event => {
        exparser.removeListenerFromElement(document, event, onEvent);
    });
}
const onEvent = (event) => {
    let { type, detail } = event;
    type = type;
    const viewId = detail.viewId;
    const status = viewIdToStatusMap.get(viewId);
    if (status === undefined) {
        viewIdToStatusMap.set(viewId, {
            position: detail.position || 0,
            playing: type === 'onVideoPlay',
        });
    }
    else {
        if (type === 'onVideoPlay') {
            status.playing = true;
            status.position = detail.position || 0;
        }
        else if (type === 'onVideoPause') {
            status.playing = false;
            status.position = detail.position || 0;
        }
        else if (type === 'onVideoSeekCompelete') {
            status.position = detail.position || 0;
        }
        else if (type === 'onVideoTimeUpdate') {
            status.position = detail.position || 0;
        }
    }
    const nodeId = viewIdToNodeIdMap.get(viewId);
    if (nodeId === undefined)
        return;
    const protocolEvent = {
        type: EventType.Mutation,
        seq: nextSeq(),
        timestamp: getNow(),
        elapsedTime: elapsed(),
        nodeId,
        uiEnv: UIEnv.Exparser,
        mutationRecords: [
            {
                type: MutationType.Video,
                target: nodeId,
                position: detail.position,
                videoEventType: VideoEventType[type],
            },
        ],
    };
    save([protocolEvent]);
};

const collected = new Set();
let eventBuffer$a = [];
function start$8() {
}
function reset$9() {
    collected.clear();
    eventBuffer$a = [];
}
function onComponent(comp) {
    if (collected.has(comp.is))
        return;
    collected.add(comp.is);
    const options = exparser.Component.getComponentOptions(comp);
    if (!options)
        return;
    const { virtualHost, multipleSlots, dynamicSlots } = options;
    if (virtualHost || multipleSlots || dynamicSlots) {
        eventBuffer$a.push({
            is: comp.is,
            virtualHost: virtualHost || undefined,
            multipleSlots: multipleSlots || undefined,
            dynamicSlots: dynamicSlots || undefined,
        });
        debounceTransform$3();
    }
}
const debounceTransform$3 = debounce(transformToEncode$9, 50, { maxWait: 500 });
function transformToEncode$9() {
    schedule({
        id: 'wx-component',
        fn: _transformToEncode$9,
        priority: Priority.High,
    });
}
function _transformToEncode$9(task) {
    if (eventBuffer$a.length === 0) {
        task.done();
        return;
    }
    const event = {
        type: EventType.DevCodeInfo,
        devCodeInfo: eventBuffer$a.map(e => {
            return {
                compOptions: e,
            };
        }),
    };
    eventBuffer$a = [];
    save([event]);
    task.done();
}

const nodeIds = new Set();
let eventBuffer$9 = [];
function observeWxImage(id, node) {
    if (nodeIds.has(id))
        return;
    nodeIds.add(id);
    node.addListener('load', onWxImageEvent);
    node.addListener('error', onWxImageEvent);
}
function onWxImageEvent(event) {
    const target = event.target;
    if (!target)
        return;
    const id = getNodeId$1(event.target);
    if (!id)
        return;
    if (event.type === 'load') {
        const info = getNodeInfo$1(id);
        const node = info?.ref?.deref();
        if (node) {
            const rect = node.$$?.getBoundingClientRect();
            if (rect) {
                info.height = rect.height;
                info.width = rect.width;
                let srcPath = node.src;
                if (!srcPath.startsWith('/')) {
                    try {
                        const srcUrl = new URL(node.src);
                        srcPath = srcUrl.origin + srcUrl.pathname;
                    }
                    catch (e) { }
                }
                if (info.srcPath !== srcPath) {
                    info.oldSrcPath = info.srcPath;
                    info.srcPath = srcPath;
                    updateImageInforAmount(info);
                }
            }
        }
    }
    const seq = nextSeq();
    const elapsedTime = elapsed();
    eventBuffer$9.push({
        seq,
        elapsed: elapsedTime,
        id,
        type: event.type,
        errMsg: event.type === 'error' ? event.detail.errMsg : undefined,
    });
    debounceTransform$2();
}
const debounceTransform$2 = debounce(transformToEncode$8, 500);
function transformToEncode$8() {
    schedule({
        id: 'wx-image',
        fn: _transformToEncode$8,
    });
}
function _transformToEncode$8(task) {
    if (!eventBuffer$9.length)
        return;
    const protocolEvents = [];
    for (const e of eventBuffer$9) {
        let compEvent;
        if (e.type === 'load') {
            compEvent = {
                nodeId: e.id,
                numType: WxComponentEventNumType.load,
            };
        }
        else if (e.type === 'error') {
            compEvent = {
                nodeId: e.id,
                numType: WxComponentEventNumType.error,
                imgErrorDetail: {
                    errMsg: e.errMsg,
                },
            };
        }
        else {
            wxConsole.warn('unhandled wx image event type: ' + e.type);
            continue;
        }
        protocolEvents.push({
            type: EventType.ComponentEvent,
            uiEnv: UIEnv.Exparser,
            seq: e.seq,
            elapsedTime: e.elapsed,
            componentEvents: [compEvent],
        });
    }
    save(protocolEvents);
    task.done();
    eventBuffer$9 = [];
}

let idCount$1;
let idMap$1;
let nodeInfo$1;
let eventBuffer$8 = [];
function reset$8() {
    idCount$1 = 1;
    idMap$1 = new WeakMap();
    nodeInfo$1 = [];
    eventBuffer$8 = [];
}
reset$8();
async function init$2() {
    const timer = startTiming();
    const initEvent = {
        seq: nextSeq(),
        type: EventType.InitDOM,
        slices: [],
        ts: getNow(),
        elapsed: elapsed(),
        env: UIEnv.Exparser,
    };
    const rootNodes = [...document.documentElement.children].filter(n => n.__wxElement).map(n => n.__wxElement);
    for (const rootNode of rootNodes) {
        observeTree$1(rootNode);
        const task = addTree$1(rootNode, (info, sliceNo) => {
            let slice = initEvent.slices[sliceNo];
            if (!slice) {
                slice = {
                    ts: elapsed(),
                    nodes: [],
                };
                initEvent.slices[sliceNo] = slice;
            }
            slice.nodes.push({
                ...info,
                updateTs: undefined,
            });
        });
        const { totalTime, slices } = await task.promise;
        wxConsole.log('[tel] [exp] init tree', totalTime, timer.end(), slices);
    }
    initInfomationAmount(initEvent);
    eventBuffer$8.push(initEvent);
    transformToEncode$7();
}
function addTree$1(root, onNodeFound) {
    const queue = [root];
    let slice = 0;
    if (root.$$)
        mountExposureListener(root.$$);
    return schedule({
        fn: async (task) => {
            let ret;
            while (ret !== TaskSignal.Done) {
                const timer = startTiming();
                ret = _addTree$1(queue, info => onNodeFound(info, slice));
                const cost = timer.end();
                if (cost > 30) {
                    wxConsole.log('[tel] [exp] _addTree', cost);
                }
                if (ret === TaskSignal.Yield && task.shouldYield()) {
                    await task.yield();
                    slice++;
                }
            }
            task.done();
        },
        priority: Priority.High,
        desc: `addTree root ${root.id}`,
    });
}
function _addTree$1(queue, onNodeFound) {
    return traverse(queue, COMPLEX_OPERATIONS_PER_TASK_SLICE, ({ node, type, builtIn }) => {
        const info = addNode$1(node, {
            type,
            builtIn,
        });
        if (info) {
            onNodeFound(info);
            return true;
        }
        else {
            return false;
        }
    });
}
function addNode$1(node, { type, builtIn } = {}) {
    const existingId = idMap$1.get(node);
    if (existingId) {
        return { ...nodeInfo$1[existingId], ...getNodePos$1(node, getType(node)) };
    }
    observeTree$1(node);
    const id = existingId || idCount$1++;
    let info;
    if (!type) {
        type = getType(node);
        if (type === ExparserNodeType.Component) {
            builtIn = isBuiltInComponent(node);
        }
    }
    const { parentId, prevId } = getNodePos$1(node, type);
    switch (type) {
        case ExparserNodeType.VirtualNode: {
            const vnode = node;
            info = {
                id,
                type,
                updateTs: elapsed(),
                ref: new $WeakRef(node),
                is: vnode.is,
                slot: vnode.is === 'slot' ? vnode.__slotName : undefined,
                parentId,
                prevId,
            };
            break;
        }
        case ExparserNodeType.Component:
        case ExparserNodeType.NativeNode: {
            let tapHandlerName;
            if (node.__wxEventHandleName?.['tap']) {
                tapHandlerName =
                    typeof node.__wxEventHandleName?.['tap'] === 'string' ? node.__wxEventHandleName?.['tap'] : 'AnonymousFunction';
            }
            const n = node;
            info = {
                id,
                type,
                updateTs: elapsed(),
                ref: new $WeakRef(node),
                builtIn: builtIn ? true : undefined,
                is: n.is,
                properties: builtIn ? getProperties(n) : undefined,
                slot: n.__slot,
                tag: n.$$?.tagName,
                attributes: {
                    id: n.id,
                    class: n.class,
                    style: n.$$?.getAttribute('style'),
                },
                parentId,
                prevId,
                tapHandlerName,
            };
            if (type === ExparserNodeType.Component) {
                onComponent(n);
                if (!n.$$) {
                    const options = exparser.Component.getComponentOptions(n);
                    info.compOptions = {
                        virtualHost: options.virtualHost,
                    };
                }
            }
            else if (config.dataAttrs && n.__attributes) {
                for (const key in n.__attributes) {
                    if (key.startsWith('data-')) {
                        info.attributes[key] = n.__attributes[key];
                    }
                }
            }
            if (n.is === 'wx-image' && n.classList.contains(config.collectFileClass) && n.src) {
                const hash = djbHash(n.src);
                info.valueHash = hash;
                getBase64WxImage(n).then(base64 => {
                    uploadCommonAsset(base64, hash, 'text/plain');
                });
            }
            break;
        }
        case ExparserNodeType.TextNode: {
            const textNode = node;
            info = {
                id,
                type,
                updateTs: elapsed(),
                ref: new $WeakRef(node),
                slot: textNode.__slot,
                value: textNode.textContent,
                parentId,
                prevId,
            };
            break;
        }
        default: {
            wxConsole.warn(`[tel] [warn] adding unknown node: ${type}, ${node.tagName}`);
            return null;
        }
    }
    setFlags(node, info);
    nodeInfo$1[id] = info;
    idMap$1.set(node, id);
    if (info.excluded && info.excludedRoot) {
        const rect = info.ref?.deref()?.$$?.getBoundingClientRect();
        if (rect) {
            info.height = rect.height;
            info.width = rect.width;
        }
    }
    else if (builtIn) {
        const is = node.is;
        if (is === 'wx-image') {
            const rect = info.ref?.deref()?.$$?.getBoundingClientRect();
            if (rect) {
                info.height = rect.height;
                info.width = rect.width;
            }
            observeWxImage(id, node);
        }
        else if (is === 'wx-input') {
            observeWxInput(id, node);
        }
        else if (is === 'wx-movable-view') {
            observeWxMovableView(id, node);
        }
        else if (is === 'wx-canvas') {
            if (shouldMask(id)) {
                wxConsole.log('[tel] [exp] wx-canvas skip', node);
            }
            else {
                wxConsole.log('[tel] [exp] wx-canvas', node);
                wx?.triggerCanvasCollect?.({ canvasNumber: node._canvasNumber, webviewId: window.__webviewId__, nodeId: id });
            }
        }
        else if (is === 'wx-video') {
            observeWxVideo(id, node);
        }
    }
    return nodeInfo$1[id];
}
function updateNodePos(node) {
    const id = idMap$1.get(node);
    const info = nodeInfo$1[id];
    const { parentId, prevId } = getNodePos$1(node, info.type);
    info.parentId = parentId;
    info.prevId = prevId;
}
function getNodeId$1(node) {
    return idMap$1.get(node);
}
function getNodeInfo$1(id) {
    return nodeInfo$1[id];
}
function getNodePos$1(node, type) {
    let parentId;
    let prevId;
    if (type === ExparserNodeType.VirtualNode && node.is === 'shadow') {
        const parentNode = node.__wxSlotParent;
        if (parentNode) {
            if (!idMap$1.has(parentNode)) {
                addNode$1(parentNode);
            }
            parentId = idMap$1.get(parentNode);
        }
    }
    else if (node.parentNode) {
        if (!idMap$1.has(node.parentNode)) {
            addNode$1(node.parentNode);
        }
        parentId = idMap$1.get(node.parentNode);
        const posInd = node.parentNode.childNodes.indexOf(node);
        if (posInd > 0) {
            prevId = idMap$1.get(node.parentNode.childNodes[posInd - 1]);
        }
    }
    else if (node.$$?.parentElement === document.documentElement) {
        parentId = -1;
        prevId = [...document.documentElement.children].indexOf(node.$$);
    }
    return {
        parentId,
        prevId,
    };
}
function transformToEncode$7() {
    schedule({
        id: 'exp.tree.transform',
        fn: _transformToEncode$7,
    });
}
function _transformToEncode$7(task) {
    const extraEvents = [];
    const optimizeStorage = config.enabledFeatures.optimizeStorage;
    const encodable = eventBuffer$8.map(event => {
        let nodesCount = 0;
        const sliceInfos = event.slices.map(slice => {
            nodesCount += slice.nodes.length;
            return {
                ts: slice.ts,
                len: slice.nodes.length,
            };
        });
        const flatNodes = event.slices.reduce((acc, slice) => acc.concat(slice.nodes), []);
        const optNodes = optimizeStorage
            ? optimizeStorageForExparserNodesSlice(flatNodes)
            : flatNodes.map(toProtocolNodeInfo$1).filter((x) => Boolean(x));
        if (optNodes.length < nodesCount) {
            sliceInfos[0].len -= nodesCount - optNodes.length;
        }
        const mergedSlice = {
            ts: event.slices[0].ts,
            nodes: optNodes,
            sliceInfos,
        };
        const e = {
            seq: event.seq,
            type: event.type,
            timestamp: event.ts,
            elapsedTime: event.elapsed,
            uiEnv: event.env,
            initNodes: [mergedSlice],
        };
        return e;
    });
    encodable.unshift(...extraEvents);
    save(encodable);
    onUiReaction(encodable);
    eventBuffer$8 = [];
    task.done();
}
window.__tel__exp = {
    get idCount() {
        return idCount$1;
    },
    get idMap() {
        return idMap$1;
    },
    get nodeInfo() {
        return nodeInfo$1;
    },
};

var strToBuf = TextEncoder.prototype.encode.bind(new TextEncoder());
var hexLUT = Array.from({
  length: 256
}, (_, i) => "00".concat(i.toString(16)).slice(-2));
function bufToHex() {
  var buf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array(0);
  var str = "";
  for (var i = 0; i < buf.byteLength; i++) {
    str += hexLUT[buf[i]];
  }
  return str;
}
function mul32(m, n) {
  return (m & 65535) * n + (((m >>> 16) * n & 65535) << 16);
}
function rol32(n, r) {
  return n << r | n >>> 32 - r;
}
function x86fmix32(h) {
  h ^= h >>> 16;
  h = mul32(h, 2246822507);
  h ^= h >>> 13;
  h = mul32(h, 3266489909);
  h ^= h >>> 16;
  return h;
}
var x86hash32c1 = 3432918353;
var x86hash32c2 = 461845907;
function x86mix32(h, k) {
  k = mul32(k, x86hash32c1);
  k = rol32(k, 15);
  k = mul32(k, x86hash32c2);
  h ^= k;
  h = rol32(h, 13);
  h = mul32(h, 5) + 3864292196;
  return h;
}
function x86hash32() {
  var buf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array(0);
  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var finalize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (typeof buf === "string") {
    buf = strToBuf(buf);
  }
  var h1;
  var i;
  var len;
  if (typeof state === "number") {
    h1 = state;
    i = 0;
    len = 0;
  } else {
    ({
      h1,
      len
    } = state);
    var rem = state.rem;
    if (rem.byteLength === 0) {
      i = 0;
    } else if (rem.byteLength + buf.byteLength >= 4) {
      len += 4;
      i = 4 - rem.byteLength;
      var blk = new Uint8Array(4);
      var dtv2 = new DataView(blk.buffer);
      blk.set(rem);
      blk.set(buf.subarray(0, i), rem.byteLength);
      h1 = x86mix32(h1, dtv2.getUint32(0, true));
    } else {
      var newBuf = new Uint8Array(buf.byteLength + rem.byteLength);
      newBuf.set(rem);
      newBuf.set(buf, rem.byteLength);
      buf = newBuf;
      i = 0;
    }
  }
  var dtv = new DataView(buf.buffer, buf.byteOffset);
  var remainder = (buf.byteLength - i) % 4;
  var bytes = buf.byteLength - i - remainder;
  len += bytes;
  for (; i < bytes; i += 4) {
    h1 = x86mix32(h1, dtv.getUint32(i, true));
  }
  if (!finalize) {
    return {
      h1,
      len,
      rem: buf.slice(buf.byteLength - remainder)
    };
  } else {
    len += remainder;
    var k1 = 0;
    switch (remainder) {
      case 3:
        k1 ^= buf[i + 2] << 16;
      case 2:
        k1 ^= buf[i + 1] << 8;
      case 1:
        k1 ^= buf[i];
        k1 = mul32(k1, x86hash32c1);
        k1 = rol32(k1, 15);
        k1 = mul32(k1, x86hash32c2);
        h1 ^= k1;
    }
    h1 ^= len & 4294967295;
    h1 = x86fmix32(h1);
    return h1 >>> 0;
  }
}
var x86hash128c1 = 597399067;
var x86hash128c2 = 2869860233;
var x86hash128c3 = 951274213;
var x86hash128c4 = 2716044179;
function x86mix128(h1, h2, h3, h4, k1, k2, k3, k4) {
  k1 = mul32(k1, x86hash128c1);
  k1 = rol32(k1, 15);
  k1 = mul32(k1, x86hash128c2);
  h1 ^= k1;
  h1 = rol32(h1, 19);
  h1 += h2;
  h1 = mul32(h1, 5) + 1444728091;
  k2 = mul32(k2, x86hash128c2);
  k2 = rol32(k2, 16);
  k2 = mul32(k2, x86hash128c3);
  h2 ^= k2;
  h2 = rol32(h2, 17);
  h2 += h3;
  h2 = mul32(h2, 5) + 197830471;
  k3 = mul32(k3, x86hash128c3);
  k3 = rol32(k3, 17);
  k3 = mul32(k3, x86hash128c4);
  h3 ^= k3;
  h3 = rol32(h3, 15);
  h3 += h4;
  h3 = mul32(h3, 5) + 2530024501;
  k4 = mul32(k4, x86hash128c4);
  k4 = rol32(k4, 18);
  k4 = mul32(k4, x86hash128c1);
  h4 ^= k4;
  h4 = rol32(h4, 13);
  h4 += h1;
  h4 = mul32(h4, 5) + 850148119;
  return [h1, h2, h3, h4];
}
function x86hash128() {
  var buf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array(0);
  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var finalize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var str;
  if (typeof buf === "string") {
    buf = strToBuf(buf);
    str = true;
  } else {
    str = false;
  }
  var h1;
  var h2;
  var h3;
  var h4;
  var i;
  var len;
  if (typeof state === "number") {
    h1 = h2 = h3 = h4 = state;
    i = 0;
    len = 0;
  } else {
    ({
      h1,
      h2,
      h3,
      h4,
      len
    } = state);
    var rem = state.rem;
    if (rem.byteLength === 0) {
      i = 0;
    } else if (rem.byteLength + buf.byteLength >= 16) {
      len += 16;
      i = 16 - rem.byteLength;
      var blk = new Uint8Array(16);
      var dtv2 = new DataView(blk.buffer);
      blk.set(rem);
      blk.set(buf.subarray(0, i), rem.byteLength);
      [h1, h2, h3, h4] = x86mix128(h1, h2, h3, h4, dtv2.getUint32(0, true), dtv2.getUint32(4, true), dtv2.getUint32(8, true), dtv2.getUint32(12, true));
    } else {
      var newBuf = new Uint8Array(buf.byteLength + rem.byteLength);
      newBuf.set(rem);
      newBuf.set(buf, rem.byteLength);
      buf = newBuf;
      i = 0;
    }
  }
  var dtv = new DataView(buf.buffer, buf.byteOffset);
  var remainder = (buf.byteLength - i) % 16;
  var bytes = buf.byteLength - i - remainder;
  len += bytes;
  for (; i < bytes; i += 16) {
    [h1, h2, h3, h4] = x86mix128(h1, h2, h3, h4, dtv.getUint32(i, true), dtv.getUint32(i + 4, true), dtv.getUint32(i + 8, true), dtv.getUint32(i + 12, true));
  }
  if (!finalize) {
    return {
      h1,
      h2,
      h3,
      h4,
      len,
      rem: buf.subarray(buf.byteLength - remainder)
    };
  } else {
    len += remainder;
    var k1 = 0;
    var k2 = 0;
    var k3 = 0;
    var k4 = 0;
    switch (remainder) {
      case 15:
        k4 ^= buf[i + 14] << 16;
      case 14:
        k4 ^= buf[i + 13] << 8;
      case 13:
        k4 ^= buf[i + 12];
        k4 = mul32(k4, x86hash128c4);
        k4 = rol32(k4, 18);
        k4 = mul32(k4, x86hash128c1);
        h4 ^= k4;
      case 12:
        k3 ^= buf[i + 11] << 24;
      case 11:
        k3 ^= buf[i + 10] << 16;
      case 10:
        k3 ^= buf[i + 9] << 8;
      case 9:
        k3 ^= buf[i + 8];
        k3 = mul32(k3, x86hash128c3);
        k3 = rol32(k3, 17);
        k3 = mul32(k3, x86hash128c4);
        h3 ^= k3;
      case 8:
        k2 ^= buf[i + 7] << 24;
      case 7:
        k2 ^= buf[i + 6] << 16;
      case 6:
        k2 ^= buf[i + 5] << 8;
      case 5:
        k2 ^= buf[i + 4];
        k2 = mul32(k2, x86hash128c2);
        k2 = rol32(k2, 16);
        k2 = mul32(k2, x86hash128c3);
        h2 ^= k2;
      case 4:
        k1 ^= buf[i + 3] << 24;
      case 3:
        k1 ^= buf[i + 2] << 16;
      case 2:
        k1 ^= buf[i + 1] << 8;
      case 1:
        k1 ^= buf[i];
        k1 = mul32(k1, x86hash128c1);
        k1 = rol32(k1, 15);
        k1 = mul32(k1, x86hash128c2);
        h1 ^= k1;
    }
    h1 ^= len & 4294967295;
    h2 ^= len & 4294967295;
    h3 ^= len & 4294967295;
    h4 ^= len & 4294967295;
    h1 += h2 + h3 + h4;
    h2 += h1;
    h3 += h1;
    h4 += h1;
    h1 = x86fmix32(h1);
    h2 = x86fmix32(h2);
    h3 = x86fmix32(h3);
    h4 = x86fmix32(h4);
    h1 += h2 + h3 + h4;
    h2 += h1;
    h3 += h1;
    h4 += h1;
    var hash = new DataView(new ArrayBuffer(16));
    hash.setUint32(0, h1, false);
    hash.setUint32(4, h2, false);
    hash.setUint32(8, h3, false);
    hash.setUint32(12, h4, false);
    return str ? bufToHex(new Uint8Array(hash.buffer)) : new Uint8Array(hash.buffer);
  }
}
var x86 = {
  hash32: x86hash32,
  hash128: x86hash128
};

var MAX_TOKENS = 20;
var MAX_NODES = 20;
function getElementTokens(element, clickedPath) {
  var tokens = [];
  var nodesVisited = 0;
  function collectTokens(node) {
    if (clickedPath.includes(node) || tokens.length >= MAX_TOKENS || nodesVisited >= MAX_NODES) return;
    nodesVisited++;
    if (node.nodeType === Node.TEXT_NODE && node.textContent) {
      var textTokens = node.textContent.trim().split(/(?:[\t-\r -#%-\*,-\/:;\?@\[-\]_\{\}\xA0\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B4E\u1B4F\u1B5A-\u1B60\u1B7D-\u1B7F\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFEFF\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDD6E\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9\uDFD4\uDFD5\uDFD7\uDFD8]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09\uDFE1]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDD6D-\uDD6F\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD839\uDDFF|\uD83A[\uDD5E\uDD5F])+/).filter(Boolean).map(token => ({
        type: "text",
        value: token
      }));
      tokens.push(...textTokens.slice(0, MAX_TOKENS - tokens.length));
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      var elem = node;
      var src = elem.getAttribute("src");
      if (src && tokens.length < MAX_TOKENS) {
        tokens.push({
          type: "resource",
          value: src
        });
      }
      if (tokens.length < MAX_TOKENS) {
        var style = window.getComputedStyle(elem);
        var backgroundImage = style.getPropertyValue("background-image");
        if (backgroundImage !== "none") {
          var match = backgroundImage.match(/url\(['"]?(.*?)['"]?\)/);
          if (match) {
            tokens.push({
              type: "resource",
              value: match[1]
            });
          }
        }
      }
      for (var child of Array.from(elem.childNodes)) {
        if (tokens.length >= MAX_TOKENS || nodesVisited >= MAX_NODES) break;
        collectTokens(child);
      }
    }
  }
  collectTokens(element);
  return tokens;
}
function getElementsSelector(target, iframeMap) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _a, _b, _c, _d, _e, _f, _g;
  var {
    collectTokens = false,
    shouldMask
  } = options;
  try {
    var _ref;
    var path = [];
    var currentEle = target;
    var allTokens = new Set();
    var stopCollectingTokens = false;
    var clickedPath = [];
    while (currentEle) {
      var id = currentEle.getAttribute("id");
      if (id === "__vconsole") {
        return {
          selector: "__wx_unselect_vconsole__",
          n: -1,
          ancestorPath: []
        };
      }
      var attributes = [];
      for (var attr of Array.from(currentEle.attributes)) {
        if (attr.nodeName === "class" && attr.nodeValue) {
          for (var v of attr.nodeValue.split(" ")) {
            attributes.push({
              k: attr.nodeName,
              v
            });
          }
        } else if (!attr.nodeName.startsWith("exparser:") && attr.nodeName !== "style" && (attr.nodeValue || "").length < 1024) {
          attributes.push({
            k: attr.nodeName,
            v: attr.nodeValue
          });
        }
      }
      var tokens = [];
      if (collectTokens && !stopCollectingTokens && (!shouldMask || !shouldMask(currentEle.__wxElement))) {
        var elementTokens = getElementTokens(currentEle, clickedPath);
        tokens = elementTokens.filter(token => !allTokens.has(token.value));
        tokens.forEach(token => allTokens.add(token.value));
      }
      clickedPath.push(currentEle);
      path.push({
        id: id || "",
        className: currentEle.className,
        tag: currentEle.tagName,
        attributes,
        tokens
      });
      if ((_b = (_a = currentEle.__wxElement) == null ? void 0 : _a.__wxEventHandleName) == null ? void 0 : _b["tap"]) {
        stopCollectingTokens = true;
        attributes.push({
          k: "tapEventHandler",
          v: typeof ((_d = (_c = currentEle.__wxElement) == null ? void 0 : _c.__wxEventHandleName) == null ? void 0 : _d["tap"]) === "string" ? (_f = (_e = currentEle.__wxElement) == null ? void 0 : _e.__wxEventHandleName) == null ? void 0 : _f["tap"] : "anonymous"
        });
      }
      if (currentEle.parentElement) {
        currentEle = currentEle.parentElement;
      } else {
        break;
      }
    }
    var selector = "";
    for (var p of path) {
      if (selector !== "") {
        selector = ">" + selector;
      }
      selector = p.tag.toLowerCase() + selector;
    }
    var n = 0;
    var candidates = window.Node.prototype.getRootNode.apply(target).querySelectorAll(selector);
    for (var i = 0; i < candidates.length; ++i) {
      if (target === candidates[i]) {
        n = i;
        break;
      }
    }
    if (path[path.length - 1].tag.toLowerCase() === "html") {
      path.pop();
    }
    var ancestorPath = path.map(v => ({
      tagName: v.tag,
      attributes: [...v.attributes, ...v.tokens.map(token => ({
        k: token.type === "text" ? "textToken" : "resourceToken",
        v: token.value
      }))]
    }));
    var host = (_ref = (_g = window.Node.prototype.getRootNode.apply(target)) == null ? void 0 : _g.host) !== null && _ref !== void 0 ? _ref : iframeMap == null ? void 0 : iframeMap.get(currentEle.ownerDocument);
    if (host) {
      var parentSelector = getElementsSelector(host, iframeMap, options);
      selector = "".concat(parentSelector.selector, ":").concat(parentSelector.n, " ").concat(selector);
      ancestorPath.push(...parentSelector.ancestorPath);
    }
    return {
      selector,
      n,
      ancestorPath
    };
  } catch (e) {
    return {
      selector: "__wx_unselect__",
      n: -1,
      ancestorPath: []
    };
  }
}
var getTextGen = checkExcluded => {
  return function getText(node) {
    var maxDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;
    var maxNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;
    var maxLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 70;
    var text = "";
    var nodesVisited = 0;
    function traverse(node2, depth) {
      if (checkExcluded && checkExcluded(node2)) return;
      if (depth > maxDepth) {
        return;
      }
      if (node2.nodeType === Node.TEXT_NODE) {
        text += node2.textContent;
      }
      for (var i = 0; i < node2.childNodes.length; i++) {
        nodesVisited++;
        if (nodesVisited > maxNodes) {
          return;
        }
        traverse(node2.childNodes[i], depth + 1);
        if (text.length > maxLength) {
          return;
        }
      }
    }
    try {
      traverse(node, 0);
    } catch (_unused) {}
    return text.slice(0, maxLength);
  };
};
var MAX_SRC_LENGTH = 1e6;
var getImageSrcGen = checkExcluded => {
  return function getImage(node) {
    var maxDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;
    var maxNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;
    var maxCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;
    var _a, _b;
    var text = "";
    var imgCnt = 0;
    var nodesVisited = 0;
    if (node.tagName.toLowerCase() === "div" && ((_b = (_a = node.parentElement) == null ? void 0 : _a.tagName) == null ? void 0 : _b.toLowerCase()) === "wx-image") {
      var src = node.parentElement.getAttribute("src");
      if (src && src.length < MAX_SRC_LENGTH) {
        imgCnt++;
        text += x86.hash32(src) + ";";
      }
    }
    function traverse(node2, depth) {
      if (checkExcluded && checkExcluded(node2)) return;
      if (depth > maxDepth || imgCnt >= maxCount) {
        return;
      }
      if (node2.tagName.toLowerCase() === "wx-image") {
        var _src = node2.getAttribute("src");
        if (_src && _src.length < MAX_SRC_LENGTH) {
          imgCnt++;
          text += x86.hash32(_src) + ";";
        }
      }
      for (var i = 0; i < node2.childNodes.length; i++) {
        nodesVisited++;
        if (nodesVisited > maxNodes) {
          return;
        }
        var childNode = node2.childNodes[i];
        if (childNode instanceof HTMLElement) traverse(childNode, depth + 1);
        if (imgCnt >= maxCount) {
          return;
        }
      }
    }
    try {
      traverse(node, 0);
    } catch (_unused2) {}
    return text;
  };
};

const IGNORE_TAGNAMES = new Set(['SCRIPT', 'NOSCRIPT']);
const IGNORE_ATTRIBUTES = new Set(['title', 'alt', 'onload', 'onfocus', 'onerror']);
const ALLOWED_META_NAMES = new Set(['viewport']);
function getAttributes(el) {
    const res = {};
    const attrs = el.attributes;
    if (attrs.length) {
        for (let i = 0; i < attrs.length; i++) {
            const { name, value } = attrs[i];
            if (!IGNORE_ATTRIBUTES.has(name)) {
                if (name === 'src' || name === 'href') {
                    res[name] = el[name] || value;
                    if (typeof res[name] === 'object')
                        res[name] = value;
                }
                else {
                    res[name] = value;
                }
                if (name === 'srcset') {
                    const srcset = res[name];
                    if (srcset) {
                        res[name] = srcset
                            .split(',')
                            .map(src => {
                            const [url, size] = src.trim().split(' ');
                            if (url.startsWith('/')) {
                                return location.origin + url + ' ' + size;
                            }
                            return src;
                        })
                            .join(', ');
                    }
                }
            }
        }
    }
    return res;
}
function diff(prev, next) {
    const diff = {
        id: next.id,
        attributes: {},
    };
    if (prev.type !== next.type) {
        diff.type = next.type;
    }
    if (prev.tag !== next.tag) {
        diff.tag = next.tag;
    }
    if (prev.value !== next.value) {
        diff.value = next.value;
    }
    if (prev.attributes && next.attributes) {
        for (const key in next.attributes) {
            if (next.attributes[key] !== prev.attributes[key]) {
                diff.attributes[key] = next.attributes[key];
            }
        }
        for (const key in prev.attributes) {
            if (!Object.prototype.hasOwnProperty.call(next.attributes, key)) {
                diff.attributes[key] = undefined;
            }
        }
    }
    if (prev.parentId !== next.parentId) {
        diff.parentId = next.parentId;
    }
    if (prev.prevId !== next.prevId) {
        diff.prevId = next.prevId;
    }
    return diff;
}
function toProtocolNodeInfo(info) {
    const attributes = [];
    if (info.attributes) {
        for (const key in info.attributes) {
            if (info.attributes[key]) {
                attributes.push({
                    key,
                    value: info.attributes[key] || '',
                });
            }
            else {
                attributes.push({
                    key,
                    removed: true,
                });
            }
        }
    }
    if (isEmptyDomNode(info)) {
        return null;
    }
    const n = {
        ...info,
        attributes,
        properties: undefined,
    };
    if (n['domRef']) {
        delete n['domRef'];
    }
    return n;
}
const isEmptyDomNode = (node) => {
    return (node.value === undefined &&
        (node.attributes === undefined || Object.keys(node.attributes).length === 0) &&
        node.tag === undefined &&
        node.parentId === undefined &&
        node.prevId === undefined &&
        node.type === undefined &&
        node.width === undefined &&
        node.height === undefined &&
        node.valueHash === undefined &&
        node.masked === undefined &&
        node.maskLength === undefined &&
        node.unmasked === undefined &&
        node.excluded === undefined &&
        node.excludedRoot === undefined);
};
function getEventTarget(e) {
    const node = e.target;
    if (node.nodeType === Node.DOCUMENT_NODE)
        return node.documentElement;
    return node;
}
function checkExcluded(node) {
    try {
        if ("miniprogram" === 'web') ;
        else {
            const ele = node.__wxElement;
            if (!ele)
                return false;
            if (config.coslessMode) {
                return shouldExcludeForCosless(ele);
            }
            const id = getNodeId$1(ele);
            if (id !== undefined)
                return shouldExclude(id) !== ExcludeLevel$1.None;
        }
        return false;
    }
    catch (e) {
        handleError({
            type: ErrorType.WebviewEncode,
            e,
            extra: 'checkExcluded',
        });
        return false;
    }
}
const getText = getTextGen(checkExcluded);
const getImage = getImageSrcGen(checkExcluded);

const EVENT_INTERVAL$2 = 50;
let eventBuffer$7 = [];
debounce(encodeAndSave$1, 200);
function encodeAndSave$1() {
    schedule({
        id: 'selection',
        fn: _encodeAndSave$1,
    });
}
function _encodeAndSave$1(task) {
    if (eventBuffer$7.length === 0) {
        task.done();
        return;
    }
    const filtered = [eventBuffer$7[0]];
    for (let i = 1; i < eventBuffer$7.length; ++i) {
        const lastInfo = filtered[filtered.length - 1];
        const currentInfo = eventBuffer$7[i];
        if (currentInfo.time - lastInfo.time > EVENT_INTERVAL$2) {
            filtered.push(currentInfo);
        }
    }
    if (eventBuffer$7[eventBuffer$7.length - 1] !== filtered[filtered.length - 1]) {
        filtered.push(eventBuffer$7[eventBuffer$7.length - 1]);
    }
    const protocolEvents = filtered.map(e => ({
        seq: e.seq,
        elapsedTime: e.time,
        type: EventType.Selection,
        selection: {
            start: e.start ? getNodeId(e.start) : null,
            end: e.end ? getNodeId(e.end) : null,
            startOffset: e.startOffset,
            endOffset: e.endOffset,
        },
    }));
    eventBuffer$7 = [];
    save(protocolEvents);
    task.done();
}

const MOVE_EVENT_COLLECT_INTERVAL$1 = 32;
const MOVE_EVENT_COLLECT_DISTANCE$1 = 5;
const START_END_EVENT_TYPES$1 = new Set([EventType.TouchStart, EventType.TouchEnd, EventType.TouchCancel, EventType.MouseDown, EventType.MouseUp]);
let eventBuffer$6 = [];
debounce(transformToEncode$6, 100, { maxWait: 200 });
function transformToEncode$6() {
    schedule({
        id: 'pointer',
        fn: _transformToEncode$6,
    });
}
function _transformToEncode$6(task) {
    let filtered = eventBuffer$6;
    if (eventBuffer$6.length > 1) {
        filtered = [];
        const pointerState = {};
        for (const e of eventBuffer$6) {
            const { type, id = -1, target } = e;
            if (!target)
                continue;
            const nodeId = getNodeId(target);
            if (nodeId !== undefined && shouldExclude$1(nodeId) !== ExcludeLevel$1.None) {
                continue;
            }
            if (START_END_EVENT_TYPES$1.has(type)) {
                if (pointerState[id]) {
                    delete pointerState[id];
                }
                filtered.push(e);
                continue;
            }
            const prevState = pointerState[id];
            if (prevState) {
                if (shouldDiscard$1(prevState, e)) {
                    continue;
                }
                else {
                    filtered.push(e);
                }
            }
            else {
                filtered.push(e);
            }
            pointerState[id] = e;
        }
    }
    const offsetMap = new Map();
    for (const e of filtered) {
        const { target } = e;
        if (!target)
            continue;
        let doc = target.ownerDocument;
        if (!doc)
            continue;
        if (!offsetMap.has(doc)) {
            const offset = {
                x: 0,
                y: 0,
            };
            while (doc && document !== doc) {
                const iframe = getIframeMap().get(doc);
                if (!iframe)
                    break;
                const rect = iframe.getBoundingClientRect();
                offset.x = rect.left;
                offset.y = rect.top;
                doc = iframe.ownerDocument;
            }
            offsetMap.set(doc, offset);
            e.x += offset.x;
            e.y += offset.y;
        }
        else {
            const offset = offsetMap.get(doc);
            e.x += offset.x;
            e.y += offset.y;
        }
    }
    const protocolEvents = filtered.map(e => {
        const event = {
            seq: e.seq,
            elapsedTime: e.time,
            type: e.type,
            nodeId: e.nodeId,
            pointers: [
                {
                    identifier: e.id,
                    x: e.x,
                    y: e.y,
                },
            ],
        };
        return event;
    });
    eventBuffer$6 = [];
    save(protocolEvents);
    task.done();
}
function shouldDiscard$1(a, b) {
    return (Math.abs(b.time - a.time) < MOVE_EVENT_COLLECT_INTERVAL$1 ||
        (Math.abs(a.y - b.y) < MOVE_EVENT_COLLECT_DISTANCE$1 && Math.abs(a.x - b.x) < MOVE_EVENT_COLLECT_DISTANCE$1));
}

let lastClick = null;
let continueCount = 0;
const TimeGapThreshold = 500;
const DisThreshHold = 50;
function start$7() {
    lastClick = null;
    continueCount = 0;
}
function reset$7() {
    lastClick = null;
    continueCount = 0;
}
function isRage(event) {
    if (lastClick && isClosedTwoClick(event, lastClick) && event.timestamp - lastClick.timestamp < TimeGapThreshold) {
        continueCount += 1;
        lastClick = event;
        return continueCount >= 3;
    }
    else {
        continueCount = 1;
        lastClick = event;
        return false;
    }
}
function isClosedTwoClick(clickA, clickB) {
    return Math.pow(clickA.pageX - clickB.pageX, 2) + Math.pow(clickA.pageY - clickB.pageY, 2) < Math.pow(DisThreshHold, 2);
}

const EVENT_INTERVAL$1 = 50;
let eventBuffer$5 = [];
debounce(transformToEncode$5, 500, { maxWait: 500 });
function transformToEncode$5() {
    schedule({
        id: 'scroll',
        fn: _transformToEncode$5,
    });
}
function _transformToEncode$5(task) {
    if (!eventBuffer$5.length) {
        task.done();
        return;
    }
    const filtered = [eventBuffer$5[0]];
    if (eventBuffer$5.length > 2) {
        for (let i = 1; i < eventBuffer$5.length - 1; i++) {
            const first = filtered[filtered.length - 1];
            const middle = eventBuffer$5[i];
            const last = eventBuffer$5[i + 1];
            if (first.target === middle.target && middle.target === last.target && last.time - first.time < EVENT_INTERVAL$1) {
                continue;
            }
            filtered.push(middle);
        }
        filtered.push(eventBuffer$5[eventBuffer$5.length - 1]);
    }
    else if (eventBuffer$5.length === 2) {
        filtered.push(eventBuffer$5[1]);
    }
    const protocolEvents = [];
    for (const e of filtered) {
        const id = getNodeId(e.target);
        if (!id) {
            setTimeout(() => {
                let str = `${e.target.tagName}.${e.target.className}`;
                let current = e.target;
                while ((current = current.parentElement)) {
                    str += `,${current.tagName}.${e.target.className}`;
                }
                wxConsole.log(`[tel] scroll not found ${str}`, e.target);
            });
            continue;
        }
        if (shouldExclude$1(id) !== ExcludeLevel$1.None)
            continue;
        const event = {
            seq: e.seq,
            elapsedTime: e.time,
            type: EventType.Scroll,
            nodeId: id,
            scroll: {
                scrollLeft: e.x,
                scrollTop: e.y,
            },
        };
        protocolEvents.push(event);
    }
    eventBuffer$5 = [];
    save(protocolEvents);
    task.done();
}

let inputInfo = {};
const DEBOUNCE_INTERVAL = 50;
debounce(encodeAndSave, DEBOUNCE_INTERVAL);
function encodeAndSave() {
    schedule({
        id: 'input-change',
        fn: _encodeAndSave,
    });
}
function _encodeAndSave(task) {
    const protocolEvents = [];
    for (const info of Object.values(inputInfo)) {
        const input = {
            value: info.value,
        };
        maskInputChange(info.id, input);
        protocolEvents.push({
            seq: info.seq,
            elapsedTime: info.elapsed,
            type: EventType.InputChange,
            nodeId: info.id,
            input: input,
        });
    }
    save(protocolEvents);
    task.done();
}

let observer$1;
const eventBuffer$4 = {
    scan: [],
    transform: [],
};
function start$6() {
    observer$1 = new MutationObserver(scan$1);
}
function reset$6() {
    observer$1.disconnect();
    eventBuffer$4.scan = [];
    eventBuffer$4.transform = [];
}
function observeTree(root) {
    observer$1.observe(root, {
        childList: true,
        subtree: true,
        attributes: true,
        characterData: true,
    });
}
function scan$1(mutations) {
    const event = {
        seq: nextSeq(),
        ts: elapsed(),
        mutations,
    };
    eventBuffer$4.scan.push(event);
    schedule({
        fn: async (task) => {
            try {
                processMutationEvents$1(task);
                await task.promise;
            }
            catch (e) {
                wxConsole.error('[tel], processMutationEvent error', e);
            }
        },
        priority: Priority.High,
        desc: `exp.process_scanned`,
    });
}
async function processMutationEvents$1(task) {
    while (eventBuffer$4.scan.length) {
        const scanned = eventBuffer$4.scan.shift();
        const mutations = scanned.mutations;
        for (const e of mutations) {
            const targetId = getNodeId(e.target);
            if (!targetId) {
                wxConsole.log('[tel] target node not collected yet');
                continue;
            }
            const record = {
                type: MutationType.ChildList,
                target: targetId,
            };
            const event = {
                seq: scanned.seq,
                type: EventType.Mutation,
                ts: elapsed(),
                env: UIEnv.DOM,
                mutations: [record],
            };
            let shouldCollect = true;
            if (e.type === 'childList') {
                shouldCollect = await handleChildListEvent(e, record, task);
            }
            else if (e.type === 'attributes') {
                record.type = MutationType.Attributes;
                shouldCollect = handleAttributesEvent$1(e, record);
            }
            else if (e.type === 'characterData') {
                record.type = MutationType.CharacterData;
                shouldCollect = handleCharacterDataEvent(e, record);
            }
            if (shouldCollect) {
                eventBuffer$4.transform.push(event);
            }
        }
    }
    task.done();
    if (eventBuffer$4.transform.length) {
        transformToEncode$4();
    }
}
async function handleChildListEvent(e, record, task) {
    const addedNodes = e.addedNodes || [];
    const removedNodes = e.removedNodes || [];
    for (const node of addedNodes) {
        if (!record.addedNodes) {
            record.addedNodes = [];
        }
        const addedNodes = record.addedNodes;
        if (node.nodeType === Node.ELEMENT_NODE) {
            if (node.tagName === 'SCRIPT') {
                continue;
            }
        }
        const childTask = addTree(node, ({ info, diff }, slice) => {
            if (!addedNodes[slice]) {
                addedNodes[slice] = {
                    ts: elapsed(),
                    nodes: [],
                };
            }
            addedNodes[slice].nodes.push({ ...(diff || info) });
        });
        await task.call(childTask.id);
        if (!hasNativeWeakRef) {
            node.isConnected ? refill(node) : release(node);
        }
    }
    if (removedNodes.length) {
        const ids = [];
        for (const node of removedNodes) {
            if (node.nodeType === Node.ELEMENT_NODE) {
                if (node.tagName === 'SCRIPT') {
                    continue;
                }
            }
            const id = getNodeId(node);
            if (id) {
                ids.push(id);
                const nodeInfo = getNodeInfo(id);
                nodeInfo.parentId = undefined;
                nodeInfo.prevId = undefined;
            }
            if (!hasNativeWeakRef) {
                node.isConnected ? refill(node) : release(node);
            }
        }
        record.removedNodes = ids;
    }
    return true;
}
function handleAttributesEvent$1(e, record) {
    if (IGNORE_ATTRIBUTES.has(e.attributeName))
        return false;
    const id = getNodeId(e.target);
    const info = getNodeInfo(id);
    const value = e.target.getAttribute(e.attributeName);
    if (info.attributes && info.attributes[e.attributeName] === value) {
        return false;
    }
    record.attributeName = e.attributeName;
    record.attributeValue = value ?? undefined;
    if (!info.attributes) {
        info.attributes = value
            ? {
                [e.attributeName]: value,
            }
            : {};
    }
    else if (value || value === '') {
        info.attributes = {
            ...info.attributes,
            [e.attributeName]: value,
        };
    }
    else {
        record.attributeRemoved = true;
        const attrs = { ...info.attributes };
        delete attrs[e.attributeName];
        info.attributes = attrs;
    }
    if ((e.attributeName === 'src' || e.attributeName === 'href') && value?.startsWith('/')) {
        const url = new URL(value, location.href);
        record.attributeValue = url.href;
    }
    if (e.attributeName === 'srcset') {
        const srcset = value.split(',').map(s => {
            const [url, size] = s.trim().split(' ');
            const urlObj = new URL(url, location.href);
            return urlObj.href + (size ? ' ' + size : '');
        });
        record.attributeValue = srcset.join(', ');
    }
    return true;
}
function handleCharacterDataEvent(e, record) {
    const id = getNodeId(e.target);
    const info = getNodeInfo(id);
    const parentInfo = getNodeInfo(info.parentId);
    if (parentInfo?.tag === 'STYLE' && shouldHashText(e.target.nodeValue || '')) {
        const toHashStr = preprocessCommonAssets(e.target.nodeValue);
        const hash = djbHash(toHashStr);
        if (hash === info.valueHash)
            return false;
        info.valueHash = hash;
        info.value = undefined;
        record.characterDataHash = hash;
        uploadCommonAsset(toHashStr, info.valueHash, 'text/plain');
    }
    else {
        record.characterData = e.target.nodeValue || '';
        info.value = record.characterData;
    }
    return true;
}
function transformToEncode$4() {
    schedule({
        id: 'dom.mut.transform',
        fn: _transformToEncode$4,
    });
}
function _transformToEncode$4(task) {
    const extraEvents = [];
    const optimizeDOMStorage = config.enabledFeatures.optimizeDOMStorage;
    const encodable = eventBuffer$4.transform
        .map(event => {
        const e = {
            seq: event.seq,
            type: event.type,
            elapsedTime: event.ts,
            uiEnv: event.env,
            mutationRecords: event.mutations
                .filter(mutation => shouldExclude$1(mutation.target) !== ExcludeLevel$1.All)
                .map((mutation) => {
                mutation = excludeMutation$1(mutation);
                mutation = maskMutation$1(mutation);
                let mergedAddedNodes;
                if (mutation.addedNodes?.length) {
                    let nodesCount = 0;
                    const sliceInfos = mutation.addedNodes.map(slice => {
                        nodesCount += slice.nodes.length;
                        return {
                            ts: slice.ts,
                            len: slice.nodes.length,
                        };
                    });
                    const flatNodes = mutation.addedNodes.reduce((acc, slice) => acc.concat(slice.nodes), []);
                    const optNodes = optimizeDOMStorage
                        ? optimizeStorageForDOMNodesSlice(flatNodes)
                        : flatNodes.map(toProtocolNodeInfo).filter((x) => Boolean(x));
                    if (optNodes.length < nodesCount) {
                        sliceInfos[0].len -= nodesCount - optNodes.length;
                    }
                    mergedAddedNodes = [
                        {
                            ts: mutation.addedNodes[0].ts,
                            nodes: optNodes,
                            sliceInfos,
                        },
                    ];
                }
                const record = {
                    ...mutation,
                    addedNodes: mergedAddedNodes,
                };
                if (mutation.attributeName &&
                    mutation.attributeValue &&
                    !mutation.attributeRemoved &&
                    shouldDropAttrValue(mutation.attributeName, mutation.attributeValue)) {
                    record.attributeName = undefined;
                    record.attributeValue = undefined;
                }
                if (record.attributeName === 'src' &&
                    getNodeInfo(mutation.target).tag?.toLowerCase() === 'img' &&
                    getNodeInfo(mutation.target).domRef?.deref()?.classList.contains(config.collectFileClass)) {
                    const el = getNodeInfo(mutation.target).domRef?.deref();
                    const src = el.src;
                    if (src) {
                        const hash = djbHash(src);
                        record.characterDataHash = hash;
                        getBase64Image(el).then((dataURL) => {
                            uploadCommonAsset(dataURL, hash, 'text/plain');
                        });
                    }
                }
                return record;
            })
                .filter(mutation => !(mutation.type === MutationType.ChildList && !mutation.addedNodes?.length && !mutation.removedNodes?.length)),
        };
        return e;
    })
        .filter(encoded => encoded.mutationRecords?.length ?? 0 > 0);
    if (encodable.length) {
        encodable.unshift(...extraEvents);
        save(encodable);
        onUiReaction(encodable);
    }
    eventBuffer$4.transform = [];
    task.done();
}

let dirtyCanvasTracker = new Set();
let loopCanvasTracker = new Set();
let enabled = false;
function proxyCanvas2dContextPrototype(win) {
    try {
        const prototype = win.CanvasRenderingContext2D.prototype;
        const descriptors = win.Object.getOwnPropertyDescriptors(prototype);
        for (const key in descriptors) {
            if (typeof descriptors[key].value === 'function') {
                const original = prototype[key];
                prototype[key] = function (...args) {
                    if (enabled) ;
                    return original.apply(this, args);
                };
            }
        }
    }
    catch (e) {
        wxConsole.warn(`[tel] proxyCanvas2dContextPrototype fail`, e);
    }
}
function observeCanvas(canvas) {
    setTimeout(() => {
        const ctx = canvas.getContext('2d');
        if (ctx) {
            dirtyCanvasTracker.add(canvas);
        }
        else {
            loopCanvasTracker.add(canvas);
        }
    }, 5000);
}

let idCount;
let idMap;
let iframeMap;
let nodeInfo;
let eventBuffer$3 = [];
function reset$5() {
    idCount = 1;
    idMap = new WeakMap();
    iframeMap = new WeakMap();
    nodeInfo = [];
    eventBuffer$3 = [];
}
reset$5();
async function init$1(roots) {
    const timer = startTiming();
    const initEvent = {
        seq: nextSeq(),
        type: EventType.InitDOM,
        slices: [],
        ts: getNow(),
        elapsed: elapsed(),
        env: UIEnv.DOM,
    };
    for (const rootNode of roots) {
        observeTree(rootNode);
        const task = addTree(rootNode, (ret, sliceNo) => {
            let slice = initEvent.slices[sliceNo];
            if (!slice) {
                slice = {
                    ts: elapsed(),
                    nodes: [],
                };
                initEvent.slices[sliceNo] = slice;
            }
            slice.nodes.push({ ...ret.info });
        });
        const { totalTime, slices } = await task.promise;
        wxConsole.log('[tel] init tree', totalTime, timer.end(), slices);
    }
    eventBuffer$3.push(initEvent);
    transformToEncode$3();
}
function addTree(root, onNodeFound) {
    const queue = [root];
    let slice = 0;
    mountExposureListener(root);
    return schedule({
        fn: async (task) => {
            let ret;
            while (ret !== TaskSignal.Done) {
                const timer = startTiming();
                ret = _addTree(queue, ret => onNodeFound(ret, slice));
                const cost = timer.end();
                if (cost > 30) {
                    wxConsole.log('[tel] _addTree', cost);
                }
                if (ret === TaskSignal.Yield && task.shouldYield()) {
                    await task.yield();
                    slice++;
                }
            }
            task.done();
        },
        priority: Priority.High,
        desc: `addTree root ${root?.tagName}`,
    });
}
function _addTree(queue, onNodeFound) {
    let quota = COMPLEX_OPERATIONS_PER_TASK_SLICE;
    while (queue.length > 0 && quota > 0) {
        quota--;
        const node = queue.shift();
        const ret = addNode(node);
        if (ret.info) {
            if (node.childNodes.length) {
                queue.unshift(...node.childNodes);
            }
            if (ret.subroot) {
                queue.unshift(ret.subroot);
            }
            if (node?.shadowRoot) {
                const shadowRoot = node.shadowRoot;
                queue.unshift(shadowRoot);
            }
            onNodeFound(ret);
        }
    }
    return queue.length > 0 ? TaskSignal.Yield : TaskSignal.Done;
}
function addNode(node) {
    let subroot;
    const existingId = idMap.get(node);
    const id = existingId || idCount++;
    const info = {
        id,
        type: node.nodeType,
        updateTs: elapsed(),
        domRef: new $WeakRef(node),
    };
    let ignoreNode = false;
    switch (node.nodeType) {
        case Node.ELEMENT_NODE: {
            const el = node;
            if (IGNORE_TAGNAMES.has(el.tagName)) {
                ignoreNode = true;
                break;
            }
            if (el.id === '__vconsole' || el.id === 'eruda') {
                ignoreNode = true;
                wxConsole.log('[tel] ignore vconsole');
                break;
            }
            info.tag = el.tagName;
            info.attributes = getAttributes(el);
            const { parentId, prevId } = getNodePos(el);
            info.parentId = parentId;
            info.prevId = prevId;
            switch (el.tagName) {
                case 'HTML': {
                    const root = el;
                    observeTree(root);
                    const parent = window.Node.prototype.getRootNode.apply(el);
                    info.parentId = idMap.get(parent);
                    if (parent && iframeMap.has(parent)) {
                        const iframe = iframeMap.get(parent);
                        info.parentId = idMap.get(iframe);
                    }
                    break;
                }
                case 'HEAD': {
                    break;
                }
                case 'META': {
                    const attributes = info.attributes;
                    if (attributes.name) {
                        if (!ALLOWED_META_NAMES.has(attributes.name)) {
                            info.attributes = {};
                        }
                    }
                    else if (attributes.key !== 'charset') {
                        info.attributes = {};
                    }
                    break;
                }
                case 'IFRAME': {
                    const iframe = node;
                    if (config.iframe && sameorigin(iframe)) {
                        if (!idMap.has(iframe)) {
                            iframe.addEventListener('load', () => {
                                wxConsole.log('[tel] iframe loaded', iframe);
                                if (config.canvas) {
                                    proxyCanvas2dContextPrototype(iframe.contentWindow);
                                }
                                setTimeout(() => {
                                    scan$1([
                                        {
                                            addedNodes: [iframe],
                                            attributeName: null,
                                            attributeNamespace: null,
                                            nextSibling: null,
                                            oldValue: null,
                                            previousSibling: null,
                                            removedNodes: [],
                                            target: node,
                                            type: 'childList',
                                        },
                                    ]);
                                }, 0);
                            });
                        }
                        if (iframe.contentDocument && iframe.contentWindow && iframe.contentDocument.readyState !== 'loading') {
                            subroot = iframe.contentDocument?.documentElement;
                        }
                    }
                    break;
                }
                case 'CANVAS': {
                    observeCanvas(el);
                    break;
                }
            }
            break;
        }
        case Node.TEXT_NODE: {
            info.value = node.nodeValue || '';
            const { parentId, prevId } = getNodePos(node);
            info.parentId = parentId;
            info.prevId = prevId;
            if (nodeInfo[info.parentId]?.tag === 'STYLE') {
                if (shouldHashText(info.value)) {
                    const value = info.value;
                    const toHashStr = preprocessCommonAssets(value);
                    info.valueHash = djbHash(toHashStr);
                    info.value = undefined;
                    uploadCommonAsset(toHashStr, info.valueHash, 'text/plain');
                }
            }
            break;
        }
        case Node.DOCUMENT_FRAGMENT_NODE: {
            const shadowRoot = node;
            info.parentId = idMap.get(shadowRoot.host);
            observeTree(shadowRoot);
            break;
        }
        case Node.DOCUMENT_NODE: {
            break;
        }
        case Node.DOCUMENT_TYPE_NODE: {
            break;
        }
        default: {
            ignoreNode = true;
            break;
        }
    }
    if (ignoreNode) {
        info.excluded = true;
        info.excludedRoot = true;
        if (!info.parentId) {
            const { parentId, prevId } = getNodePos(node);
            info.parentId = parentId;
            info.prevId = prevId;
        }
    }
    const oldInfo = nodeInfo[id];
    nodeInfo[id] = info;
    if (existingId) {
        return {
            info,
            update: true,
            diff: diff(oldInfo, info),
            subroot,
        };
    }
    else {
        idMap.set(node, id);
        return {
            info,
            subroot,
        };
    }
}
function getNodePos(node) {
    let parentId;
    let prevId;
    if (node.parentNode && idMap.has(node.parentNode)) {
        parentId = idMap.get(node.parentNode);
        let previousSibling = node.previousSibling;
        while (previousSibling && !idMap.has(previousSibling)) {
            previousSibling = previousSibling.previousSibling;
        }
        if (previousSibling) {
            prevId = idMap.get(previousSibling);
        }
    }
    return {
        parentId,
        prevId,
    };
}
function getNodeId(node) {
    return idMap.get(node);
}
function getNodeInfo(id) {
    return nodeInfo[id];
}
function sameorigin(node) {
    let output = false;
    if (node.nodeType === Node.ELEMENT_NODE && node.tagName === 'IFRAME') {
        const frame = node;
        try {
            const doc = frame.contentDocument;
            if (doc) {
                iframeMap.set(frame.contentDocument, frame);
                output = true;
            }
        }
        catch {
        }
    }
    return output;
}
function transformToEncode$3() {
    schedule({
        id: 'dom.tree.transform',
        fn: _transformToEncode$3,
    });
}
async function _transformToEncode$3(task) {
    const extraEvents = [];
    const { optimizeDOMStorage } = config.enabledFeatures;
    const encodable = eventBuffer$3.map(event => {
        let nodesCount = 0;
        const sliceInfos = event.slices.map(slice => {
            nodesCount += slice.nodes.length;
            return {
                ts: slice.ts,
                len: slice.nodes.length,
            };
        });
        const flatNodes = event.slices.reduce((acc, slice) => acc.concat(slice.nodes), []);
        const optNodes = optimizeDOMStorage
            ? optimizeStorageForDOMNodesSlice(flatNodes)
            : flatNodes.map(toProtocolNodeInfo).filter((x) => Boolean(x));
        if (optNodes.length < nodesCount) {
            sliceInfos[0].len -= nodesCount - optNodes.length;
        }
        const mergedSlice = {
            ts: event.slices[0].ts,
            nodes: optNodes,
            sliceInfos,
        };
        const e = {
            seq: event.seq,
            type: event.type,
            timestamp: event.ts,
            elapsedTime: event.elapsed,
            uiEnv: event.env,
            initNodes: [mergedSlice],
        };
        return e;
    });
    onUiReaction(encodable);
    encodable.unshift(...extraEvents);
    save(encodable);
    eventBuffer$3 = [];
    task.done();
}
window.__tel__dom = {
    get idCount() {
        return idCount;
    },
    get idMap() {
        return idMap;
    },
    get nodeInfo() {
        return nodeInfo;
    },
};
function getIframeMap() {
    return iframeMap;
}

const NODE_ID_TAP_COUNTS_MAX = 30;
const NODE_ID_TAP_TOTAL_COUNTS_MAX = 200;
let nodeIdTapCounts = new WeakMap();
let nodeIdTapTotalCounts = new WeakMap();
let nodeIdTapCountsResetTimer;
function start$5() {
    const rootNodes = document.documentElement.childNodes;
    for (const node of rootNodes) {
        if (node.__wxElement) {
            node.__wxElement.addListener('tap', onTap, {
                capture: true,
            });
        }
    }
    nodeIdTapCountsResetTimer = window.setInterval(() => {
        nodeIdTapCounts = new WeakMap();
    }, 60000);
}
function reset$4() {
    nodeIdTapCounts = new WeakMap();
    nodeIdTapTotalCounts = new WeakMap();
    clearInterval(nodeIdTapCountsResetTimer);
    const rootNodes = document.documentElement.childNodes;
    for (const node of rootNodes) {
        if (node.__wxElement) {
            node.__wxElement.removeListener('tap', onTap, {
                capture: true,
            });
        }
    }
}
function onTap(expEvent) {
    const originalEvent = expEvent.__originalEvent;
    const touch = originalEvent.changedTouches[0];
    if (!touch) {
        return;
    }
    const { clientX, clientY, pageX, pageY } = touch;
    const target = getTarget(originalEvent);
    if (!target)
        return;
    const currentTapCount = nodeIdTapCounts.get(target) || 0;
    const currentTotalTapCount = nodeIdTapTotalCounts.get(target) || 0;
    if (currentTapCount >= NODE_ID_TAP_COUNTS_MAX)
        return;
    if (currentTotalTapCount >= NODE_ID_TAP_TOTAL_COUNTS_MAX)
        return;
    nodeIdTapCounts.set(target, currentTapCount + 1);
    nodeIdTapTotalCounts.set(target, currentTotalTapCount + 1);
    const wxEle = target.__wxElement;
    let nodeId;
    if (config.coslessMode && config.enabledFeatures.skipExparserWhenCosless) {
        nodeId = 0;
        if (shouldExcludeForCosless(expEvent.target)) {
            return;
        }
    }
    else {
        nodeId = getNodeId$1(wxEle ?? expEvent.target);
        if (nodeId !== undefined && shouldExclude(nodeId) !== ExcludeLevel.None) {
            return;
        }
    }
    const { height, width, x, y } = target.getBoundingClientRect();
    const { n, selector, ancestorPath } = getElementsSelector(target, undefined, { collectTokens: config.enabledFeatures.collectTokens });
    const seq = nextSeq();
    const timestamp = getNow();
    const elapsedTime = elapsed();
    schedule({
        fn: task => {
            const protocolEvent = {
                type: EventType.Tap,
                seq,
                timestamp,
                elapsedTime,
                selector,
                selectorN: n,
                nodeId,
                tap: {
                    x: clientX,
                    y: clientY,
                    pageX,
                    pageY,
                    relativeX: (clientX - x) / width,
                    relativeY: (clientY - y) / height,
                    identifier: touch.identifier,
                    ancestorPath: ancestorPath,
                    innerText: getText(target),
                    isRage: isRage({ pageX, pageY, timestamp }),
                    innerImage: getImage(target),
                },
            };
            save([protocolEvent]);
            task.done();
        },
    });
}
function getTarget(e) {
    return e.target.shadowRoot && e.composed ? e.composedPath()[0] || e.target : e.target;
}

let observer;
const eventBuffer$2 = {
    scan: [],
    transform: [],
};
function start$4() {
    observer = new MutationObserver(scan);
    observer.observe(document.body, {
        attributes: true,
        subtree: true,
    });
}
function scan(mutations) {
    const filtered = mutations.filter(m => m.attributeName?.startsWith('data-'));
    if (!filtered.length)
        return;
    const event = {
        seq: nextSeq(),
        ts: elapsed(),
        mutations: filtered,
    };
    eventBuffer$2.scan.push(event);
    schedule({
        fn: async (task) => {
            try {
                processMutationEvents(task);
                await task.promise;
            }
            catch (e) {
                wxConsole.error('[tel], processMutationEvent error', e);
            }
        },
        priority: Priority.High,
        desc: `exp.compat.process_scanned`,
    });
}
async function processMutationEvents(task) {
    while (eventBuffer$2.scan.length) {
        const scanned = eventBuffer$2.scan.shift();
        const mutations = scanned.mutations;
        for (const e of mutations) {
            const targetId = getNodeId$1(e.target.__wxElement);
            if (!targetId) {
                continue;
            }
            getNodeInfo$1(targetId);
            const record = {
                type: MutationType.Attributes,
                target: targetId,
            };
            const event = {
                seq: scanned.seq,
                type: EventType.Mutation,
                ts: elapsed(),
                env: UIEnv.Exparser,
                mutations: [record],
            };
            const shouldCollect = handleAttributesEvent(e, record);
            if (shouldCollect) {
                eventBuffer$2.transform.push(event);
            }
        }
    }
    task.done();
    if (eventBuffer$2.transform.length) {
        transformToEncode$2();
    }
}
function handleAttributesEvent(e, record) {
    const id = getNodeId$1(e.target.__wxElement);
    const info = getNodeInfo$1(id);
    if (!info)
        return false;
    const value = e.target.getAttribute(e.attributeName);
    if (info.attributes && info.attributes[e.attributeName] === value) {
        return false;
    }
    if (value && shouldDropAttrValue(e.attributeName || '', value)) {
        return false;
    }
    record.attributeName = e.attributeName;
    record.attributeValue = value ?? undefined;
    if (!info.attributes) {
        info.attributes = value
            ? {
                [e.attributeName]: value,
            }
            : {};
    }
    else if (value) {
        info.attributes = {
            ...info.attributes,
            [e.attributeName]: value,
        };
    }
    else {
        const attrs = { ...info.attributes };
        delete attrs[e.attributeName];
        info.attributes = attrs;
    }
    return true;
}
function transformToEncode$2() {
    schedule({
        id: 'dom.compat.transform',
        fn: _transformToEncode$2,
    });
}
function _transformToEncode$2(task) {
    const encodable = eventBuffer$2.transform.map(event => {
        const e = {
            seq: event.seq,
            type: event.type,
            elapsedTime: event.ts,
            uiEnv: event.env,
            mutationRecords: event.mutations.map((mutation) => {
                const record = {
                    ...mutation,
                    addedNodes: undefined,
                };
                return record;
            }),
        };
        return e;
    });
    save(encodable);
    eventBuffer$2.transform = [];
    task.done();
}

const EVENT_INTERVAL = 50;
const DEBOUNCE_TIME = 100;
const MAX_WAIT = 500;
let debounceTransform$1 = debounce(transformToEncode$1, DEBOUNCE_TIME, { maxWait: MAX_WAIT });
let eventBuffer$1 = [];
function start$3() {
    if (config.sync) {
        debounceTransform$1 = debounce(transformToEncode$1, DEBOUNCE_TIME, { maxWait: 100 });
    }
    window.addEventListener('scroll', onScroll, COMMON_EVENTE_LISTENER_OPTIONS);
    initialScroll();
}
function reset$3() {
    eventBuffer$1 = [];
    window.removeEventListener('scroll', onScroll, true);
}
function onScroll(event) {
    const target = getEventTarget(event);
    const isWin = isWindowTarget(target);
    eventBuffer$1.push({
        seq: nextSeq(),
        time: elapsed(),
        target,
        x: isWin ? getWindowScrollX() : target.scrollLeft,
        y: isWin ? getWindowScrollY() : target.scrollTop,
    });
    debounceTransform$1();
}
function initialScroll() {
    eventBuffer$1.push({
        seq: nextSeq(),
        time: elapsed(),
        target: document.documentElement,
        x: window.scrollX,
        y: window.scrollY,
    });
    debounceTransform$1();
}
function transformToEncode$1() {
    schedule({
        id: 'scroll',
        fn: _transformToEncode$1,
    });
}
function _transformToEncode$1(task) {
    if (!eventBuffer$1.length)
        return;
    const filtered = [eventBuffer$1[0]];
    if (eventBuffer$1.length > 2) {
        for (let i = 1; i < eventBuffer$1.length - 1; i++) {
            const first = filtered[filtered.length - 1];
            const middle = eventBuffer$1[i];
            const last = eventBuffer$1[i + 1];
            if (first.target === middle.target && middle.target === last.target && last.time - first.time < EVENT_INTERVAL) {
                continue;
            }
            filtered.push(middle);
        }
        filtered.push(eventBuffer$1[eventBuffer$1.length - 1]);
    }
    else if (eventBuffer$1.length === 2) {
        filtered.push(eventBuffer$1[1]);
    }
    const targets = new Map([[document.documentElement, -1]]);
    const protocolEvents = [];
    for (const e of filtered) {
        let id = targets.get(e.target);
        if (!id) {
            const el = e.target.__wxElement;
            if (el) {
                id = getNodeId$1(el);
                if (!id) {
                    const host = el.ownerShadowRoot?.__wxHost;
                    if (host && host.is === 'wx-scroll-view') {
                        id = getNodeId$1(host);
                        if (id) {
                            targets.set(e.target, id);
                        }
                    }
                }
            }
        }
        if (!id) {
            wxRunOnDebug(() => {
                let str = `${e.target.tagName}.${e.target.className}`;
                let current = e.target;
                while ((current = current.parentElement)) {
                    str += `,${current.tagName}.${e.target.className}`;
                }
                wxConsole.log(`[tel] scroll not found ${str}`, e.target);
            });
            continue;
        }
        else if (id !== -1 && shouldExclude(id) !== ExcludeLevel.None) {
            continue;
        }
        const event = {
            seq: e.seq,
            elapsedTime: e.time,
            type: EventType.Scroll,
            nodeId: id,
            scroll: {
                scrollLeft: e.x,
                scrollTop: e.y,
            },
        };
        protocolEvents.push(event);
    }
    eventBuffer$1 = [];
    save(protocolEvents);
    task.done();
}
function isWindowTarget(target) {
    return target === document.documentElement || target === document.body;
}
function getWindowScrollX() {
    return window.scrollX || document.documentElement.scrollLeft || document.body.scrollLeft;
}
function getWindowScrollY() {
    return window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;
}

class RepetitivePatternDetector {
    pointerDecay;
    timeDecay;
    onReport;
    _ws;
    _cs;
    _t;
    _wh;
    _dw;
    _pw;
    _rp;
    constructor(contextSize = 100, windowSize = 5, threshold = 3, pointerDecay = 5, timeDecay = 10, onReport = (event, ev) => { }) {
        this.pointerDecay = pointerDecay;
        this.timeDecay = timeDecay;
        this.onReport = onReport;
        this._ws = windowSize;
        this._cs = contextSize;
        this._t = threshold;
        this._wh = [];
        this._dw = [];
        this._pw = [];
        this._rp = new Map();
    }
    normalize(data) {
        if (this._pw.length > this._cs) {
            this._pw.shift();
        }
        const x = data[0];
        const y = data[1];
        const z = data[2];
        let similarIndex = -1;
        for (let i = 0; i < this._pw.length; i++) {
            const node = this._pw[i];
            if (Math.abs(node[0] - x) < this.pointerDecay && Math.abs(node[1] - y) < this.pointerDecay && Math.abs(node[2] - z) < this.timeDecay) {
                similarIndex = i;
            }
        }
        if (similarIndex === -1) {
            this._pw.push([x, y, z]);
            similarIndex = this._pw.length - 1;
        }
        return this.hash(this._pw[similarIndex]);
    }
    hash(data) {
        let hash = 5381;
        for (let i = 0; i < data.length; i++) {
            hash = (hash * 33) ^ data[i];
        }
        return hash >>> 0;
    }
    lastTs = Date.now();
    pushEnd(event) {
        this.pushEvent([event[0], event[1], Date.now() - this.lastTs]);
        this.lastTs = Date.now();
    }
    registerEventHandler(eventHandler) {
        this.onReport = eventHandler;
    }
    _consequenceDetection = 0;
    _lastReported = 0;
    _simpleDetection = 0;
    pushEvent(event) {
        if (this._dw.length > this._cs) {
            this._dw.shift();
            this._wh.shift();
        }
        const nextEvent = this.normalize(event);
        if (this._dw[this._dw.length - 1] === nextEvent) {
            this._simpleDetection++;
            if (this._simpleDetection > this._t * this._ws && Date.now() - this._lastReported > 30000) {
                this.onReport([event[0], event[1], this._simpleDetection], EventType.SimpleRepetitiveEvent);
                this._lastReported = Date.now();
            }
            return;
        }
        else {
            this._simpleDetection = 0;
        }
        this._dw.push(nextEvent);
        const windowHash = this.hash(this._dw.slice(-this._ws));
        if (this._wh.includes(windowHash)) {
            let count = this._rp.get(windowHash) || 0;
            this._consequenceDetection++;
            count = count + 1;
            if (this._consequenceDetection > this._t && Date.now() - this._lastReported > 30000) {
                this.onReport([event[0], event[1], count], EventType.ConsecutiveRepetitiveEvent);
                this._lastReported = Date.now();
            }
            this._rp.set(windowHash, count);
        }
        else {
            this._consequenceDetection = 0;
        }
        if (this._rp.size > this._cs) {
            this._rp.clear();
        }
        this._wh.push(windowHash);
    }
    clear() {
        this._wh = [];
        this._dw = [];
    }
}

function offset() {
    return {
        x: -document.documentElement.offsetLeft,
        y: -document.documentElement.offsetTop,
    };
}

const MOVE_EVENT_COLLECT_INTERVAL = 32;
const MOVE_EVENT_COLLECT_DISTANCE = 5;
const START_END_EVENT_TYPES = new Set([EventType.TouchStart, EventType.TouchEnd, EventType.TouchCancel, EventType.MouseDown, EventType.MouseUp]);
let eventBuffer = [];
const listeners = {};
function start$2() {
    const root = document.documentElement;
    listeners.touchstart = onTouch.bind(null, EventType.TouchStart);
    listeners.touchmove = onTouch.bind(null, EventType.TouchMove);
    listeners.touchend = onTouch.bind(null, EventType.TouchEnd);
    listeners.touchcancel = onTouch.bind(null, EventType.TouchCancel);
    listeners.mousedown = onMouse.bind(null, EventType.MouseDown);
    listeners.mousemove = onMouse.bind(null, EventType.MouseMove);
    listeners.mouseup = onMouse.bind(null, EventType.MouseUp);
    root.addEventListener('touchstart', listeners.touchstart, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('touchend', listeners.touchend, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('touchmove', listeners.touchmove, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('touchcancel', listeners.touchcancel, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('mousedown', listeners.mousedown, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('mousemove', listeners.mousemove, COMMON_EVENTE_LISTENER_OPTIONS);
    root.addEventListener('mouseup', listeners.mouseup, COMMON_EVENTE_LISTENER_OPTIONS);
}
function reset$2() {
    eventBuffer = [];
    for (const key in listeners) {
        document.documentElement.removeEventListener(key, listeners[key], true);
    }
}
const detector = new RepetitivePatternDetector(100, 6, 15, 5, 30, (ev, type) => {
    eventBuffer.push({
        seq: nextSeq(),
        time: elapsed(),
        type,
        id: ev[2],
        x: ev[0],
        y: ev[1],
    });
});
function onTouch(type, event) {
    if (!event.isTrusted)
        return;
    const changedTouches = event.changedTouches;
    const time = elapsed();
    for (const touch of changedTouches) {
        eventBuffer.push({
            seq: nextSeq(),
            time,
            type,
            id: touch.identifier,
            target: getEventTarget(event),
            x: Math.round(touch.clientX),
            y: Math.round(touch.clientY),
        });
        if (type === EventType.TouchEnd) {
            detector.pushEnd([Math.round(touch.clientX), Math.round(touch.clientY)]);
        }
    }
    debounceTransform();
}
function onMouse(type, event) {
    if (!event.isTrusted)
        return;
    const _offset = offset();
    eventBuffer.push({
        seq: nextSeq(),
        time: elapsed(),
        type,
        target: getEventTarget(event),
        x: Math.round(event.clientX) + _offset.x,
        y: Math.round(event.clientY) + _offset.y,
    });
    debounceTransform();
}
const debounceTransform = debounce(transformToEncode, 500, { maxWait: 1500 });
function transformToEncode() {
    schedule({
        id: 'pointer',
        fn: _transformToEncode,
    });
}
function _transformToEncode(task) {
    let filtered = eventBuffer;
    if (eventBuffer.length > 1) {
        filtered = [];
        const pointerState = {};
        for (const e of eventBuffer) {
            const { type, id = -1, target } = e;
            const host = target?.__wxElement;
            let nodeId;
            if (host) {
                nodeId = getNodeId$1(host);
            }
            e.nodeId = nodeId;
            if (nodeId !== undefined && shouldExclude(nodeId) !== ExcludeLevel.None) {
                continue;
            }
            if (START_END_EVENT_TYPES.has(type)) {
                if (pointerState[id]) {
                    delete pointerState[id];
                }
                filtered.push(e);
                continue;
            }
            const prevState = pointerState[id];
            if (prevState) {
                if (shouldDiscard(prevState, e)) {
                    continue;
                }
                else {
                    filtered.push(e);
                }
            }
            else {
                filtered.push(e);
            }
            pointerState[id] = e;
        }
    }
    const protocolEvents = filtered.map(e => {
        const event = {
            seq: e.seq,
            elapsedTime: e.time,
            type: e.type,
            nodeId: e.nodeId,
            pointers: [
                {
                    identifier: e.id,
                    x: e.x,
                    y: e.y,
                },
            ],
        };
        return event;
    });
    eventBuffer = [];
    save(protocolEvents);
    task.done();
}
function shouldDiscard(a, b) {
    return (Math.abs(b.time - a.time) < MOVE_EVENT_COLLECT_INTERVAL ||
        (Math.abs(a.y - b.y) < MOVE_EVENT_COLLECT_DISTANCE && Math.abs(a.x - b.x) < MOVE_EVENT_COLLECT_DISTANCE));
}

const HEART_BEAT_INTERVAL = 1 * 1000;
let task;
function start$1() {
    {
        const sendHeartBeat = () => {
            wx?.publish?.('wxobs:heartbeat', { webviewId: window.__webviewId__ });
            task = setTimeout(sendHeartBeat, HEART_BEAT_INTERVAL);
        };
        sendHeartBeat();
    }
}
function reset$1() {
    clearTimeout(task);
    task = null;
}
window.__tel__heartbeat = {
    stopHeartBeat: reset$1,
};

let isResetting = false;
async function start(opt) {
    try {
        while (window.__webviewId__ === undefined) {
            wxConsole.warn('[tel] start wait for webviewId');
            await new Promise(resolve => setTimeout(resolve, 100));
        }
        setConfig(opt);
        start$h();
        const skipExparser = opt.coslessMode && config.enabledFeatures.skipExparserWhenCosless;
        if (!skipExparser) {
            start$g();
        }
        start$i();
        start$d();
        start$f();
        start$e();
        if (!skipExparser) {
            start$6();
            start$2();
            start$8();
            start$c();
        }
        start$5();
        start$7();
        start$a();
        if (!skipExparser) {
            start$9();
            init$2().then(() => {
                start$3();
            });
        }
        start$b();
        if (!skipExparser) {
            init$1([document.head]);
        }
        init$3();
        if (config.dataAttrs && !skipExparser) {
            start$4();
        }
        init$5();
        if (!skipExparser) {
            init$4();
        }
        start$1();
    }
    catch (e) {
        wxConsole.error(e);
        handleError({ type: ErrorType.WebviewStart, e, sdkVersion: opt.sdkVersion, uuid: opt.uuid });
    }
}
async function reset() {
    try {
        isResetting = true;
        await reset$c();
        reset$j();
        const skipExparser = config.coslessMode && config.enabledFeatures.skipExparserWhenCosless;
        if (!skipExparser) {
            reset$6();
            reset$2();
            reset$9();
            reset$e();
        }
        reset$4();
        reset$7();
        reset$b();
        if (!skipExparser) {
            reset$3();
        }
        reset$d();
        if (!skipExparser) {
            reset$5();
            reset$f();
        }
        reset$h();
        if (!skipExparser) {
            reset$g();
            reset$a();
        }
        reset$1();
        reset$i();
        clearStorage();
        resetConfig();
    }
    catch (e) {
        wxConsole.error(e);
        handleError({ type: ErrorType.WebviewTeardown, e, sdkVersion: config.sdkVersion, uuid: config.uuid });
    }
    finally {
        isResetting = false;
    }
}
if (window.wx) {
    wx?.subscribe?.('wxobs:reporterChange', async (payload) => {
        wxConsole.log('[tel] reporterChange', payload);
        config.reporter = payload.newReporter;
        if (config.reporter === window.__webviewId__) {
            count(MetricType.ReporterChanged);
            wxConsole.log('[tel] reporterChange to me', window.__webviewId__);
            init$5();
            init$4();
        }
    });
}

let started = false;
function waitForResetAndStart(opt) {
    if (isResetting) {
        wxConsole.warn('[tel] Waiting for reset to complete before starting');
        setTimeout(() => waitForResetAndStart(opt), 100);
    }
    else {
        start(opt);
    }
}
function init(opt) {
    if (started)
        return;
    started = true;
    if (!supported()) {
        reportUnsupported(opt.uuid, opt.projectId, opt.sdkVersion);
        return;
    }
    wxConsole.log('[tel] init opt', opt);
    if (opt.sync) {
        setTimeout(() => waitForResetAndStart(opt), 1000);
    }
    else {
        requestIdleCallback(() => waitForResetAndStart(opt), {
            timeout: 5000,
        });
    }
}
async function teardown() {
    if (!started) {
        wxConsole.warn('[tel] no recording task');
        return;
    }
    started = false;
    wxConsole.log('[tel] teardowning');
    await reset();
    wxConsole.log('[tel] teardowned');
}
function resetCosInfo(cosInfo) {
    if (cosInfo) {
        wxConsole.log('[tel] reset cos info', cosInfo);
        setConfig({ cosInfo });
    }
}
function syncState(state) {
    if (state.customUid) {
        setCustomUid(state.customUid);
    }
    if (state.localUid) {
        setLocalUid(state.localUid);
    }
    if (state.sessionLifeTimeMeta) {
        setConfig({
            weSessionId: state.sessionLifeTimeMeta.weSessionId,
            wesessionMeta: state.sessionLifeTimeMeta,
        });
    }
    if (state.coslessMode) {
        setConfig({
            coslessMode: state.coslessMode,
        });
    }
    if (state.networkStatus) {
        setConfig({
            networkStatus: state.networkStatus,
        });
    }
}
var index = { init, resetCosInfo, teardown, canvasCollect, syncState };
function supported() {
    return (window.MutationObserver &&
        window.IntersectionObserver &&
        window.WeakMap &&
        'now' in performance &&
        window.SubtleCrypto &&
        'indexedDB' in window &&
        (location.protocol === 'https:' || window.__devtoolsConfig));
}

export { CSSProps, CSSPropsReverse, EventType, ExparserCompPropType, ExparserNodeType, IWxInputType, MemoDomain, MutationType, ReportEnvType, RouteType, UIEnv, VideoEventType, WxComponentEventNumType, index as default, init, resetCosInfo, syncState, teardown };
